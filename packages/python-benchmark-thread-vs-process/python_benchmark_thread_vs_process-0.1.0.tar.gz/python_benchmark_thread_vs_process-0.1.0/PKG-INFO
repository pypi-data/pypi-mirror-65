Metadata-Version: 2.1
Name: python_benchmark_thread_vs_process
Version: 0.1.0
Summary: Python Benchmark: multi-thread vs multi-process
Home-page: https://github.com/minhng-info/python-benchmark-thread-vs-process
Author: minhng-info
Author-email: minhng92@gmail.com
Maintainer: minhng-info
Maintainer-email: minhng92@gmail.com
License: MIT
Download-URL: https://github.com/minhng-info/python-benchmark-thread-vs-process/tarball/master
Description: <img src='https://img.shields.io/pypi/l/python_benchmark_thread_vs_process.svg'> <img src='https://img.shields.io/pypi/pyversions/python_benchmark_thread_vs_process.svg'> <img src='https://img.shields.io/pypi/v/python_benchmark_thread_vs_process.svg'> <img src='https://img.shields.io/pypi/dm/python_benchmark_thread_vs_process.svg'> <img src='https://img.shields.io/badge/code%20style-black-000000.svg'>
        
        # python-benchmark-thread-vs-process
        A benchmark on speed evaluation between multi-thread and multi-process in Python
        
        # Installation
        
        ```
        $ pip install python_benchmark_thread_vs_process
        ```
        
        # Usage
        
        Run benchmarking with the following command:
        
        ```
        $ python_benchmark_thread_vs_process
        ```
        
        # Benchmarks
        
        TODO
        
        # Contributing
        
        * Step 1. Fork on **master** branch.
        * Step 2. Install **pre-commit** on the local dev environment.
        
        ```
        pip install pre-commit
        pre-commit install
        
        ```
        
        * Step 3. Write unit-test (if any).
        * Step 4. Write code to pass the tests.
        * Step 5. Make sure that the new code passes all the pre-commmit conditions.
        
        ```
        sh pre_commit.sh
        
        ```
        
        * Step 6. Create pull request.
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation
Requires-Python: >2, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4,
Description-Content-Type: text/markdown
