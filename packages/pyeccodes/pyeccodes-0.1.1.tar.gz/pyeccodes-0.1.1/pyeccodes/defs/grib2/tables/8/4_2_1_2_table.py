def load(h):
    return ({'abbr': 0, 'code': 0, 'title': 'Water depth', 'units': 'm'},
            {'abbr': 1, 'code': 1, 'title': 'Water temperature', 'units': 'K'},
            {'abbr': 2, 'code': 2, 'title': 'Water fraction', 'units': 'Proportion'},
            {'abbr': 3, 'code': 3, 'title': 'Sediment thickness', 'units': 'm'},
            {'abbr': 4, 'code': 4, 'title': 'Sediment temperature', 'units': 'K'},
            {'abbr': 5, 'code': 5, 'title': 'Ice thickness', 'units': 'm'},
            {'abbr': 6, 'code': 6, 'title': 'Ice temperature', 'units': 'K'},
            {'abbr': 7, 'code': 7, 'title': 'Ice cover', 'units': 'Proportion'},
            {'abbr': 8,
             'code': 8,
             'title': 'Land cover (0 = water, 1 = land)',
             'units': 'Proportion'},
            {'abbr': 9,
             'code': 9,
             'title': 'Shape factor with respect to salinity profile',
             'units': '-'},
            {'abbr': 10,
             'code': 10,
             'title': 'Shape factor with respect to temperature profile in thermocline',
             'units': '-'},
            {'abbr': 11,
             'code': 11,
             'title': 'Attenuation coefficient of water with respect to solar attenuation '
                      'coefficient of water with respect to solar radiation',
             'units': 'm-1'},
            {'abbr': 12, 'code': 12, 'title': 'Salinity', 'units': 'kg kg-1'})
