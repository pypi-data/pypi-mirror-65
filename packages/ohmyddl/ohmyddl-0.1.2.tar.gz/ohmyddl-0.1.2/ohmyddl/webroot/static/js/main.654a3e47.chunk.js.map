{"version":3,"sources":["login/LoginPage.js","home/HomePage.js","worklist/WorkListPage.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","props","state","userName","password","savePassword","logining","redirect","errorMessage","e","name","target","value","type","checked","this","setState","bool","mStorage","window","localStorage","setItem","console","log","removeItem","preventDefault","username","axios","post","then","r","data","ret","onLoginStatusChange","msg","message","catch","error","getItem","id","LinearProgress","onSubmit","onLogin","TextField","onChange","onTextChange","autoComplete","label","fullWidth","FormControlLabel","control","Checkbox","color","defaultChecked","Typography","Button","disabled","variant","to","React","Component","HomePage","isLogined","getFormatTimeFromTimestamp","t","timestamp","parseFloat","date","Date","toLocaleDateString","toLocaleTimeString","WorkItem","TableRow","TableCell","courseName","onClick","workName","deadline","WorkListPage","workData","update_at","refershing","disable_cache","onRefersh","tb","map","item","onItemClick","key","TableContainer","component","Paper","Table","TableHead","TableBody","Fab","App","sid_available","status","path","response","redirectTo","check_auth","className","AppBar","position","Toolbar","onLogout","s","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.654a3e47.chunk.js","sourcesContent":["import React from 'react';\nimport './LoginPage.css'\n\nimport {\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Button,\n    Typography,\n    LinearProgress\n} from '@material-ui/core';\n\nimport {\n    Redirect\n} from 'react-router-dom';\nimport axios from 'axios';\n\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            password: '',\n            savePassword: true,\n            logining: false,\n            redirect: '',\n            errorMessage: ''\n        }\n    }\n\n    onTextChange(e) {\n        let name = e.target.name;\n        let value = '';\n        if(e.target.type === 'checkbox'){\n            value = e.target.checked;\n        }else{\n            value = e.target.value;\n        }\n        this.setState({\n            [name]: value\n        });\n        // console.log(\"update: \" + name + ' -> ' + value);\n    }\n    savePassword(bool) {\n        let mStorage = window.localStorage;\n        if(bool){\n            mStorage.setItem(\"userName\", this.state.userName);\n            mStorage.setItem(\"password\", this.state.password);\n            console.log(\"saved username and password\");\n        }else{\n            mStorage.removeItem(\"userName\");\n            mStorage.removeItem(\"password\");\n            console.log(\"clear username and password\");\n        }\n    }\n    onLogin(e) {\n        e.preventDefault();\n        let username = this.state.userName;\n        let password = this.state.password;\n        console.log(\"savePassword: \" + this.state.savePassword);\n        this.setState({\n            logining: true,\n            errorMessage: ''\n        });\n        axios.post(\n            \"/api/login\",\n            {\n                username: username,\n                password: password\n            }\n        ).then((r) => {\n            console.log(r.data);\n            if(r.data.ret === 0){\n                console.log(\"登录成功\");\n\n                if(this.state.savePassword) {\n                    this.savePassword(true);\n                }else{\n                    this.savePassword(false);\n                }\n\n                this.props.onLoginStatusChange(true);\n                this.setState({\n                    redirect: \"/worklist\",\n                    logining: false\n                });\n            }else{\n                let msg = \"\";\n                if(r.data.ret === 2){\n                    msg = \"学号或密码错误\";\n                }else{\n                    msg = r.data.message;\n                }\n                console.log(\"登录失败：\" + r.data.message);\n                this.setState({\n                    errorMessage: msg,\n                    logining: false\n                });\n            }\n        }).catch((error) => {\n            this.setState({\n                errorMessage: \"登录失败:\" + error,\n                logining: false\n            });\n        });\n    }\n\n    componentDidMount() {\n        let mStorage = window.localStorage;\n        let userName = mStorage.getItem(\"userName\");\n        let password = mStorage.getItem(\"password\");\n        if(userName !== null) {\n            this.setState({\n                userName: userName\n            });\n        }\n        if(password !== null) {\n            this.setState({\n                password: password\n            });\n        }\n    }\n\n    render() {\n        return <div id=\"login-container\">\n            {\n                this.state.logining &&\n                <LinearProgress></LinearProgress>\n            }\n            <h1>登录</h1>\n            <form onSubmit={(e) => this.onLogin(e)}>\n                <TextField onChange={(e) => this.onTextChange(e)} name=\"userName\" autoComplete=\"off\" label=\"学号\" fullWidth type=\"number\" value={this.state.userName}></TextField>\n                <TextField onChange={(e) => this.onTextChange(e)} name=\"password\" autoComplete=\"off\" label=\"密码\" fullWidth type=\"password\" value={this.state.password}></TextField>\n                <FormControlLabel label=\"记住密码\" control={\n                    <Checkbox onChange={(e) => this.onTextChange(e)} color=\"primary\" name=\"savePassword\" defaultChecked={true}></Checkbox>\n                }></FormControlLabel>\n                {\n                    this.state.errorMessage &&\n                    <Typography id=\"error-message\">{this.state.errorMessage}</Typography>\n                }\n                <Button disabled={this.state.logining} variant=\"contained\" color=\"primary\" fullWidth id=\"submit-btn\" type=\"submit\">\n                    {\n                        this.state.logining ? '登录中...' : '登录'\n                    }\n                </Button>\n            </form>\n            <Typography id=\"bottom-tips\">\n                密码是一卡通密码，仅用于 *.shu.edu.cn。无须多虑。\n            </Typography>\n            {\n                this.state.redirect &&\n                <Redirect to={this.state.redirect}></Redirect>\n            }\n        </div>\n    }\n}\n\n\nexport default LoginPage;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass HomePage extends React.Component {\n    render() {\n        return <div>\n                <Redirect to={this.props.isLogined ? \"/worklist\" : \"/login\"}></Redirect>\n        </div>\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport './WorkListPage.css';\nimport {\n    TableContainer,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow,\n    Paper,\n    Typography,\n    Fab,\n    LinearProgress\n} from '@material-ui/core';\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport axios from 'axios';\n\n\nfunction getFormatTimeFromTimestamp(t) {\n    let timestamp = parseFloat(t) * 1000;\n    if(timestamp < 0) {\n        return \"未知\"\n    }\n    if(timestamp < 1585885000) {\n        return \"-\";\n    }\n    let date = new Date(timestamp);\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\n}\n\nclass WorkListPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            workData: [],\n            update_at: 0,\n            refershing: false\n        }\n    }\n    onItemClick(e) {\n        console.log(\"clicked\");\n        console.log(e.target);\n    }\n\n    onRefersh(disable_cache) {\n        console.log(\"refershing...\");\n        this.setState({\n            refershing: true\n        });\n        axios.post(\"/api/get_unfinish_works\", {\n            disable_cache: disable_cache\n        }).then((r) => {\n            console.log(r);\n            if(r.data.ret === 0){\n                this.setState({\n                    workData: r.data.data,\n                    update_at: r.data.update_at\n                });\n            }else{\n                console.log(\"刷新失败！\");\n            }\n            \n        }).catch((error) => {\n            console.log(\"刷新失败:\" + error);\n        }).then(() => {\n            this.setState({\n                refershing: false\n            });\n        });\n    }\n    componentDidMount() {\n        this.onRefersh(false);\n    }\n    render() {\n        // const mock = [\n        //     {courseName: '信号分析与处理', workName: '实践项目二', deadline: '20200202'},\n        //     {courseName: '微机原理A(1)', workName: '快排双向链表', deadline: '20200202'},\n        //     {courseName: '英语中级翻译', workName: '快排双向链表2', deadline: '20200202'},\n        //     {courseName: '运筹模型与案例', workName: '快排双向链表3', deadline: '20200202'},\n        //     {courseName: '电机应用基础', workName: '快排双向链表4', deadline: '20200202'},\n\n        // ];\n        let tb = this.state.workData.map((item) => \n            <WorkItem onClick={(e) => this.onItemClick(e)}\n                courseName={item.courseName}\n                workName={item.workName}\n                deadline={item.deadline}\n                key={item.workName}>\n            </WorkItem>\n        );\n        return <div id=\"worklist-container\">\n            {\n                this.state.refershing &&\n                <LinearProgress variant=\"query\"></LinearProgress>\n            }\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>课程</TableCell>\n                            <TableCell>作业</TableCell>\n                            <TableCell>截止时间</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        { tb }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Typography id=\"update-time\">数据更新于：{getFormatTimeFromTimestamp(this.state.update_at)}</Typography>\n            <Fab disabled={this.state.refershing} color=\"primary\" id=\"refersh-btn\" onClick={() => this.onRefersh(true)}>\n                <RefreshIcon></RefreshIcon>\n            </Fab>\n        </div>\n    }\n}\n\nfunction WorkItem(props) {\n    return <TableRow>\n        <TableCell>{props.courseName}</TableCell>\n        <TableCell onClick={props.onClick}>{props.workName}</TableCell>\n        <TableCell>{getFormatTimeFromTimestamp(props.deadline)}</TableCell>\n    </TableRow>\n}\n\nexport default WorkListPage;\n","import React from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nimport LoginPage from './login/LoginPage';\nimport HomePage from './home/HomePage';\nimport WorkListPage from './worklist/WorkListPage'\n\nimport axios from 'axios';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let mStorage = window.localStorage;\n    this.state = {\n      isLogined: mStorage.getItem(\"isLogined\") === \"true\",\n      redirect: ''\n    };\n    console.log = function() {};\n  }\n\n  check_auth() {\n    axios.post(\"/api/check_sid\").then((r) => {\n      console.log(r);\n      if (r.data.ret === 0 && r.data.sid_available) {\n        console.log(\"sid available\");\n        this.setState({\n          redirect: \"/worklist\"\n        });\n        this.onLoginStatusChange(true);\n      } else {\n        console.log(\"sid inavailable\");\n        this.setState({\n          redirect: \"/login\"\n        });\n        this.onLoginStatusChange(false);\n      }\n    });\n  }\n\n  onLoginStatusChange(status) {\n    this.setState({\n      isLogined: status\n    });\n    let mStorage = window.localStorage;\n    mStorage.setItem(\"isLogined\", \"\" + status);\n    console.log(\"isLogined? \" + status);\n  }\n\n  redirectTo(path) {\n    this.setState({\n      redirect: path\n    });\n  }\n\n  onLogout() {\n    axios.post(\"/api/logout\").then((response) => {\n      if (response.data.ret === 0) {\n        console.log(\"logout success\");\n        this.onLoginStatusChange(false);\n        this.redirectTo(\"/login\");\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.check_auth();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <AppBar position=\"static\">\n            <Toolbar id=\"navbar\">\n              <Typography variant=\"h5\" id=\"navbar-brand\">Oh-my-ddl</Typography>\n              {\n                this.state.isLogined &&\n                <Button onClick={() => this.onLogout()}>登出</Button>\n              }\n            </Toolbar>\n            {\n              this.state.redirect &&\n              <Redirect to={this.state.redirect}></Redirect>\n            }\n          </AppBar>\n          <Switch>\n            <Route path=\"/login\">\n              <LoginPage onLoginStatusChange={(s) => this.onLoginStatusChange(s)} />\n            </Route>\n\n            <Route path=\"/worklist\">\n              <WorkListPage />\n            </Route>\n\n            <Route path=\"/\">\n              <HomePage isLogined={this.state.isLogined}/>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}