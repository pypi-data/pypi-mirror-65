# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import secret_service_pb2 as secret__service__pb2


class SecretServiceStub(object):
  """-----------------------------------------------------------------------------
  ---------------- Service definition
  -----------------------------------------------------------------------------
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GenerateKey = channel.unary_unary(
        '/secret_service.SecretService/GenerateKey',
        request_serializer=secret__service__pb2.GenerateKeyRequest.SerializeToString,
        response_deserializer=secret__service__pb2.GenerateKeyResponse.FromString,
        )
    self.GetPublicKey = channel.unary_unary(
        '/secret_service.SecretService/GetPublicKey',
        request_serializer=secret__service__pb2.PublicKeyRequest.SerializeToString,
        response_deserializer=secret__service__pb2.PublicKeyResponse.FromString,
        )
    self.Sign = channel.unary_unary(
        '/secret_service.SecretService/Sign',
        request_serializer=secret__service__pb2.SignRequest.SerializeToString,
        response_deserializer=secret__service__pb2.SignResponse.FromString,
        )


class SecretServiceServicer(object):
  """-----------------------------------------------------------------------------
  ---------------- Service definition
  -----------------------------------------------------------------------------
  """

  def GenerateKey(self, request, context):
    """API to request key generation
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPublicKey(self, request, context):
    """API to request a public key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Sign(self, request, context):
    """API to request a signature
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SecretServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GenerateKey': grpc.unary_unary_rpc_method_handler(
          servicer.GenerateKey,
          request_deserializer=secret__service__pb2.GenerateKeyRequest.FromString,
          response_serializer=secret__service__pb2.GenerateKeyResponse.SerializeToString,
      ),
      'GetPublicKey': grpc.unary_unary_rpc_method_handler(
          servicer.GetPublicKey,
          request_deserializer=secret__service__pb2.PublicKeyRequest.FromString,
          response_serializer=secret__service__pb2.PublicKeyResponse.SerializeToString,
      ),
      'Sign': grpc.unary_unary_rpc_method_handler(
          servicer.Sign,
          request_deserializer=secret__service__pb2.SignRequest.FromString,
          response_serializer=secret__service__pb2.SignResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'secret_service.SecretService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
