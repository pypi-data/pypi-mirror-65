{"version":3,"sources":["webpack:///./src/panels/lovelace/common/compute-tooltip.ts","webpack:///./src/panels/lovelace/components/hui-buttons-base.ts","webpack:///./src/panels/lovelace/header-footer/hui-buttons-header-footer.ts"],"names":["__webpack_require__","d","__webpack_exports__","computeTooltip","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_0__","hass","config","title","stateName","tooltip","entity","states","computeStateName","tap_action","hold_action","tapTooltip","computeActionTooltip","holdTooltip","state","isHold","action","localize","navigation_path","url_path","service","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","value","queryAll","_hass","_badges","forEach","badge","index","stateObj","configEntities","html","map","entityConf","_handleAction","actionHandler","hasHold","hasAction","hasDoubleClick","double_tap_action","icon","image","ev","currentTarget","handleAction","Object","assign","detail","static","css","LitElement","HuiButtonsHeaderFooter","entities","_configEntities","processConfigEntities","requestUpdate"],"mappings":"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","file":"chunk.62af9bcb3f24844e52b4.js","sourcesContent":["import { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ActionConfig } from \"../../../data/lovelace\";\n\ninterface Config {\n  entity?: string;\n  title?: string;\n  tap_action?: ActionConfig;\n  hold_action?: ActionConfig;\n  double_tap_action?: ActionConfig;\n}\n\nexport const computeTooltip = (hass: HomeAssistant, config: Config): string => {\n  if (config.title === null) {\n    return \"\";\n  }\n\n  if (config.title) {\n    return config.title;\n  }\n\n  let stateName = \"\";\n  let tooltip = \"\";\n\n  if (config.entity) {\n    stateName =\n      config.entity in hass.states\n        ? computeStateName(hass.states[config.entity])\n        : config.entity;\n  }\n\n  if (!config.tap_action && !config.hold_action) {\n    return stateName;\n  }\n\n  const tapTooltip = config.tap_action\n    ? computeActionTooltip(hass, stateName, config.tap_action, false)\n    : \"\";\n  const holdTooltip = config.hold_action\n    ? computeActionTooltip(hass, stateName, config.hold_action, true)\n    : \"\";\n\n  const newline = tapTooltip && holdTooltip ? \"\\n\" : \"\";\n\n  tooltip = tapTooltip + newline + holdTooltip;\n\n  return tooltip;\n};\n\nfunction computeActionTooltip(\n  hass: HomeAssistant,\n  state: string,\n  config: ActionConfig,\n  isHold: boolean\n) {\n  if (!config || !config.action || config.action === \"none\") {\n    return \"\";\n  }\n\n  let tooltip =\n    (isHold\n      ? hass.localize(\"ui.panel.lovelace.cards.picture-elements.hold\")\n      : hass.localize(\"ui.panel.lovelace.cards.picture-elements.tap\")) + \" \";\n\n  switch (config.action) {\n    case \"navigate\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.navigate_to\",\n        \"location\",\n        config.navigation_path\n      )}`;\n      break;\n    case \"url\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.url\",\n        \"url_path\",\n        config.url_path\n      )}`;\n      break;\n    case \"toggle\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.toggle\",\n        \"name\",\n        state\n      )}`;\n      break;\n    case \"call-service\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.call_service\",\n        \"name\",\n        config.service\n      )}`;\n      break;\n    case \"more-info\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.more_info\",\n        \"name\",\n        state\n      )}`;\n      break;\n  }\n\n  return tooltip;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  css,\n  CSSResult,\n  queryAll,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-ripple\";\n\nimport \"../../../components/entity/state-badge\";\nimport \"../../../components/ha-icon\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { computeTooltip } from \"../common/compute-tooltip\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { StateBadge } from \"../../../components/entity/state-badge\";\nimport { actionHandler } from \"../common/directives/action-handler-directive\";\nimport { hasAction } from \"../common/has-action\";\nimport { ActionHandlerEvent } from \"../../../data/lovelace\";\nimport { handleAction } from \"../common/handle-action\";\nimport { EntitiesCardEntityConfig } from \"../cards/types\";\n\n@customElement(\"hui-buttons-base\")\nexport class HuiButtonsBase extends LitElement {\n  @property() public configEntities?: EntitiesCardEntityConfig[];\n  @queryAll(\"state-badge\") protected _badges!: StateBadge[];\n  private _hass?: HomeAssistant;\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    this._badges.forEach((badge, index: number) => {\n      badge.hass = hass;\n      badge.stateObj = hass.states[this.configEntities![index].entity];\n    });\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      ${(this.configEntities || []).map((entityConf) => {\n        const stateObj = this._hass!.states[entityConf.entity];\n        if (!stateObj) {\n          return html`<div class='missing'><iron-icon icon=\"hass:alert\"></div>`;\n        }\n\n        return html`\n          <div>\n            <state-badge\n              title=${computeTooltip(this._hass!, entityConf)}\n              @action=${this._handleAction}\n              .actionHandler=${actionHandler({\n                hasHold: hasAction(entityConf.hold_action),\n                hasDoubleClick: hasAction(entityConf.double_tap_action),\n              })}\n              .config=${entityConf}\n              .hass=${this._hass}\n              .stateObj=${stateObj}\n              .overrideIcon=${entityConf.icon}\n              .overrideImage=${entityConf.image}\n              stateColor\n              tabindex=\"0\"\n            ></state-badge>\n            <mwc-ripple unbounded></mwc-ripple>\n          </div>\n        `;\n      })}\n    `;\n  }\n\n  private _handleAction(ev: ActionHandlerEvent) {\n    const config = (ev.currentTarget as any).config as EntitiesCardEntityConfig;\n    handleAction(\n      this,\n      this._hass!,\n      { tap_action: { action: \"toggle\" }, ...config },\n      ev.detail.action!\n    );\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: flex;\n        justify-content: space-evenly;\n      }\n      .missing {\n        color: #fce588;\n      }\n      state-badge {\n        cursor: pointer;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-buttons-base\": HuiButtonsBase;\n  }\n}\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nimport \"../components/hui-buttons-base\";\n\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { ButtonsHeaderFooterConfig } from \"./types\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-buttons-header-footer\")\nexport class HuiButtonsHeaderFooter extends LitElement\n  implements LovelaceHeaderFooter {\n  public static getStubConfig(): object {\n    return { entities: [] };\n  }\n\n  @property() public hass?: HomeAssistant;\n  private _configEntities?: EntityConfig[];\n\n  public setConfig(config: ButtonsHeaderFooterConfig): void {\n    this._configEntities = processConfigEntities(config.entities);\n    this.requestUpdate();\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <hui-buttons-base\n        .hass=${this.hass}\n        .configEntities=${this._configEntities}\n      ></hui-buttons-base>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-buttons-header-footer\": HuiButtonsHeaderFooter;\n  }\n}\n"],"sourceRoot":""}