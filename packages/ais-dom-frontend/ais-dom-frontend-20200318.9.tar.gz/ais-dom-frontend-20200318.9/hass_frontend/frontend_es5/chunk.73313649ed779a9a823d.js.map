{"version":3,"sources":["webpack:///./src/panels/lovelace/common/compute-tooltip.ts","webpack:///./src/panels/lovelace/components/hui-buttons-base.ts","webpack:///./src/panels/lovelace/header-footer/hui-buttons-header-footer.ts"],"names":["__webpack_require__","d","__webpack_exports__","computeTooltip","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_0__","hass","config","title","stateName","entity","states","computeStateName","tap_action","hold_action","tapTooltip","computeActionTooltip","holdTooltip","state","isHold","action","tooltip","localize","concat","navigation_path","url_path","service","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiButtonsBase","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","_assertThisInitialized","_inherits","kind","decorators","property","key","value","queryAll","_this2","_hass","_badges","forEach","badge","index","stateObj","configEntities","_this3","html","_templateObject","map","entityConf","_templateObject3","_handleAction","actionHandler","hasHold","hasAction","hasDoubleClick","double_tap_action","icon","image","_templateObject2","ev","currentTarget","handleAction","Object","assign","detail","static","css","_templateObject4","LitElement","HuiButtonsHeaderFooter","entities","_configEntities","processConfigEntities","requestUpdate"],"mappings":"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","file":"chunk.73313649ed779a9a823d.js","sourcesContent":["import { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ActionConfig } from \"../../../data/lovelace\";\n\ninterface Config {\n  entity?: string;\n  title?: string;\n  tap_action?: ActionConfig;\n  hold_action?: ActionConfig;\n  double_tap_action?: ActionConfig;\n}\n\nexport const computeTooltip = (hass: HomeAssistant, config: Config): string => {\n  if (config.title === null) {\n    return \"\";\n  }\n\n  if (config.title) {\n    return config.title;\n  }\n\n  let stateName = \"\";\n  let tooltip = \"\";\n\n  if (config.entity) {\n    stateName =\n      config.entity in hass.states\n        ? computeStateName(hass.states[config.entity])\n        : config.entity;\n  }\n\n  if (!config.tap_action && !config.hold_action) {\n    return stateName;\n  }\n\n  const tapTooltip = config.tap_action\n    ? computeActionTooltip(hass, stateName, config.tap_action, false)\n    : \"\";\n  const holdTooltip = config.hold_action\n    ? computeActionTooltip(hass, stateName, config.hold_action, true)\n    : \"\";\n\n  const newline = tapTooltip && holdTooltip ? \"\\n\" : \"\";\n\n  tooltip = tapTooltip + newline + holdTooltip;\n\n  return tooltip;\n};\n\nfunction computeActionTooltip(\n  hass: HomeAssistant,\n  state: string,\n  config: ActionConfig,\n  isHold: boolean\n) {\n  if (!config || !config.action || config.action === \"none\") {\n    return \"\";\n  }\n\n  let tooltip =\n    (isHold\n      ? hass.localize(\"ui.panel.lovelace.cards.picture-elements.hold\")\n      : hass.localize(\"ui.panel.lovelace.cards.picture-elements.tap\")) + \" \";\n\n  switch (config.action) {\n    case \"navigate\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.navigate_to\",\n        \"location\",\n        config.navigation_path\n      )}`;\n      break;\n    case \"url\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.url\",\n        \"url_path\",\n        config.url_path\n      )}`;\n      break;\n    case \"toggle\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.toggle\",\n        \"name\",\n        state\n      )}`;\n      break;\n    case \"call-service\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.call_service\",\n        \"name\",\n        config.service\n      )}`;\n      break;\n    case \"more-info\":\n      tooltip += `${hass.localize(\n        \"ui.panel.lovelace.cards.picture-elements.more_info\",\n        \"name\",\n        state\n      )}`;\n      break;\n  }\n\n  return tooltip;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  css,\n  CSSResult,\n  queryAll,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-ripple\";\n\nimport \"../../../components/entity/state-badge\";\nimport \"../../../components/ha-icon\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { computeTooltip } from \"../common/compute-tooltip\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { StateBadge } from \"../../../components/entity/state-badge\";\nimport { actionHandler } from \"../common/directives/action-handler-directive\";\nimport { hasAction } from \"../common/has-action\";\nimport { ActionHandlerEvent } from \"../../../data/lovelace\";\nimport { handleAction } from \"../common/handle-action\";\nimport { EntitiesCardEntityConfig } from \"../cards/types\";\n\n@customElement(\"hui-buttons-base\")\nexport class HuiButtonsBase extends LitElement {\n  @property() public configEntities?: EntitiesCardEntityConfig[];\n  @queryAll(\"state-badge\") protected _badges!: StateBadge[];\n  private _hass?: HomeAssistant;\n\n  set hass(hass: HomeAssistant) {\n    this._hass = hass;\n    this._badges.forEach((badge, index: number) => {\n      badge.hass = hass;\n      badge.stateObj = hass.states[this.configEntities![index].entity];\n    });\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      ${(this.configEntities || []).map((entityConf) => {\n        const stateObj = this._hass!.states[entityConf.entity];\n        if (!stateObj) {\n          return html`<div class='missing'><iron-icon icon=\"hass:alert\"></div>`;\n        }\n\n        return html`\n          <div>\n            <state-badge\n              title=${computeTooltip(this._hass!, entityConf)}\n              @action=${this._handleAction}\n              .actionHandler=${actionHandler({\n                hasHold: hasAction(entityConf.hold_action),\n                hasDoubleClick: hasAction(entityConf.double_tap_action),\n              })}\n              .config=${entityConf}\n              .hass=${this._hass}\n              .stateObj=${stateObj}\n              .overrideIcon=${entityConf.icon}\n              .overrideImage=${entityConf.image}\n              stateColor\n              tabindex=\"0\"\n            ></state-badge>\n            <mwc-ripple unbounded></mwc-ripple>\n          </div>\n        `;\n      })}\n    `;\n  }\n\n  private _handleAction(ev: ActionHandlerEvent) {\n    const config = (ev.currentTarget as any).config as EntitiesCardEntityConfig;\n    handleAction(\n      this,\n      this._hass!,\n      { tap_action: { action: \"toggle\" }, ...config },\n      ev.detail.action!\n    );\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: flex;\n        justify-content: space-evenly;\n      }\n      .missing {\n        color: #fce588;\n      }\n      state-badge {\n        cursor: pointer;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-buttons-base\": HuiButtonsBase;\n  }\n}\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nimport \"../components/hui-buttons-base\";\n\nimport { LovelaceHeaderFooter } from \"../types\";\nimport { ButtonsHeaderFooterConfig } from \"./types\";\nimport { processConfigEntities } from \"../common/process-config-entities\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-buttons-header-footer\")\nexport class HuiButtonsHeaderFooter extends LitElement\n  implements LovelaceHeaderFooter {\n  public static getStubConfig(): object {\n    return { entities: [] };\n  }\n\n  @property() public hass?: HomeAssistant;\n  private _configEntities?: EntityConfig[];\n\n  public setConfig(config: ButtonsHeaderFooterConfig): void {\n    this._configEntities = processConfigEntities(config.entities);\n    this.requestUpdate();\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <hui-buttons-base\n        .hass=${this.hass}\n        .configEntities=${this._configEntities}\n      ></hui-buttons-base>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-buttons-header-footer\": HuiButtonsHeaderFooter;\n  }\n}\n"],"sourceRoot":""}