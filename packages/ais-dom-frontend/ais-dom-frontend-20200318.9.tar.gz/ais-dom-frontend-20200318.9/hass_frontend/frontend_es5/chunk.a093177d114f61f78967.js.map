{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/dialogs/generic/show-dialog-box.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/layouts/hass-tabs-subpage.ts","webpack:///./src/components/ha-fab.ts","webpack:///./src/data/user.ts","webpack:///./src/data/person.ts","webpack:///./src/panels/config/person/show-dialog-person-detail.ts","webpack:///./src/panels/config/person/ha-config-person.ts"],"names":["customElement","property","css","_templateObject","html","_templateObject2","this","header","_templateObject3","_templateObject4","LitElement","__webpack_require__","d","__webpack_exports__","showAlertDialog","showConfirmationDialog","showPromptDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadGenericDialog","Promise","all","e","then","bind","showDialogHelper","element","dialogParams","extra","resolve","origCancel","cancel","origConfirm","confirm","fireEvent","dialogTag","dialogImport","Object","assign","prompt","out","confirmation","compare","caseInsensitiveCompare","a","b","toLowerCase","_decorate","_initialize","_LitElement","F","_LitElement2","HaConfigSection","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","key","value","classMap","narrow","isWide","vertical","horizontal","static","HassTabsSubpage","type","String","attribute","Boolean","reflect","memoizeOne","tabs","activeTab","showAdvanced","_components","_language","filter","page","component","core","isComponentLoaded","_this2","hass","advancedOnly","map","active","_tabTapped","path","icon","translationKey","localize","name","changedProperties","_this3","_get","prototype","has","_activeTab","find","tab","route","prefix","includes","_this$hass$userData","_getTabs","userData","config","components","language","hassio","_backTapped","_templateObject5","_templateObject6","bottom-bar","ev","navigate","currentTarget","backPath","backCallback","history","back","_templateObject7","MwcFab","customElements","get","_MwcFab","_MwcFab2","HaFab","classes","mdc-fab--mini","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","ripple","disabled","showIconAtEnd","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","fetchUsers","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","callWS","stop","_x","updateUser","_ref3","_callee3","userId","params","_context3","user_id","_x4","_x5","_x6","deleteUser","_ref4","_callee4","_context4","_x7","_x8","createPerson","values","loadPersonDetailDialog","HaConfigPerson","undefined","_storageItems","_configItems","configSections","persons","entry","_openEditEntry","_createPerson","_templateObject8","changedProps","_fetchData","personData","_usersLoad","sent","storage","sort","ent1","ent2","_openDialog","users","currentPerson","used","Set","_i","_arr","coll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","pers","add","err","currentUserId","user","id","_callee5","_context5","systemLogDetailParams","_allowedUsers","createEntry","_createEntry","_callee2","created","_context2","_x2","updateEntry","_updateEntry","updated","personId","updates","person_id","ent","_x3","removeEntry","_removeEntry","title","text","dismissText","confirmText","t0","_templateObject9","define"],"mappings":"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","file":"chunk.a093177d114f61f78967.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n  customElement,\n} from \"lit-element\";\n\n@customElement(\"ha-card\")\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-card\": HaCard;\n  }\n}\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogParams {\n  confirmText?: string;\n  text?: string;\n  title?: string;\n}\n\nexport interface AlertDialogParams extends BaseDialogParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n}\n\nexport interface PromptDialogParams extends BaseDialogParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  confirm?: (out?: string) => void;\n}\n\nexport interface DialogParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogParams,\n  extra?: {\n    confirmation?: DialogParams[\"confirmation\"];\n    prompt?: DialogParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { confirmation: true }) as Promise<\n    boolean\n  >;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { customElement, LitElement, html, css, property } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends LitElement {\n  @property() public isWide: boolean = false;\n\n  protected render() {\n    return html`\n      <div\n        class=\"content ${classMap({\n          narrow: !this.isWide,\n        })}\"\n      >\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div\n          class=\"together layout ${classMap({\n            narrow: !this.isWide,\n            vertical: !this.isWide,\n            horizontal: this.isWide,\n          })}\"\n        >\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .layout {\n        display: flex;\n      }\n\n      .horizontal {\n        flex-direction: row;\n      }\n\n      .vertical {\n        flex-direction: column;\n      }\n\n      .flex-auto {\n        flex: 1 1 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        max-width: 400px;\n        margin-right: 40px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .intro {\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n    `;\n  }\n}\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  customElement,\n  css,\n  CSSResult,\n  PropertyValues,\n} from \"lit-element\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-paper-icon-button-arrow-prev\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { Route, HomeAssistant } from \"../types\";\nimport { navigate } from \"../common/navigate\";\nimport \"@material/mwc-ripple\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport memoizeOne from \"memoize-one\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string;\n  name?: string;\n  core?: boolean;\n  advancedOnly?: boolean;\n  icon?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n  @property() public backCallback?: () => void;\n  @property({ type: Boolean }) public hassio = false;\n  @property() public route!: Route;\n  @property() public tabs!: PageNavigation[];\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n  @property() private _activeTab?: PageNavigation;\n\n  private _getTabs = memoizeOne(\n    (\n      tabs: PageNavigation[],\n      activeTab: PageNavigation | undefined,\n      showAdvanced: boolean | undefined,\n      _components,\n      _language\n    ) => {\n      const shownTabs = tabs.filter(\n        (page) =>\n          (!page.component ||\n            page.core ||\n            isComponentLoaded(this.hass, page.component)) &&\n          (!page.advancedOnly || showAdvanced)\n      );\n\n      return shownTabs.map(\n        (page) =>\n          html`\n            <div\n              class=\"tab ${classMap({\n                active: page === activeTab,\n              })}\"\n              @click=${this._tabTapped}\n              .path=${page.path}\n            >\n              ${this.narrow\n                ? html`\n                    <ha-icon .icon=${page.icon}></ha-icon>\n                  `\n                : \"\"}\n              ${!this.narrow || page === activeTab\n                ? html`\n                    <span class=\"name\"\n                      >${page.translationKey\n                        ? this.hass.localize(page.translationKey)\n                        : name}</span\n                    >\n                  `\n                : \"\"}\n              <mwc-ripple></mwc-ripple>\n            </div>\n          `\n      );\n    }\n  );\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.find((tab) =>\n        this.route.prefix.includes(tab.path)\n      );\n    }\n  }\n\n  protected render(): TemplateResult {\n    const tabs = this._getTabs(\n      this.tabs,\n      this._activeTab,\n      this.hass.userData?.showAdvanced,\n      this.hass.config.components,\n      this.hass.language\n    );\n\n    return html`\n      <div class=\"toolbar\">\n        <ha-paper-icon-button-arrow-prev\n          aria-label=\"Back\"\n          .hassio=${this.hassio}\n          @click=${this._backTapped}\n        ></ha-paper-icon-button-arrow-prev>\n        ${this.narrow\n          ? html`\n              <div main-title><slot name=\"header\"></slot></div>\n            `\n          : \"\"}\n        ${tabs.length > 1 || !this.narrow\n          ? html`\n              <div id=\"tabbar\" class=${classMap({ \"bottom-bar\": this.narrow })}>\n                ${tabs}\n              </div>\n            `\n          : \"\"}\n        <div id=\"toolbar-icon\">\n          <slot name=\"toolbar-icon\"></slot>\n        </div>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _tabTapped(ev: MouseEvent): void {\n    navigate(this, (ev.currentTarget as any).path, true);\n  }\n\n  private _backTapped(): void {\n    if (this.backPath) {\n      navigate(this, this.backPath);\n      return;\n    }\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: 65px;\n        background-color: var(--sidebar-background-color);\n        font-weight: 400;\n        color: var(--sidebar-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 0 16px;\n        box-sizing: border-box;\n      }\n\n      #tabbar {\n        display: flex;\n        font-size: 14px;\n      }\n\n      #tabbar.bottom-bar {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        padding: 0 16px;\n        box-sizing: border-box;\n        background-color: var(--sidebar-background-color);\n        border-top: 1px solid var(--divider-color);\n        justify-content: space-between;\n        z-index: 1;\n        font-size: 12px;\n        width: 100%;\n      }\n\n      #tabbar:not(.bottom-bar) {\n        margin: auto;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, 0);\n      }\n\n      .tab {\n        padding: 0 32px;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n        height: 64px;\n        cursor: pointer;\n      }\n\n      .name {\n        white-space: nowrap;\n      }\n\n      .tab.active {\n        color: var(--primary-color);\n      }\n\n      #tabbar:not(.bottom-bar) .tab.active {\n        border-bottom: 2px solid var(--primary-color);\n      }\n\n      .bottom-bar .tab {\n        padding: 0 16px;\n        width: 20%;\n        min-width: 0;\n      }\n\n      ha-menu-button,\n      ha-paper-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        pointer-events: auto;\n        color: var(--sidebar-icon-color);\n      }\n\n      [main-title] {\n        margin: 0 0 0 24px;\n        line-height: 20px;\n        flex-grow: 1;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 65px);\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      #toolbar-icon {\n        position: absolute;\n        right: 16px;\n      }\n\n      :host([narrow]) .content {\n        height: calc(100% - 128px);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n","import { classMap } from \"lit-html/directives/class-map\";\nimport { html, customElement } from \"lit-element\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive\";\n\nimport \"@material/mwc-fab\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nimport { Fab } from \"@material/mwc-fab\";\n// tslint:disable-next-line\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render() {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon\n          ? html`\n              <ha-icon .icon=${this.icon}></ha-icon>\n            `\n          : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport interface User {\n  id: string;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  system_generated: boolean;\n  group_ids: string[];\n  credentials: Credential[];\n}\n\ninterface UpdateUserParams {\n  name?: User[\"name\"];\n  group_ids?: User[\"group_ids\"];\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (hass: HomeAssistant, name: string) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n","import { HomeAssistant } from \"../types\";\n\nexport interface Person {\n  id: string;\n  name: string;\n  user_id?: string;\n  device_trackers?: string[];\n}\n\nexport interface PersonMutableParams {\n  name: string;\n  user_id: string | null;\n  device_trackers: string[];\n}\n\nexport const fetchPersons = (hass: HomeAssistant) =>\n  hass.callWS<{\n    storage: Person[];\n    config: Person[];\n  }>({ type: \"person/list\" });\n\nexport const createPerson = (\n  hass: HomeAssistant,\n  values: PersonMutableParams\n) =>\n  hass.callWS<Person>({\n    type: \"person/create\",\n    ...values,\n  });\n\nexport const updatePerson = (\n  hass: HomeAssistant,\n  personId: string,\n  updates: Partial<PersonMutableParams>\n) =>\n  hass.callWS<Person>({\n    type: \"person/update\",\n    person_id: personId,\n    ...updates,\n  });\n\nexport const deletePerson = (hass: HomeAssistant, personId: string) =>\n  hass.callWS({\n    type: \"person/delete\",\n    person_id: personId,\n  });\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { Person, PersonMutableParams } from \"../../../data/person\";\nimport { User } from \"../../../data/user\";\n\nexport interface PersonDetailDialogParams {\n  entry?: Person;\n  users: User[];\n  createEntry: (values: PersonMutableParams) => Promise<unknown>;\n  updateEntry: (updates: Partial<PersonMutableParams>) => Promise<unknown>;\n  removeEntry: () => Promise<boolean>;\n}\n\nexport const loadPersonDetailDialog = () =>\n  import(/* webpackChunkName: \"person-detail-dialog\" */ \"./dialog-person-detail\");\n\nexport const showPersonDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: PersonDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-person-detail\",\n    dialogImport: loadPersonDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport { HomeAssistant, Route } from \"../../../types\";\nimport {\n  Person,\n  fetchPersons,\n  updatePerson,\n  deletePerson,\n  createPerson,\n} from \"../../../data/person\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport \"../../../layouts/hass-loading-screen\";\nimport { compare } from \"../../../common/string/compare\";\nimport \"../ha-config-section\";\nimport {\n  showPersonDetailDialog,\n  loadPersonDetailDialog,\n} from \"./show-dialog-person-detail\";\nimport { User, fetchUsers } from \"../../../data/user\";\nimport { configSections } from \"../ha-panel-config\";\nimport { showConfirmationDialog } from \"../../../dialogs/generic/show-dialog-box\";\n\nclass HaConfigPerson extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public isWide?: boolean;\n  @property() public narrow?: boolean;\n  @property() public route!: Route;\n  @property() private _storageItems?: Person[];\n  @property() private _configItems?: Person[];\n  private _usersLoad?: Promise<User[]>;\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      this._storageItems === undefined ||\n      this._configItems === undefined\n    ) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n    const hass = this.hass;\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        back-path=\"/config\"\n        .tabs=${configSections.persons}\n      >\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\"\n            >${hass.localize(\"ui.panel.config.person.caption\")}</span\n          >\n          <span slot=\"introduction\">\n            ${hass.localize(\"ui.panel.config.person.introduction\")}\n            ${this._configItems.length > 0\n              ? html`\n                  <p>\n                    ${hass.localize(\n                      \"ui.panel.config.person.note_about_persons_configured_in_yaml\"\n                    )}\n                  </p>\n                `\n              : \"\"}\n          </span>\n          <ha-card class=\"storage\">\n            ${this._storageItems.map((entry) => {\n              return html`\n                <paper-item @click=${this._openEditEntry} .entry=${entry}>\n                  <paper-item-body>\n                    ${entry.name}\n                  </paper-item-body>\n                </paper-item>\n              `;\n            })}\n            ${this._storageItems.length === 0\n              ? html`\n                  <div class=\"empty\">\n                    ${hass.localize(\n                      \"ui.panel.config.person.no_persons_created_yet\"\n                    )}\n                    <mwc-button @click=${this._createPerson}>\n                      ${hass.localize(\n                        \"ui.panel.config.person.create_person\"\n                      )}</mwc-button\n                    >\n                  </div>\n                `\n              : html``}\n          </ha-card>\n          ${this._configItems.length > 0\n            ? html`\n                <ha-card header=\"Configuration.yaml persons\">\n                  ${this._configItems.map((entry) => {\n                    return html`\n                      <paper-item>\n                        <paper-item-body>\n                          ${entry.name}\n                        </paper-item-body>\n                      </paper-item>\n                    `;\n                  })}\n                </ha-card>\n              `\n            : \"\"}\n        </ha-config-section>\n      </hass-tabs-subpage>\n\n      <ha-fab\n        ?is-wide=${this.isWide}\n        ?narrow=${this.narrow}\n        icon=\"hass:plus\"\n        title=\"${hass.localize(\"ui.panel.config.person.add_person\")}\"\n        @click=${this._createPerson}\n      ></ha-fab>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    loadPersonDetailDialog();\n  }\n\n  private async _fetchData() {\n    this._usersLoad = fetchUsers(this.hass!);\n    const personData = await fetchPersons(this.hass!);\n\n    this._storageItems = personData.storage.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n    this._configItems = personData.config.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n  }\n\n  private _createPerson() {\n    this._openDialog();\n  }\n\n  private _openEditEntry(ev: MouseEvent) {\n    const entry: Person = (ev.currentTarget! as any).entry;\n    this._openDialog(entry);\n  }\n\n  private _allowedUsers(users: User[], currentPerson?: Person) {\n    const used = new Set();\n    for (const coll of [this._configItems, this._storageItems]) {\n      for (const pers of coll!) {\n        if (pers.user_id) {\n          used.add(pers.user_id);\n        }\n      }\n    }\n    const currentUserId = currentPerson ? currentPerson.user_id : undefined;\n    return users.filter(\n      (user) => user.id === currentUserId || !used.has(user.id)\n    );\n  }\n\n  private async _openDialog(entry?: Person) {\n    const users = await this._usersLoad!;\n\n    showPersonDetailDialog(this, {\n      entry,\n      users: this._allowedUsers(users, entry),\n      createEntry: async (values) => {\n        const created = await createPerson(this.hass!, values);\n        this._storageItems = this._storageItems!.concat(\n          created\n        ).sort((ent1, ent2) => compare(ent1.name, ent2.name));\n      },\n      updateEntry: async (values) => {\n        const updated = await updatePerson(this.hass!, entry!.id, values);\n        this._storageItems = this._storageItems!.map((ent) =>\n          ent === entry ? updated : ent\n        );\n      },\n      removeEntry: async () => {\n        if (\n          !(await showConfirmationDialog(this, {\n            title: this.hass!.localize(\"ui.panel.config.person.confirm_delete\"),\n            text: this.hass!.localize(\"ui.panel.config.person.confirm_delete2\"),\n            dismissText: this.hass!.localize(\"ui.common.no\"),\n            confirmText: this.hass!.localize(\"ui.common.yes\"),\n          }))\n        ) {\n          return false;\n        }\n\n        try {\n          await deletePerson(this.hass!, entry!.id);\n          this._storageItems = this._storageItems!.filter(\n            (ent) => ent !== entry\n          );\n          return true;\n        } catch (err) {\n          return false;\n        }\n      },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        max-width: 600px;\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      paper-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n      }\n      ha-card.storage paper-item {\n        cursor: pointer;\n      }\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n      ha-fab[narrow] {\n        bottom: 84px;\n      }\n      ha-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-person\", HaConfigPerson);\n"],"sourceRoot":""}