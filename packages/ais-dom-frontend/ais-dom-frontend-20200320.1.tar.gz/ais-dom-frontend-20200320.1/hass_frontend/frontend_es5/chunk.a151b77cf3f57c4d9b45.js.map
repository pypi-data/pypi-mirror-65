{"version":3,"sources":["webpack:///./src/panels/lovelace/common/validate-condition.ts","webpack:///./src/panels/lovelace/components/hui-conditional-base.ts","webpack:///./src/panels/lovelace/special-rows/hui-conditional-row.ts"],"names":["checkConditionsMet","conditions","hass","every","c","state","states","entity","state_not","validateConditionalConfig","__webpack_require__","d","__webpack_exports__","HuiConditionalBase","_decorate","customElement","_initialize","_UpdatingElement","F","_UpdatingElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","value","config","Error","isArray","_element","parentElement","removeChild","_config","visible","appendChild","style","setProperty","UpdatingElement","validateConfig","row","createRowElement"],"mappings":"wFAQO,SAASA,EACdC,EACAC,GAEA,OAAOD,EAAWE,MAAM,SAACC,GACvB,IAAMC,EAAQH,EAAKI,OAAOF,EAAEG,QACxBL,EAAMI,OAAOF,EAAEG,QAAQF,MACvB,cAEJ,OAAOD,EAAEC,MAAQA,IAAUD,EAAEC,MAAQA,IAAUD,EAAEI,YAI9C,SAASC,EAA0BR,GACxC,OAAOA,EAAWE,MAChB,SAACC,GAAD,OAASA,EAAEG,SAAWH,EAAEC,OAASD,EAAEI,aAfvCE,EAAAC,EAAAC,EAAA,sBAAAZ,IAAAU,EAAAC,EAAAC,EAAA,sBAAAH,m1DCIO,IAAMI,80LAAbC,CAAA,CADCC,YAAc,yBACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAAN,IAAA,IAAAO,EAAAC,mGAAAC,CAAAC,KAAAV,GAAA,QAAAW,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,SAAAN,KAAAF,OAAAD,EAAAU,EAAAjB,IAAAkB,KAAAC,MAAAZ,EAAA,CAAAG,MAAAU,OAAAN,mDAAAX,EAAAkB,EAAAb,MAAA,yOAAAc,CAAAtB,EAAAI,GAAAJ,EAAA,GAAAF,EAAA,EAAAyB,KAAA,QAAAC,WAAA,CACGC,eADHC,IAAA,OAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,UAAAC,WAAA,IAAAJ,KAAA,QAAAG,IAAA,WAAAC,WAAA,IAAAJ,KAAA,SAAAG,IAAA,iBAAAC,MAKE,SACEC,GAEA,IAAKA,EAAOxC,WACV,MAAM,IAAIyC,MAAM,6BAGlB,IAAKd,MAAMe,QAAQF,EAAOxC,YACxB,MAAM,IAAIyC,MAAM,qCAGlB,IAAKjC,YAA0BgC,EAAOxC,YACpC,MAAM,IAAIyC,MAAM,2BAGdnB,KAAKqB,UAAYrB,KAAKqB,SAASC,eACjCtB,KAAKuB,YAAYvB,KAAKqB,UAGxBrB,KAAKwB,QAAUN,IAxBnB,CAAAL,KAAA,SAAAG,IAAA,SAAAC,MA2BE,WACE,GAAKjB,KAAKqB,UAAarB,KAAKrB,KAA5B,CAIA,IAAM8C,EACJzB,KAAKwB,SAAW/C,YAAmBuB,KAAKwB,QAAQ9C,WAAYsB,KAAKrB,MAE/D8C,IACFzB,KAAKqB,SAAS1C,KAAOqB,KAAKrB,KACrBqB,KAAKqB,SAASC,eACjBtB,KAAK0B,YAAY1B,KAAKqB,WAI1BrB,KAAK2B,MAAMC,YAAY,UAAWH,EAAU,GAAK,cA1CbI,4oPCNvCrC,YAAc,mpBAEb,SAAiB0B,GAGf,GAFAlB,KAAK8B,eAAeZ,IAEfA,EAAOa,IACV,MAAM,IAAIZ,MAAM,sBAGlBnB,KAAKqB,SAAWW,YAAiBd,EAAOa,UARZzC","file":"chunk.a151b77cf3f57c4d9b45.js","sourcesContent":["import { HomeAssistant } from \"../../../types\";\n\nexport interface Condition {\n  entity: string;\n  state?: string;\n  state_not?: string;\n}\n\nexport function checkConditionsMet(\n  conditions: Condition[],\n  hass: HomeAssistant\n): boolean {\n  return conditions.every((c) => {\n    const state = hass.states[c.entity]\n      ? hass!.states[c.entity].state\n      : \"unavailable\";\n\n    return c.state ? state === c.state : state !== c.state_not;\n  });\n}\n\nexport function validateConditionalConfig(conditions: Condition[]): boolean {\n  return conditions.every(\n    (c) => ((c.entity && (c.state || c.state_not)) as unknown) as boolean\n  );\n}\n","import { customElement, property, UpdatingElement } from \"lit-element\";\n\nimport {\n  checkConditionsMet,\n  validateConditionalConfig,\n} from \"../common/validate-condition\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCard } from \"../types\";\nimport { LovelaceRow, ConditionalRowConfig } from \"../entity-rows/types\";\nimport { ConditionalCardConfig } from \"../cards/types\";\n\n@customElement(\"hui-conditional-base\")\nexport class HuiConditionalBase extends UpdatingElement {\n  @property() public hass?: HomeAssistant;\n  @property() protected _config?: ConditionalCardConfig | ConditionalRowConfig;\n  protected _element?: LovelaceCard | LovelaceRow;\n\n  protected validateConfig(\n    config: ConditionalCardConfig | ConditionalRowConfig\n  ): void {\n    if (!config.conditions) {\n      throw new Error(\"No conditions configured.\");\n    }\n\n    if (!Array.isArray(config.conditions)) {\n      throw new Error(\"Conditions should be in an array.\");\n    }\n\n    if (!validateConditionalConfig(config.conditions)) {\n      throw new Error(\"Conditions are invalid.\");\n    }\n\n    if (this._element && this._element.parentElement) {\n      this.removeChild(this._element);\n    }\n\n    this._config = config;\n  }\n\n  protected update(): void {\n    if (!this._element || !this.hass) {\n      return;\n    }\n\n    const visible =\n      this._config && checkConditionsMet(this._config.conditions, this.hass);\n\n    if (visible) {\n      this._element.hass = this.hass;\n      if (!this._element.parentElement) {\n        this.appendChild(this._element);\n      }\n    }\n\n    this.style.setProperty(\"display\", visible ? \"\" : \"none\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-base\": HuiConditionalBase;\n  }\n}\n","import { customElement } from \"lit-element\";\n\nimport { HuiConditionalBase } from \"../components/hui-conditional-base\";\nimport { createRowElement } from \"../create-element/create-row-element\";\nimport { LovelaceRow, ConditionalRowConfig } from \"../entity-rows/types\";\n\n@customElement(\"hui-conditional-row\")\nclass HuiConditionalRow extends HuiConditionalBase implements LovelaceRow {\n  public setConfig(config: ConditionalRowConfig): void {\n    this.validateConfig(config);\n\n    if (!config.row) {\n      throw new Error(\"No row configured.\");\n    }\n\n    this._element = createRowElement(config.row) as LovelaceRow;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-row\": HuiConditionalRow;\n  }\n}\n"],"sourceRoot":""}