{"version":3,"sources":["webpack:///./src/data/shopping-list.ts","webpack:///./src/panels/lovelace/cards/hui-shopping-list-card.ts"],"names":["updateItem","hass","itemId","item","callWS","Object","assign","type","item_id","customElement","HuiShoppingListCard","_LitElement","[object Object]","args","super","_initialize","this","async","Promise","all","__webpack_require__","e","then","bind","document","createElement","property","_config","title","config","_uncheckedItems","_checkedItems","_fetchData","_get","_getPrototypeOf","prototype","call","_unsubEvents","connection","subscribeEvents","unsub","changedProps","oldHass","get","oldConfig","themes","theme","applyThemesOnElement","html","_addItem","localize","_addKeyPress","repeat","id","index","complete","_completeItem","name","_saveEdit","length","_clearItems","actionHandler","css","checkedItems","uncheckedItems","items","fetchItems","key","push","ev","target","checked","catch","value","blur","clearItems","shadowRoot","querySelector","newItem","_newItem","addItem","focus","keyCode","LitElement"],"mappings":"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","file":"chunk.4d84ab2cf1c572a69a9e.js","sourcesContent":["import { HomeAssistant } from \"../types\";\n\nexport interface ShoppingListItem {\n  id: number;\n  name: string;\n  complete: boolean;\n}\n\nexport const fetchItems = (hass: HomeAssistant): Promise<ShoppingListItem[]> =>\n  hass.callWS({\n    type: \"shopping_list/items\",\n  });\n\nexport const updateItem = (\n  hass: HomeAssistant,\n  itemId: number,\n  item: {\n    name?: string;\n    complete?: boolean;\n  }\n): Promise<ShoppingListItem> =>\n  hass.callWS({\n    type: \"shopping_list/items/update\",\n    item_id: itemId,\n    ...item,\n  });\n\nexport const clearItems = (hass: HomeAssistant): Promise<void> =>\n  hass.callWS({\n    type: \"shopping_list/items/clear\",\n  });\n\nexport const addItem = (\n  hass: HomeAssistant,\n  name: string\n): Promise<ShoppingListItem> =>\n  hass.callWS({\n    type: \"shopping_list/items/add\",\n    name,\n  });\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  property,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { repeat } from \"lit-html/directives/repeat\";\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-checkbox/paper-checkbox\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport {\n  fetchItems,\n  updateItem,\n  ShoppingListItem,\n  clearItems,\n  addItem,\n} from \"../../../data/shopping-list\";\nimport { ShoppingListCardConfig, SensorCardConfig } from \"./types\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { actionHandler } from \"../common/directives/action-handler-directive\";\n\n@customElement(\"hui-shopping-list-card\")\nclass HuiShoppingListCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\n      /* webpackChunkName: \"hui-shopping-list-editor\" */ \"../editor/config-elements/hui-shopping-list-editor\"\n    );\n    return document.createElement(\"hui-shopping-list-card-editor\");\n  }\n\n  public static getStubConfig(): object {\n    return {};\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ShoppingListCardConfig;\n\n  @property() private _uncheckedItems?: ShoppingListItem[];\n\n  @property() private _checkedItems?: ShoppingListItem[];\n\n  private _unsubEvents?: Promise<() => Promise<void>>;\n\n  public getCardSize(): number {\n    return (this._config ? (this._config.title ? 1 : 0) : 0) + 3;\n  }\n\n  public setConfig(config: ShoppingListCardConfig): void {\n    this._config = config;\n    this._uncheckedItems = [];\n    this._checkedItems = [];\n    this._fetchData();\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n\n    if (this.hass) {\n      this._unsubEvents = this.hass.connection.subscribeEvents(\n        () => this._fetchData(),\n        \"shopping_list_updated\"\n      );\n      this._fetchData();\n    }\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n\n    if (this._unsubEvents) {\n      this._unsubEvents.then((unsub) => unsub());\n    }\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | SensorCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    return html`\n      <ha-card .header=\"${this._config.title}\">\n        <div class=\"addRow\">\n          <ha-icon\n            class=\"addButton\"\n            @click=\"${this._addItem}\"\n            icon=\"hass:plus\"\n            .title=\"${this.hass!.localize(\n              \"ui.panel.lovelace.cards.shopping-list.add_item\"\n            )}\"\n          >\n          </ha-icon>\n          <paper-item-body>\n            <paper-input\n              no-label-float\n              class=\"addBox\"\n              placeholder=\"${this.hass!.localize(\n                \"ui.panel.lovelace.cards.shopping-list.add_item\"\n              )}\"\n              @keydown=\"${this._addKeyPress}\"\n            ></paper-input>\n          </paper-item-body>\n        </div>\n        ${repeat(\n          this._uncheckedItems!,\n          (item) => item.id,\n          (item, index) =>\n            html`\n              <div class=\"editRow\">\n                <paper-checkbox\n                  slot=\"item-icon\"\n                  id=\"${index}\"\n                  ?checked=\"${item.complete}\"\n                  .itemId=\"${item.id}\"\n                  @click=\"${this._completeItem}\"\n                  tabindex=\"0\"\n                ></paper-checkbox>\n                <paper-item-body>\n                  <paper-input\n                    no-label-float\n                    .value=\"${item.name}\"\n                    .itemId=\"${item.id}\"\n                    @change=\"${this._saveEdit}\"\n                  ></paper-input>\n                </paper-item-body>\n              </div>\n            `\n        )}\n        ${this._checkedItems!.length > 0\n          ? html`\n              <div class=\"divider\"></div>\n              <div class=\"checked\">\n                <span class=\"label\">\n                  ${this.hass!.localize(\n                    \"ui.panel.lovelace.cards.shopping-list.checked_items\"\n                  )}\n                </span>\n                <ha-icon\n                  class=\"clearall\"\n                  @action=${this._clearItems}\n                  .actionHandler=${actionHandler()}\n                  tabindex=\"0\"\n                  icon=\"hass:notification-clear-all\"\n                  .title=\"${this.hass!.localize(\n                    \"ui.panel.lovelace.cards.shopping-list.clear_items\"\n                  )}\"\n                >\n                </ha-icon>\n              </div>\n              ${repeat(\n                this._checkedItems!,\n                (item) => item.id,\n                (item, index) =>\n                  html`\n                    <div class=\"editRow\">\n                      <paper-checkbox\n                        slot=\"item-icon\"\n                        id=\"${index}\"\n                        ?checked=\"${item.complete}\"\n                        .itemId=\"${item.id}\"\n                        @click=\"${this._completeItem}\"\n                        tabindex=\"0\"\n                      ></paper-checkbox>\n                      <paper-item-body>\n                        <paper-input\n                          no-label-float\n                          .value=\"${item.name}\"\n                          .itemId=\"${item.id}\"\n                          @change=\"${this._saveEdit}\"\n                        ></paper-input>\n                      </paper-item-body>\n                    </div>\n                  `\n              )}\n            `\n          : \"\"}\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .editRow,\n      .addRow {\n        display: flex;\n        flex-direction: row;\n      }\n\n      .addButton {\n        padding: 9px 15px 11px 15px;\n        cursor: pointer;\n      }\n\n      paper-item-body {\n        width: 75%;\n      }\n\n      paper-checkbox {\n        padding: 11px 11px 11px 18px;\n      }\n\n      paper-input {\n        --paper-input-container-underline: {\n          display: none;\n        }\n        --paper-input-container-underline-focus: {\n          display: none;\n        }\n        --paper-input-container-underline-disabled: {\n          display: none;\n        }\n        position: relative;\n        top: 1px;\n      }\n\n      .checked {\n        margin-left: 17px;\n        margin-bottom: 11px;\n        margin-top: 11px;\n      }\n\n      .label {\n        color: var(--primary-color);\n      }\n\n      .divider {\n        height: 1px;\n        background-color: var(--divider-color);\n        margin: 10px;\n      }\n\n      .clearall {\n        cursor: pointer;\n        margin-bottom: 3px;\n        float: right;\n        padding-right: 10px;\n      }\n\n      .addRow > ha-icon {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n\n  private async _fetchData(): Promise<void> {\n    if (this.hass) {\n      const checkedItems: ShoppingListItem[] = [];\n      const uncheckedItems: ShoppingListItem[] = [];\n      const items = await fetchItems(this.hass);\n      for (const key in items) {\n        if (items[key].complete) {\n          checkedItems.push(items[key]);\n        } else {\n          uncheckedItems.push(items[key]);\n        }\n      }\n      this._checkedItems = checkedItems;\n      this._uncheckedItems = uncheckedItems;\n    }\n  }\n\n  private _completeItem(ev): void {\n    updateItem(this.hass!, ev.target.itemId, {\n      complete: ev.target.checked,\n    }).catch(() => this._fetchData());\n  }\n\n  private _saveEdit(ev): void {\n    updateItem(this.hass!, ev.target.itemId, {\n      name: ev.target.value,\n    }).catch(() => this._fetchData());\n\n    ev.target.blur();\n  }\n\n  private _clearItems(): void {\n    if (this.hass) {\n      clearItems(this.hass).catch(() => this._fetchData());\n    }\n  }\n\n  private get _newItem(): PaperInputElement {\n    return this.shadowRoot!.querySelector(\".addBox\") as PaperInputElement;\n  }\n\n  private _addItem(ev): void {\n    const newItem = this._newItem;\n\n    if (newItem.value!.length > 0) {\n      addItem(this.hass!, newItem.value!).catch(() => this._fetchData());\n    }\n\n    newItem.value = \"\";\n    if (ev) {\n      newItem.focus();\n    }\n  }\n\n  private _addKeyPress(ev): void {\n    if (ev.keyCode === 13) {\n      this._addItem(null);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-shopping-list-card\": HuiShoppingListCard;\n  }\n}\n"],"sourceRoot":""}