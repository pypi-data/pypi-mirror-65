{"version":3,"sources":["webpack:///./src/components/ha-icon-input.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/lovelace/dashboards/dialog-lovelace-dashboard-detail.ts"],"names":["_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","d","kind","decorators","property","key","value","attribute","type","Boolean","html","label","placeholder","_valueChanged","disabled","errorMessage","ev","detail","fireEvent","bubbles","composed","static","css","LitElement","MwcDialog","customElements","get","createCloseHeading","hass","title","localize","_MwcDialog","style","DialogLovelaceDashboardDetail","async","params","_params","_error","undefined","_urlPath","urlPath","dashboard","_showInSidebar","show_in_sidebar","_icon","icon","_title","_requireAdmin","require_admin","updateComplete","_this$hass$userData","_this$hass$userData2","_this$_params$dashboa","_this$_params$dashboa2","urlInvalid","test","titleInvalid","trim","_close","id","_titleChanged","userData","showAdvanced","_fillUrlPath","_iconChanged","_urlChanged","_showSidebarChanged","_requireAdminChanged","_deleteDashboard","_submitting","_toggleDefault","localStorage","defaultPage","_updateDashboard","_this$hass$userData3","_this$hass$userData4","parts","toLowerCase","split","length","join","target","checked","_this$_params","location","reload","_this$_params2","_this$_params$dashboa3","values","updateDashboard","url_path","mode","createDashboard","err","message","removeDashboard","haStyleDialog"],"mappings":"ooOAcAA,CAAA,CADCC,YAAc,kBACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAC4CE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QAA5CC,EAAA,EAAAC,KAAA,QAAAC,WAAA,CACGC,eADHC,IAAA,QAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,QAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAGGC,eAHHC,IAAA,cAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAIGC,YAAS,CAAEG,UAAW,mBAJzBF,IAAA,eAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAKGC,YAAS,CAAEI,KAAMC,WALpBJ,IAAA,WAAAC,MAAA,KAKiD,GALjD,CAAAJ,KAAA,SAAAG,IAAA,SAAAC,MAOE,WACE,OAAOI;;iBAEMV,KAAKM;iBACLN,KAAKW;uBACCX,KAAKY;yBACHZ,KAAKa;oBACVb,KAAKc;;wBAEDd,KAAKe;;;UAGnBf,KAAKM,OAASN,KAAKY,YACjBF;+BACmBV,KAAKM,OAASN,KAAKY;;cAGtC;;QAxBZ,CAAAV,KAAA,SAAAG,IAAA,gBAAAC,MA6BE,SAAsBU,GACpBhB,KAAKM,MAAQU,EAAGC,OAAOX,MACvBY,YACElB,KACA,gBACA,CAAEM,MAAOU,EAAGC,OAAOX,OACnB,CACEa,SAAS,EACTC,UAAU,MArClB,CAAAlB,KAAA,MAAAmB,QAAA,EAAAhB,IAAA,SAAAC,MA0CE,WACE,OAAOgB;;;;;WA3CsBC,gzCCNjC,MAAMC,EAAYC,eAAeC,IAAI,cAExBC,EAAqB,CAACC,EAAqBC,IAAkBnB;IACtEmB;;iBAEaD,EAAKE,SAAS;;;;;w0LAQ/BtC,CAAA,CADCC,YAAc,cACf,SAAAC,EAAAqC,GAAA,OAAAnC,EADA,cAAAmC,EACwClC,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QAAxCC,EAAA,EAAAC,KAAA,MAAAmB,QAAA,EAAAhB,IAAA,SAAAC,MACE,WACE,MAAO,CACL0B,IACAV;;;;;;;;;;;;;;;;cAJwBE,k1CCEvB,IAAMS,80LAAbzC,CAAA,CADCC,YAAc,qCACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAC8DE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QAA9DC,EAAA,EAAAC,KAAA,QAAAC,WAAA,CACGC,eADHC,IAAA,OAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,UAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAGGC,eAHHC,IAAA,WAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,iBAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAKGC,eALHC,IAAA,QAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAMGC,eANHC,IAAA,SAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAOGC,eAPHC,IAAA,gBAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CASGC,eATHC,IAAA,SAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAUGC,eAVHC,IAAA,cAAAC,MAAA,KAUoC,GAVpC,CAAAJ,KAAA,SAAAG,IAAA,aAAAC,MAYE4B,eACEC,GAEAnC,KAAKoC,QAAUD,EACfnC,KAAKqC,YAASC,EACdtC,KAAKuC,SAAWvC,KAAKoC,QAAQI,SAAW,GACpCxC,KAAKoC,QAAQK,WACfzC,KAAK0C,iBAAmB1C,KAAKoC,QAAQK,UAAUE,gBAC/C3C,KAAK4C,MAAQ5C,KAAKoC,QAAQK,UAAUI,MAAQ,GAC5C7C,KAAK8C,OAAS9C,KAAKoC,QAAQK,UAAUZ,OAAS,GAC9C7B,KAAK+C,cAAgB/C,KAAKoC,QAAQK,UAAUO,gBAAiB,IAE7DhD,KAAK0C,gBAAiB,EACtB1C,KAAK4C,MAAQ,GACb5C,KAAK8C,OAAS,GACd9C,KAAK+C,eAAgB,SAEjB/C,KAAKiD,iBA7Bf,CAAA/C,KAAA,SAAAG,IAAA,SAAAC,MAgCE,WAAmC,IAAA4C,EAAAC,EAAAC,EAAAC,EACjC,IAAKrD,KAAKoC,QACR,OAAO1B,MAET,MAAM4C,EACqB,aAAzBtD,KAAKoC,QAAQI,UACZ,kCAAkCe,KAAKvD,KAAKuC,UACzCiB,GAAgBxD,KAAK8C,OAAOW,OAClC,OAAO/C;;;oBAGSV,KAAK0D;;;mBAGN/B,YACT3B,KAAK4B,KACL5B,KAAKoC,QAAQI,QACTxC,KAAK8C,QACH9C,KAAK4B,KAAKE,SACR,6DAEJ9B,KAAK4B,KAAKE,SACR;;;YAKJ9B,KAAKoC,QAAQK,YAAczC,KAAKoC,QAAQK,UAAUkB,GAChD3D,KAAK4B,KAAKE,SACR,sDAEuB,aAAzB9B,KAAKoC,QAAQI,QACbxC,KAAK4B,KAAKE,SACR,yDAEFpB;kBACIV,KAAKqC,OACH3B;2CACuBV,KAAKqC;sBAE5B;;;6BAGSrC,KAAK8C;qCACG9C,KAAK4D;6BACb5D,KAAK4B,KAAKE,SACjB;6BAEM,QAAAoB,EAAAlD,KAAK4B,KAAKiC,gBAAV,IAAAX,OAAA,EAAAA,EAAoBY,cACxB9D,KAAK+D,kBACLzB;+BACOkB;oCACKxD,KAAK4B,KAAKE,SACxB;;;;6BAKO9B,KAAK4C;qCACG5C,KAAKgE;6BACbhE,KAAK4B,KAAKE,SACjB;;qBAGD9B,KAAKoC,QAAQK,YAAd,QAAAU,EAA2BnD,KAAK4B,KAAKiC,gBAArC,IAAAV,OAAA,EAA2BA,EAAoBW,cAC7CpD;;mCAEaV,KAAKuC;2CACGvC,KAAKiE;mCACbjE,KAAK4B,KAAKE,SACjB;0CAEc9B,KAAK4B,KAAKE,SACxB;qCAESwB;;wBAGf;;+BAEStD,KAAK0C;8BACN1C,KAAKkE;uBACZlE,KAAK4B,KAAKE,SACX;;;+BAIS9B,KAAK+C;8BACN/C,KAAKmE;uBACZnE,KAAK4B,KAAKE,SACX;;;;;UAMZ9B,KAAKoC,QAAQI,QACX9B;iBACI,QAAA0C,EAAApD,KAAKoC,QAAQK,iBAAb,IAAAW,OAAA,EAAAA,EAAwBO,IACtBjD;;;;+BAIaV,KAAKoE;kCACFpE,KAAKqE;;wBAEfrE,KAAK4B,KAAKE,SACV;;oBAIN;;;yBAGO9B,KAAKsE;4BACuB,aAAzBtE,KAAKoC,QAAQI,WACrB+B,aAAaC,aACgB,aAA7BD,aAAaC;;kBAEfxE,KAAKoC,QAAQI,UAAY+B,aAAaC,aACd,aAAzBxE,KAAKoC,QAAQI,UACX+B,aAAaC,YACZxE,KAAK4B,KAAKE,SACR,6DAEF9B,KAAK4B,KAAKE,SACR;;cAIV;;;oBAGQ9B,KAAKyE;sBACHnB,GAAcE,GAAgBxD,KAAKqE;;YAE7CrE,KAAKoC,QAAQI,SACX,QAAAa,EAAArD,KAAKoC,QAAQK,iBAAb,IAAAY,OAAA,EAAAA,EAAwBM,IACtB3D,KAAK4B,KAAKE,SACR,qDAEF9B,KAAK4B,KAAKE,SAAS,mBACrB9B,KAAK4B,KAAKE,SACR;;;QA/KhB,CAAA5B,KAAA,SAAAG,IAAA,cAAAC,MAsLE,SAAoBU,GAClBhB,KAAKqC,YAASC,EACdtC,KAAKuC,SAAWvB,EAAGC,OAAOX,QAxL9B,CAAAJ,KAAA,SAAAG,IAAA,eAAAC,MA2LE,SAAqBU,GACnBhB,KAAKqC,YAASC,EACdtC,KAAK4C,MAAQ5B,EAAGC,OAAOX,QA7L3B,CAAAJ,KAAA,SAAAG,IAAA,gBAAAC,MAgME,SAAsBU,GAAiC,IAAA0D,EACrD1E,KAAKqC,YAASC,EACdtC,KAAK8C,OAAS9B,EAAGC,OAAOX,OACpB,QAAAoE,EAAC1E,KAAK4B,KAAKiC,gBAAX,IAAAa,OAAA,EAACA,EAAoBZ,eACvB9D,KAAK+D,iBApMX,CAAA7D,KAAA,SAAAG,IAAA,eAAAC,MAwME,WAAuB,IAAAqE,EACrB,IAAK,QAAAA,EAAA3E,KAAK4B,KAAKiC,gBAAV,IAAAc,OAAA,EAAAA,EAAoBb,eAAgB9D,KAAKuC,WAAcvC,KAAK8C,OAC/D,OAEF,MAAM8B,EAAQ5E,KAAK8C,OAAO+B,cAAcC,MAAM,KAE9C9E,KAAKuC,SACc,IAAjBqC,EAAMG,mBAA2BH,EAAM,KAAOA,EAAMI,KAAK,OA/M/D,CAAA9E,KAAA,SAAAG,IAAA,sBAAAC,MAkNE,SAA4BU,GAC1BhB,KAAK0C,eAAkB1B,EAAGiE,OAAoBC,UAnNlD,CAAAhF,KAAA,SAAAG,IAAA,uBAAAC,MAsNE,SAA6BU,GAC3BhB,KAAK+C,cAAiB/B,EAAGiE,OAAoBC,UAvNjD,CAAAhF,KAAA,SAAAG,IAAA,iBAAAC,MA0NE,WAAyB,IAAA6E,EACvB,MAAM3C,EAAO,QAAA2C,EAAGnF,KAAKoC,eAAR,IAAA+C,OAAA,EAAGA,EAAc3C,QACzBA,IAGDA,IAAY+B,aAAaC,mBACpBD,aAAaC,YAEpBD,aAAaC,YAAchC,EAE7B4C,SAASC,YApOb,CAAAnF,KAAA,SAAAG,IAAA,mBAAAC,MAuOE4B,iBAAiC,IAAAoD,EAAAC,GAC3B,QAAAD,EAAAtF,KAAKoC,eAAL,IAAAkD,OAAA,EAAAA,EAAc9C,YAAW,QAAA+C,EAACvF,KAAKoC,QAAQK,iBAAd,IAAA8C,OAAA,EAACA,EAAwB5B,KACpD3D,KAAK0D,SAEP1D,KAAKqE,aAAc,EACnB,IACE,MAAMmB,EAAkD,CACtDxC,cAAehD,KAAK+C,cACpBJ,gBAAiB3C,KAAK0C,eACtBG,KAAM7C,KAAK4C,YAASN,EACpBT,MAAO7B,KAAK8C,QAEV9C,KAAKoC,QAASK,gBACVzC,KAAKoC,QAASqD,gBAAgBD,IAEnCA,EAAyCE,SAAW1F,KAAKuC,SAASkB,OAClE+B,EAAyCG,KAAO,gBAC3C3F,KAAKoC,QAASwD,gBAClBJ,IAGJxF,KAAK0D,SACL,MAAOmC,GACP7F,KAAKqC,QAASwD,aAAA,EAAAA,EAAKC,UAAW,gBAlBhC,QAoBE9F,KAAKqE,aAAc,KAhQzB,CAAAnE,KAAA,SAAAG,IAAA,mBAAAC,MAoQE4B,iBACElC,KAAKqE,aAAc,EACnB,UACYrE,KAAKoC,QAAS2D,mBACtB/F,KAAK0D,SAFT,QAKE1D,KAAKqE,aAAc,KA3QzB,CAAAnE,KAAA,SAAAG,IAAA,SAAAC,MA+QE,WACEN,KAAKoC,aAAUE,IAhRnB,CAAApC,KAAA,MAAAmB,QAAA,EAAAhB,IAAA,SAAAC,MAmRE,WACE,MAAO,CACL0F,IACA1E;;;;cAtR6CC","file":"chunk.112741c408d7eb8464de.js","sourcesContent":["import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"./ha-icon\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public placeholder?: string;\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","import { customElement, CSSResult, css, html } from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\n// tslint:disable-next-line\nimport { Dialog } from \"@material/mwc-dialog\";\nimport { Constructor, HomeAssistant } from \"../types\";\n// tslint:disable-next-line\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../../components/ha-icon-input\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  LovelaceDashboard,\n  LovelaceDashboardMutableParams,\n  LovelaceDashboardCreateParams,\n} from \"../../../../data/lovelace\";\nimport { LovelaceDashboardDetailsDialogParams } from \"./show-dialog-lovelace-dashboard-detail\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\n\n@customElement(\"dialog-lovelace-dashboard-detail\")\nexport class DialogLovelaceDashboardDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _params?: LovelaceDashboardDetailsDialogParams;\n  @property() private _urlPath!: LovelaceDashboard[\"url_path\"];\n  @property() private _showInSidebar!: boolean;\n  @property() private _icon!: string;\n  @property() private _title!: string;\n  @property() private _requireAdmin!: LovelaceDashboard[\"require_admin\"];\n\n  @property() private _error?: string;\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceDashboardDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._urlPath = this._params.urlPath || \"\";\n    if (this._params.dashboard) {\n      this._showInSidebar = !!this._params.dashboard.show_in_sidebar;\n      this._icon = this._params.dashboard.icon || \"\";\n      this._title = this._params.dashboard.title || \"\";\n      this._requireAdmin = this._params.dashboard.require_admin || false;\n    } else {\n      this._showInSidebar = true;\n      this._icon = \"\";\n      this._title = \"\";\n      this._requireAdmin = false;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const urlInvalid =\n      this._params.urlPath !== \"lovelace\" &&\n      !/^[a-zA-Z0-9_-]+-[a-zA-Z0-9_-]+$/.test(this._urlPath);\n    const titleInvalid = !this._title.trim();\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.urlPath\n            ? this._title ||\n                this.hass.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.edit_dashboard\"\n                )\n            : this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.new_dashboard\"\n              )\n        )}\n      >\n        <div>\n          ${this._params.dashboard && !this._params.dashboard.id\n            ? this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.cant_edit_yaml\"\n              )\n            : this._params.urlPath === \"lovelace\"\n            ? this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.cant_edit_default\"\n              )\n            : html`\n                ${this._error\n                  ? html`\n                      <div class=\"error\">${this._error}</div>\n                    `\n                  : \"\"}\n                <div class=\"form\">\n                  <paper-input\n                    .value=${this._title}\n                    @value-changed=${this._titleChanged}\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title\"\n                    )}\n                    @blur=${this.hass.userData?.showAdvanced\n                      ? this._fillUrlPath\n                      : undefined}\n                    .invalid=${titleInvalid}\n                    .errorMessage=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title_required\"\n                    )}\n                    dialogInitialFocus\n                  ></paper-input>\n                  <ha-icon-input\n                    .value=${this._icon}\n                    @value-changed=${this._iconChanged}\n                    .label=${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.icon\"\n                    )}\n                  ></ha-icon-input>\n                  ${!this._params.dashboard && this.hass.userData?.showAdvanced\n                    ? html`\n                        <paper-input\n                          .value=${this._urlPath}\n                          @value-changed=${this._urlChanged}\n                          .label=${this.hass.localize(\n                            \"ui.panel.config.lovelace.dashboards.detail.url\"\n                          )}\n                          .errorMessage=${this.hass.localize(\n                            \"ui.panel.config.lovelace.dashboards.detail.url_error_msg\"\n                          )}\n                          .invalid=${urlInvalid}\n                        ></paper-input>\n                      `\n                    : \"\"}\n                  <ha-switch\n                    .checked=${this._showInSidebar}\n                    @change=${this._showSidebarChanged}\n                    >${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.show_sidebar\"\n                    )}\n                  </ha-switch>\n                  <ha-switch\n                    .checked=${this._requireAdmin}\n                    @change=${this._requireAdminChanged}\n                    >${this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.require_admin\"\n                    )}\n                  </ha-switch>\n                </div>\n              `}\n        </div>\n        ${this._params.urlPath\n          ? html`\n              ${this._params.dashboard?.id\n                ? html`\n                    <mwc-button\n                      slot=\"secondaryAction\"\n                      class=\"warning\"\n                      @click=${this._deleteDashboard}\n                      .disabled=${this._submitting}\n                    >\n                      ${this.hass.localize(\n                        \"ui.panel.config.lovelace.dashboards.detail.delete\"\n                      )}\n                    </mwc-button>\n                  `\n                : \"\"}\n              <mwc-button\n                slot=\"secondaryAction\"\n                @click=${this._toggleDefault}\n                .disabled=${this._params.urlPath === \"lovelace\" &&\n                  (!localStorage.defaultPage ||\n                    localStorage.defaultPage === \"lovelace\")}\n              >\n                ${this._params.urlPath === localStorage.defaultPage ||\n                (this._params.urlPath === \"lovelace\" &&\n                  !localStorage.defaultPage)\n                  ? this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.remove_default\"\n                    )\n                  : this.hass.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.set_default\"\n                    )}\n              </mwc-button>\n            `\n          : \"\"}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateDashboard}\"\n          .disabled=${urlInvalid || titleInvalid || this._submitting}\n        >\n          ${this._params.urlPath\n            ? this._params.dashboard?.id\n              ? this.hass.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.update\"\n                )\n              : this.hass.localize(\"ui.common.close\")\n            : this.hass.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._urlPath = ev.detail.value;\n  }\n\n  private _iconChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._icon = ev.detail.value;\n  }\n\n  private _titleChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._title = ev.detail.value;\n    if (!this.hass.userData?.showAdvanced) {\n      this._fillUrlPath();\n    }\n  }\n\n  private _fillUrlPath() {\n    if ((this.hass.userData?.showAdvanced && this._urlPath) || !this._title) {\n      return;\n    }\n    const parts = this._title.toLowerCase().split(\" \");\n\n    this._urlPath =\n      parts.length === 1 ? `lovelace-${parts[0]}` : parts.join(\"_\");\n  }\n\n  private _showSidebarChanged(ev: Event) {\n    this._showInSidebar = (ev.target as HaSwitch).checked;\n  }\n\n  private _requireAdminChanged(ev: Event) {\n    this._requireAdmin = (ev.target as HaSwitch).checked;\n  }\n\n  private _toggleDefault() {\n    const urlPath = this._params?.urlPath;\n    if (!urlPath) {\n      return;\n    }\n    if (urlPath === localStorage.defaultPage) {\n      delete localStorage.defaultPage;\n    } else {\n      localStorage.defaultPage = urlPath;\n    }\n    location.reload();\n  }\n\n  private async _updateDashboard() {\n    if (this._params?.urlPath && !this._params.dashboard?.id) {\n      this._close();\n    }\n    this._submitting = true;\n    try {\n      const values: Partial<LovelaceDashboardMutableParams> = {\n        require_admin: this._requireAdmin,\n        show_in_sidebar: this._showInSidebar,\n        icon: this._icon || undefined,\n        title: this._title,\n      };\n      if (this._params!.dashboard) {\n        await this._params!.updateDashboard(values);\n      } else {\n        (values as LovelaceDashboardCreateParams).url_path = this._urlPath.trim();\n        (values as LovelaceDashboardCreateParams).mode = \"storage\";\n        await this._params!.createDashboard(\n          values as LovelaceDashboardCreateParams\n        );\n      }\n      this._close();\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteDashboard() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeDashboard()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-switch {\n          padding: 16px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-dashboard-detail\": DialogLovelaceDashboardDetail;\n  }\n}\n"],"sourceRoot":""}