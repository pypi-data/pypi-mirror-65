{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/components/hui-input-list-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-map-card-editor.ts"],"names":["HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","Array","memoizeOne","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","stateObj","entity_id","value","attributes","device_class","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_clearValue","length","ev","stopPropagation","_setValue","detail","newValue","setTimeout","fireEvent","css","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","icon","configElementStyle","_decorate","customElement","F","kind","decorators","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","concat","newEntities","splice","assign","static","actionConfigStruct","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_0__","action","navigation_path","url_path","service","service_data","union","name","listEntry","inputLabel","_consolidateEntries","_removeEntry","_addEntry","newEntries","blur","parent","currentTarget","parentElement","cardConfigStruct","title","aspect_ratio","default_zoom","dark_mode","geo_location_sources","HuiMapCardEditor","hui_map_card_editor_decorate","config","_config","_configEntities","processEditorEntities","NaN","_title","_aspect_ratio","_default_zoom","_dark_mode","_entitiesValueChanged","_geo_location_sources","configValue","Number","isNaN","checked"],"mappings":"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","file":"chunk.5edec3159d2fbd44a8f4.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter,\n      this.includeDeviceClasses\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  @property() protected label?: string;\n\n  protected render(): TemplateResult {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>\n        ${this.label ||\n          this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.generic.entities\"\n          ) +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            ) +\n            \")\"}\n      </h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=${this.hass}\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=${this.hass}\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n  ShowViewConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ViewVisibilityChangeEvent {\n  visible: ShowViewConfig[];\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  config: LovelaceCardConfig;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import {\n  html,\n  css,\n  LitElement,\n  property,\n  TemplateResult,\n  CSSResult,\n  customElement,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\n\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-input-list-editor\")\nexport class HuiInputListEditor extends LitElement {\n  @property() protected value?: string[];\n  @property() protected hass?: HomeAssistant;\n  @property() protected inputLabel?: string;\n\n  protected render(): TemplateResult {\n    if (!this.value) {\n      return html``;\n    }\n\n    return html`\n      ${this.value.map((listEntry, index) => {\n        return html`\n          <paper-input\n            label=\"${this.inputLabel}\"\n            .value=\"${listEntry}\"\n            .configValue=\"${\"entry\"}\"\n            .index=\"${index}\"\n            @value-changed=\"${this._valueChanged}\"\n            @blur=\"${this._consolidateEntries}\"\n            ><paper-icon-button\n              slot=\"suffix\"\n              class=\"clear-button\"\n              icon=\"hass:close\"\n              no-ripple\n              @click=\"${this._removeEntry}\"\n              >Clear</paper-icon-button\n            ></paper-input\n          >\n        `;\n      })}\n      <paper-input\n        label=\"${this.inputLabel}\"\n        @change=\"${this._addEntry}\"\n      ></paper-input>\n    `;\n  }\n\n  private _addEntry(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newEntries = this.value!.concat(target.value as string);\n    target.value = \"\";\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n    (ev.target! as LitElement).blur();\n  }\n\n  private _valueChanged(ev: Event): void {\n    ev.stopPropagation();\n    const target = ev.target! as EditorTarget;\n    const newEntries = this.value!.concat();\n    newEntries[target.index!] = target.value!;\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  private _consolidateEntries(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      const newEntries = this.value!.concat();\n      newEntries.splice(target.index!, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newEntries,\n      });\n    }\n  }\n\n  private _removeEntry(ev: Event): void {\n    const parent = (ev.currentTarget as any).parentElement;\n    const newEntries = this.value!.concat();\n    newEntries.splice(parent.index!, 1);\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-list-editor\": HuiInputListEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-input-list-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { MapCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  aspect_ratio: \"string?\",\n  default_zoom: \"number?\",\n  dark_mode: \"boolean?\",\n  entities: [entitiesConfigStruct],\n  geo_location_sources: \"array?\",\n});\n\n@customElement(\"hui-map-card-editor\")\nexport class HuiMapCardEditor extends LitElement implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MapCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: MapCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _default_zoom(): number {\n    return this._config!.default_zoom || NaN;\n  }\n\n  get _geo_location_sources(): string[] {\n    return this._config!.geo_location_sources || [];\n  }\n\n  get _dark_mode(): boolean {\n    return this._config!.dark_mode || false;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.aspect_ratio\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._aspect_ratio}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.default_zoom\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._default_zoom}\"\n            .configValue=\"${\"default_zoom\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <ha-switch\n          .checked=\"${this._dark_mode}\"\n          .configValue=\"${\"dark_mode\"}\"\n          @change=\"${this._valueChanged}\"\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.map.dark_mode\"\n          )}</ha-switch\n        >\n        <hui-entity-editor\n          .hass=${this.hass}\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._entitiesValueChanged}\"\n        ></hui-entity-editor>\n        <h3>\n          ${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.map.geo_location_sources\"\n          )}\n        </h3>\n        <div class=\"geo_location_sources\">\n          <hui-input-list-editor\n            inputLabel=${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.source\"\n            )}\n            .hass=${this.hass}\n            .value=\"${this._geo_location_sources}\"\n            .configValue=\"${\"geo_location_sources\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></hui-input-list-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _entitiesValueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<any>): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    let value: any = target.value;\n    if (target.type === \"number\") {\n      value = Number(value);\n    }\n    if (target.value === \"\" || (target.type === \"number\" && isNaN(value))) {\n      delete this._config[target.configValue!];\n    } else if (target.configValue) {\n      this._config = {\n        ...this._config,\n        [target.configValue]:\n          target.checked !== undefined ? target.checked : value,\n      };\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .geo_location_sources {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-map-card-editor\": HuiMapCardEditor;\n  }\n}\n"],"sourceRoot":""}