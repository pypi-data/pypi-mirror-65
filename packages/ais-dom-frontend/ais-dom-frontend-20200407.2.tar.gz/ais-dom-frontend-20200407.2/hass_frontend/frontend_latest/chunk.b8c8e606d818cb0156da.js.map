{"version":3,"sources":["webpack:///./src/components/ha-switch.ts","webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-navigation.ts","webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-dashboard.ts","webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-config-update.js"],"names":["MwcSwitch","customElements","get","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","[object Object]","args","super","this","F","d","kind","decorators","property","type","Boolean","key","value","query","_get","_getPrototypeOf","prototype","call","style","setProperty","classList","toggle","_slot","assignedNodes","length","addEventListener","haptic","forwardHaptic","html","ripple","interactionNode","_haChangeHandler","static","css","e","mdcFoundation","handleChange","checked","formElement","aisGateConfigSections","integrations","component","path","translationKey","icon","core","_LitElement","Object","values","map","section","hass","showAdvanced","LitElement","localize","haStyle","__webpack_require__","r","__webpack_exports__","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_3__","define","PolymerElement","template","properties","isWide","aisVersionInfo","String","computed","aisBackupInfo","aisAutoUpdateInfo","aisAutoUpdateIcon","aisAutoUpdatFullInfo","Array","aisBackupFullInfo","aisButtonVersionCheckUpgrade","aisUpdateSystemData","say","autoUpdateMode","validating","backupStep","validateLog","backupInfo","backupError","restoreInfo","restoreError","isBackupValid","ready","callService","step","computeClasses","_computeAisVersionInfo","versionInfo","states","versionInfoAttr","attributes","push","name","update_check_time","getVersionName","update_status","getVersionIcon","dom_app_current_version","new_value","dom_app_newest_version","reinstall_dom_app","android_app_current_version","android_app_newest_version","reinstall_android_app","linux_apt_current_version","linux_apt_newest_version","reinstall_linux_apt","state","_computeAisBackupStep","_computeAisBackupInfo","backupInfoAttr","backup_info","backup_error","restore_info","restore_error","file_name","file_size","status","retS","_computeAisButtonVersionCheckUpgrade","attr","_computeAutoUpdateMode","_isEqualTo","currentStep","stepNumber","changeAutoUpdateMode","entity_id","doBackup","callApi","then","result","valid","errors","password","shadowRoot","getElementById","restoreBackup"],"mappings":"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","file":"chunk.b8c8e606d818cb0156da.js","sourcesContent":["import {\n  customElement,\n  CSSResult,\n  css,\n  query,\n  html,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\nimport { forwardHaptic } from \"../data/haptics\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  // Generate a haptic vibration.\n  // Only set to true if the new value of the switch is applied right away when toggling.\n  // Do not add haptic when a user is required to press save.\n  @property({ type: Boolean }) public haptic = false;\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n    this.addEventListener(\"change\", () => {\n      if (this.haptic) {\n        forwardHaptic(\"light\");\n      }\n    });\n  }\n\n  protected render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div\n          class=\"mdc-switch__thumb-underlay\"\n          .ripple=\"${ripple({\n            interactionNode: this,\n          })}\"\n        >\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"${this._haChangeHandler}\"\n            />\n          </div>\n        </div>\n      </div>\n      <label for=\"basic-switch\"><slot></slot></label>\n    `;\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n\n  private _haChangeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport { PageNavigation } from \"../../../layouts/hass-tabs-subpage\";\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport \"../dashboard/ha-config-navigation\";\n\nconst aisGateConfigSections: { [name: string]: PageNavigation[] } = {\n  integrations: [\n    {\n      component: \"ais_dom_config_update\",\n      path: \"/config/ais_dom_config_update\",\n      translationKey: \"ui.panel.config.ais_dom_config_update.caption\",\n      icon: \"mdi:cloud-sync-outline\",\n      core: true,\n    },\n    {\n      component: \"ais_dom_config_wifi\",\n      path: \"/config/ais_dom_config_wifi\",\n      translationKey: \"ui.panel.config.ais_dom_config_wifi.caption\",\n      icon: \"mdi:wifi\",\n      core: true,\n    },\n    {\n      component: \"ais_dom_config_display\",\n      path: \"/config/ais_dom_config_display\",\n      translationKey: \"ui.panel.config.ais_dom_config_display.caption\",\n      icon: \"mdi:monitor-edit\",\n      core: true,\n    },\n    {\n      component: \"ais_dom_config_tts\",\n      path: \"/config/ais_dom_config_tts\",\n      translationKey: \"ui.panel.config.ais_dom_config_tts.caption\",\n      icon: \"mdi:account-tie-voice\",\n      core: true,\n    },\n    {\n      component: \"ais_dom_config_night\",\n      path: \"/config/ais_dom_config_night\",\n      translationKey: \"ui.panel.config.ais_dom_config_night.caption\",\n      icon: \"mdi:weather-night\",\n      core: true,\n    },\n    {\n      component: \"ais_dom_config_remote\",\n      path: \"/config/ais_dom_config_remote\",\n      translationKey: \"ui.panel.config.ais_dom_config_remote.caption\",\n      icon: \"mdi:web\",\n      core: true,\n    },\n    {\n      component: \"ais_dom_config_logs\",\n      path: \"/config/ais_dom_config_logs\",\n      translationKey: \"ui.panel.config.ais_dom_config_logs.caption\",\n      icon: \"mdi:database-settings\",\n      core: true,\n    },\n    {\n      component: \"ais_dom_config_power\",\n      path: \"/config/ais_dom_config_power\",\n      translationKey: \"ui.panel.config.ais_dom_config_power.caption\",\n      icon: \"mdi:restart\",\n      core: true,\n    },\n  ],\n};\n\n@customElement(\"ha-config-ais-dom-navigation\")\nclass HaConfigAisDomNavigation extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult | void {\n    return html`\n      ${Object.values(aisGateConfigSections).map(\n        (section) => html`\n          <ha-card>\n            <ha-config-navigation\n              .hass=${this.hass}\n              .showAdvanced=${this.showAdvanced}\n              .pages=${section}\n            ></ha-config-navigation>\n          </ha-card>\n        `\n      )}\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-ais-dom-navigation\": HaConfigAisDomNavigation;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResultArray,\n  css,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\n\nimport \"../../../components/ha-menu-button\";\n\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\n\nimport \"../ha-config-section\";\nimport \"./ha-config-ais-dom-navigation\";\n\n@customElement(\"ha-config-ais-dom-dashboard\")\nclass HaConfigAisDomDashboard extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n  @property() public isWide!: boolean;\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-subpage\n        header=${this.hass.localize(\"ui.panel.config.ais_dom_config.header\")}\n      >\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"content\">\n            <ha-config-section is-wide=\"[[isWide]]\">\n              <div slot=\"header\">\n                ${this.hass.localize(\"ui.panel.config.ais_dom_config.header\")}\n              </div>\n              <span slot=\"introduction\">\n                ${this.hass.localize(\n                  \"ui.panel.config.ais_dom_config.introduction\"\n                )}\n              </span>\n              <ha-config-ais-dom-navigation\n                .hass=${this.hass}\n                .show-advanced=${this.showAdvanced}\n              ></ha-config-ais-dom-navigation>\n            </ha-config-section>\n          </div>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        app-header {\n          --app-header-background-color: var(--primary-background-color);\n        }\n        ha-card:last-child {\n          margin-bottom: 24px;\n        }\n        ha-config-section {\n          margin-top: -20px;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        .promo-advanced {\n          text-align: center;\n          color: var(--secondary-text-color);\n          margin-bottom: 24px;\n        }\n        .promo-advanced a {\n          color: var(--secondary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-ais-dom-dashboard\": HaConfigAisDomDashboard;\n  }\n}\n","import \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../resources/ha-style\";\n\nimport \"./ha-config-ais-dom-dashboard\";\nimport \"../../../components/ha-switch\";\n\n/*\n *\n */\nclass HaConfigAisDomControl extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 32px;\n        }\n        .border {\n          margin: 32px auto 0;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n          max-width: 1040px;\n        }\n        .narrow .border {\n          max-width: 640px;\n        }\n        .center-container {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          height: 70px;\n        }\n        table {\n          width: 100%;\n        }\n\n        td:first-child {\n          width: 33%;\n        }\n\n        .validate-container {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          min-height: 140px;\n        }\n\n        .validate-result {\n          color: var(--google-green-500);\n          font-weight: 500;\n        }\n\n        .config-invalid .text {\n          color: var(--google-red-500);\n          font-weight: 500;\n        }\n\n        .config-invalid {\n          text-align: center;\n          margin-top: 20px;\n        }\n\n        .validate-log {\n          white-space: pre-wrap;\n          direction: ltr;\n        }\n      </style>\n\n      <hass-subpage header=\"Konfiguracja bramki AIS dom\">\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">Oprogramowanie bramki</span>\n            <span slot=\"introduction\"\n              >Możesz zaktualizować system do najnowszej wersji, wykonać kopię\n              zapasową ustawień i zsynchronizować bramkę z Portalem\n              Integratora</span\n            >\n            <ha-card header=\"Wersja systemu Asystent domowy\">\n              <div class=\"card-content\">\n                [[aisVersionInfo]]\n                <div>\n                  <div style=\"margin-top:30px;\" id=\"ha-switch-id\">\n                    <ha-switch\n                      checked=\"{{autoUpdateMode}}\"\n                      on-change=\"changeAutoUpdateMode\"\n                      style=\"position: absolute; right: 20px;\"\n                    ></ha-switch\n                    ><span\n                      ><h3>\n                        Autoaktualizacja\n                        <iron-icon icon=\"[[aisAutoUpdateIcon]]\"></iron-icon></h3\n                    ></span>\n                  </div>\n                </div>\n\n                <div style=\"display: inline-block;\">\n                  <div>\n                    [[aisAutoUpdateInfo]]\n                  </div>\n                  <div style=\"margin-top: 15px;\">\n                    Aktualizacje dostarczają najnowsze funkcjonalności oraz\n                    poprawki zapewniające bezpieczeństwo i stabilność działania\n                    systemu.\n                    <table style=\"margin-top: 10px;\">\n                      <template\n                        is=\"dom-repeat\"\n                        items=\"[[aisAutoUpdatFullInfo]]\"\n                      >\n                        <tr>\n                          <td>[[item.name]]</td>\n                          <td>[[item.value]]</td>\n                          <td>[[item.new_value]]</td>\n                          <td><iron-icon icon=\"[[item.icon]]\"></iron-icon></td>\n                        </tr>\n                      </template>\n                    </table>\n                  </div>\n                </div>\n                <div class=\"center-container\">\n                  <ha-call-service-button\n                    class=\"warning\"\n                    hass=\"[[hass]]\"\n                    domain=\"ais_updater\"\n                    service=\"execute_upgrade\"\n                    service-data=\"[[aisUpdateSystemData]]\"\n                    >[[aisButtonVersionCheckUpgrade]]\n                  </ha-call-service-button>\n                </div>\n              </div>\n            </ha-card>\n\n            <ha-card header=\"Kopia konfiguracji Bramki\">\n              <div class=\"card-content\">\n                W tym miejscu możesz, sprawdzić poprawność ustawień bramki,\n                wykonać jej kopię i przesłać ją do portalu integratora. <b>Uwaga,\n                ponieważ konfiguracja może zawierać hasła i tokeny dostępu do\n                usług, zalecamy zaszyfrować ją hasłem</b>. Gdy kopia jest\n                zabezpieczona hasłem, to można ją otworzyć/przywrócić tylko po\n                podaniu hasła.\n                <h2>\n                  Nowa kopia ustawień\n                  <iron-icon icon=\"mdi:cloud-upload-outline\"></iron-icon>\n                </h2>\n                Przed wykonaniem nowej kopii ustawień sprawdź poprawność\n                konfiguracji\n                <div style=\"border-bottom: 1px solid white;\">\n                  <template is=\"dom-if\" if=\"[[!validateLog]]\">\n                    <div class=\"validate-container\">\n                      <div class=\"validate-result\" id=\"result\">\n                        [[backupInfo]]\n                      </div>\n                      <template is=\"dom-if\" if=\"[[!validating]]\">\n                        <div class=\"config-invalid\">\n                          <span class=\"text\">\n                            [[backupError]]\n                          </span>\n                        </div>\n                        <template\n                          is=\"dom-if\"\n                          if=\"[[_isEqualTo(backupStep, '1')]]\"\n                        >\n                          <paper-input\n                            placeholder=\"hasło\"\n                            no-label-float=\"\"\n                            type=\"password\"\n                            id=\"password1\"\n                          ></paper-input>\n                        </template>\n                        <mwc-button raised=\"\" on-click=\"doBackup\">\n                          <template\n                            is=\"dom-if\"\n                            if=\"[[_isEqualTo(backupStep, '0')]]\"\n                          >\n                            Sprawdź konfigurację\n                          </template>\n                          <template\n                            is=\"dom-if\"\n                            if=\"[[_isEqualTo(backupStep, '1')]]\"\n                          >\n                            Wykonaj kopie konfiguracji\n                          </template>\n                        </mwc-button>\n                      </template>\n                      <template is=\"dom-if\" if=\"[[validating]]\">\n                        <paper-spinner active=\"\"></paper-spinner>\n                      </template>\n                    </div>\n                  </template>\n                  <template is=\"dom-if\" if=\"[[validateLog]]\">\n                    <div class=\"config-invalid\">\n                      <mwc-button raised=\"\" on-click=\"doBackup\">\n                        Popraw i sprawdź ponownie\n                      </mwc-button>\n                    </div>\n                    <p></p>\n                    <div id=\"configLog\" class=\"validate-log\">\n                      [[validateLog]]\n                    </div>\n                  </template>\n                </div>\n\n                <template is=\"dom-if\" if=\"[[isBackupValid]]\">\n                  <h2>\n                    Przywracanie ustawień\n                    <iron-icon icon=\"mdi:backup-restore\"></iron-icon>\n                  </h2>\n                  <div class=\"validate-container\">\n                    <table style=\"margin-top: 40px; margin-bottom: 10px;\">\n                      <template is=\"dom-repeat\" items=\"[[aisBackupFullInfo]]\">\n                        <tr>\n                          <td>[[item.name]]</td>\n                          <td>[[item.value]]</td>\n                          <td>[[item.new_value]]</td>\n                          <td><iron-icon icon=\"[[item.icon]]\"></iron-icon></td>\n                        </tr>\n                      </template>\n                    </table>\n                      <div class=\"validate-container\">\n                        <div class=\"validate-result\" id=\"result\">\n                          [[restoreInfo]]\n                        </div>\n                        <template is=\"dom-if\" if=\"[[!validating]]\">\n                        <div class=\"config-invalid\">\n                          <span class=\"text\">\n                            [[restoreError]]\n                          </span>\n                        </div>\n                        <paper-input\n                          placeholder=\"hasło\"\n                          no-label-float=\"\"\n                          type=\"password\"\n                          id=\"password2\"\n                        ></paper-input>\n                        <mwc-button raised=\"\" on-click=\"restoreBackup\">\n                          Przywróć konfigurację z kopii\n                        </mwc-button>\n                      </div>\n                    </template>\n                    <template is=\"dom-if\" if=\"[[validating]]\">\n                      <paper-spinner active=\"\"></paper-spinner>\n                    </template>\n                  </div>\n                </template>\n              </div>\n            </ha-card>\n\n            <ha-card header=\"Synchronizacja z Portalem Integratora\">\n              <div class=\"card-content\">\n                Jeśli ostatnio wprowadzałeś zmiany w Portalu Integratora, takie\n                jak dodanie nowych typów audio czy też dostęp do zewnętrznych\n                serwisów, to przyciskiem poniżej możesz uruchomić natychmiastowe\n                pobranie tych zmian na bramkę bez czekania na automatyczną\n                synchronizację.\n                <div class=\"center-container\">\n                  <ha-call-service-button\n                    class=\"warning\"\n                    hass=\"[[hass]]\"\n                    domain=\"script\"\n                    service=\"ais_cloud_sync\"\n                    >Synchronizuj z Portalem Integratora\n                  </ha-call-service-button>\n                </div>\n              </div>\n            </ha-card>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      aisVersionInfo: {\n        type: String,\n        computed: \"_computeAisVersionInfo(hass)\",\n      },\n      aisBackupInfo: {\n        type: String,\n        computed: \"_computeAisBackupInfo(hass)\",\n      },\n      aisAutoUpdateInfo: { type: String },\n      aisAutoUpdateIcon: { type: String },\n      aisAutoUpdatFullInfo: {\n        type: Array,\n        value: [],\n      },\n      aisBackupFullInfo: {\n        type: Array,\n        value: [],\n      },\n      aisButtonVersionCheckUpgrade: {\n        type: String,\n        computed: \"_computeAisButtonVersionCheckUpgrade(hass)\",\n      },\n      aisUpdateSystemData: {\n        type: Object,\n        value: { say: true },\n      },\n      autoUpdateMode: {\n        type: Boolean,\n        computed: \"_computeAutoUpdateMode(hass)\",\n      },\n      validating: {\n        type: Boolean,\n        value: false,\n      },\n      backupStep: {\n        type: String,\n        value: \"0\",\n        computed: \"_computeAisBackupStep(hass)\",\n      },\n      validateLog: {\n        type: String,\n        value: \"\",\n      },\n      backupInfo: {\n        type: String,\n        value: \"\",\n      },\n      backupError: {\n        type: String,\n        value: \"\",\n      },\n      restoreInfo: {\n        type: String,\n        value: \"\",\n      },\n      restoreError: {\n        type: String,\n        value: \"\",\n      },\n      isBackupValid: {\n        type: Boolean,\n        value: null,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.hass.callService(\"ais_cloud\", \"set_backup_step\", {\n      step: \"0\",\n    });\n    this.hass.callService(\"ais_cloud\", \"get_backup_info\");\n  }\n\n  computeClasses(isWide) {\n    return isWide ? \"content\" : \"content narrow\";\n  }\n\n  _computeAisVersionInfo(hass) {\n    var versionInfo = hass.states[\"sensor.version_info\"];\n    var versionInfoAttr = versionInfo.attributes;\n    this.aisAutoUpdatFullInfo = [];\n\n    if (\"update_check_time\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Sprawdzono o\",\n        value: versionInfoAttr.update_check_time,\n        icon: \"\",\n      });\n    }\n\n    if (\"update_status\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Status\",\n        value: this.getVersionName(versionInfoAttr.update_status),\n        icon: this.getVersionIcon(versionInfoAttr.update_status),\n      });\n    }\n\n    if (\"dom_app_current_version\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Asystent domowy\",\n        value: versionInfoAttr.dom_app_current_version,\n        new_value: versionInfoAttr.dom_app_newest_version,\n        icon: versionInfoAttr.reinstall_dom_app ? \"hass:alert\" : \"hass:check\",\n      });\n    }\n    if (\"android_app_current_version\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Android\",\n        value: versionInfoAttr.android_app_current_version,\n        new_value: versionInfoAttr.android_app_newest_version,\n        icon: versionInfoAttr.reinstall_android_app\n          ? \"hass:alert\"\n          : \"hass:check\",\n      });\n    }\n    if (\"linux_apt_current_version\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Linux\",\n        value: versionInfoAttr.linux_apt_current_version,\n        new_value: versionInfoAttr.linux_apt_newest_version,\n        icon: versionInfoAttr.reinstall_linux_apt ? \"hass:alert\" : \"hass:check\",\n      });\n    }\n\n    return versionInfo.state;\n  }\n\n  _computeAisBackupStep(hass) {\n    var backupInfo = hass.states[\"sensor.aisbackupinfo\"];\n    if (backupInfo.state === \"0\") {\n      this.validating = false;\n    }\n    return backupInfo.state;\n  }\n\n  _computeAisBackupInfo(hass) {\n    var backupInfo = hass.states[\"sensor.aisbackupinfo\"];\n    var backupInfoAttr = backupInfo.attributes;\n    this.aisBackupFullInfo = [];\n    this.isBackupValid = false;\n    this.backupInfo = backupInfoAttr.backup_info;\n    this.backupError = backupInfoAttr.backup_error;\n    this.restoreInfo = backupInfoAttr.restore_info;\n    this.restoreError = backupInfoAttr.restore_error;\n    if (\"file_size\" in backupInfoAttr) {\n      this.isBackupValid = !!backupInfoAttr.file_name;\n      this.aisBackupFullInfo.push({\n        name: \"Kopia zapasowa\",\n        value: backupInfoAttr.file_name,\n        new_value: backupInfoAttr.file_size,\n        icon: \"mdi:check\",\n      });\n    }\n    return backupInfo.state;\n  }\n\n  getVersionName(status) {\n    var retS = status;\n    if (status === \"checking\") {\n      retS = \"Sprawdzanie\";\n    } else if (status === \"outdated\") {\n      retS = \"Nieaktualny\";\n    } else if (status === \"downloading\") {\n      retS = \"Pobieranie\";\n    } else if (status === \"installing\") {\n      retS = \"Instalowanie\";\n    } else if (status === \"updated\") {\n      retS = \"Aktualny\";\n    } else if (status === \"unknown\") {\n      retS = \"Nieznany\";\n    } else if (status === \"restart\") {\n      retS = \"Restartowanie\";\n    }\n    return retS;\n  }\n\n  getVersionIcon(status) {\n    var retS = \"\";\n    if (status === \"checking\") {\n      retS = \"mdi:cloud-sync\";\n    } else if (status === \"outdated\") {\n      retS = \"\";\n    } else if (status === \"downloading\") {\n      retS = \"mdi:progress-download\";\n    } else if (status === \"installing\") {\n      retS = \"mdi:progress-wrench\";\n    } else if (status === \"updated\") {\n      retS = \"mdi:emoticon-happy-outline\";\n    } else if (status === \"unknown\") {\n      retS = \"mdi:help-circle-outline\";\n    } else if (status === \"restart\") {\n      retS = \"mdi:restart-alert\";\n    }\n    return retS;\n  }\n\n  _computeAisButtonVersionCheckUpgrade(hass) {\n    var attr = hass.states[\"sensor.version_info\"].attributes;\n    if (\n      attr.reinstall_dom_app ||\n      attr.reinstall_android_app ||\n      attr.reinstall_linux_apt\n    ) {\n      if (attr.update_status === \"outdated\") {\n        return \"Zainstaluj teraz aktualizację\";\n      }\n      if (attr.update_status === \"unknown\") {\n        return \"Spróbuj ponownie\";\n      }\n      return \"Aktualizacja -> \" + this.getVersionName(attr.update_status);\n    }\n    return \"Sprawdź dostępność aktualizacji\";\n  }\n\n  _computeAutoUpdateMode(hass) {\n    if (hass.states[\"input_boolean.ais_auto_update\"].state === \"off\") {\n      this.aisAutoUpdateIcon = \"mdi:sync-off\";\n      this.aisAutoUpdateInfo =\n        \"Możesz aktualizować system samodzielnie w dogodnym dla Ciebie czasie lub włączyć aktualizację automatyczną.\";\n      return false;\n    }\n    this.aisAutoUpdateIcon = \"mdi:sync\";\n    this.aisAutoUpdateInfo =\n      \"Codziennie sprawdzimy i automatycznie zainstalujemy dostępne aktualizacje.\";\n    return true;\n  }\n\n  _isEqualTo(currentStep, stepNumber) {\n    return currentStep === stepNumber;\n  }\n\n  changeAutoUpdateMode() {\n    this.hass.callService(\"input_boolean\", \"toggle\", {\n      entity_id: \"input_boolean.ais_auto_update\",\n    });\n  }\n\n  doBackup() {\n    // 1. validation\n    if (this.backupStep === \"0\") {\n      this.validating = true;\n      this.validateLog = \"\";\n\n      this.hass.callApi(\"POST\", \"config/core/check_config\").then((result) => {\n        this.validating = false;\n        var valid = result.result === \"valid\" ? \"1\" : \"0\";\n        if (valid === \"0\") {\n          this.hass.callService(\"ais_cloud\", \"set_backup_step\", {\n            step: valid,\n            backup_error: \"Konfiguracja niepoprawna\",\n          });\n          this.validateLog = result.errors;\n        } else {\n          this.hass.callService(\"ais_cloud\", \"set_backup_step\", {\n            step: valid,\n            backup_info: \"Konfiguracja poprawna można wykonać kopię\",\n          });\n          this.validateLog = \"\";\n        }\n      });\n    } else {\n      // 2. backup and transfer\n      this.validating = true;\n      this.validateLog = \"\";\n      var password = this.shadowRoot.getElementById(\"password1\").value;\n      this.hass.callService(\"ais_cloud\", \"do_backup\", {\n        password: password,\n      });\n    }\n  }\n\n  restoreBackup() {\n    this.validating = true;\n    this.validateLog = \"\";\n    var password = this.shadowRoot.getElementById(\"password2\").value;\n    this.hass.callService(\"ais_cloud\", \"restore_backup\", {\n      password: password,\n    });\n  }\n}\n\ncustomElements.define(\"ha-config-ais-dom-config-update\", HaConfigAisDomControl);\n"],"sourceRoot":""}