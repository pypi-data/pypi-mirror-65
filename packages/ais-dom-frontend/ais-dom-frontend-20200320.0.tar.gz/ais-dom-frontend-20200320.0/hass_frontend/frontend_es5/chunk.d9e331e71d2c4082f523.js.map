{"version":3,"sources":["webpack:///./src/components/ha-label-badge.ts","webpack:///./src/panels/lovelace/cards/hui-alarm-panel-card.ts","webpack:///./src/data/alarm_control_panel.ts"],"names":["HaLabelBadge","property","html","_templateObject","classMap","value","big","Boolean","this","length","icon","image","_templateObject2","_templateObject3","label","_templateObject4","description","_templateObject5","css","_templateObject6","changedProperties","_get","_getPrototypeOf","prototype","call","has","shadowRoot","getElementById","style","backgroundImage","concat","LitElement","customElements","define","ICONS","armed_away","armed_custom_bypass","armed_home","armed_night","disarmed","pending","triggered","BUTTONS","customElement","HuiAlarmPanelCard","_callee","regeneratorRuntime","wrap","_context","prev","next","Promise","all","__webpack_require__","e","then","bind","abrupt","document","createElement","stop","hass","lovelaceConfig","entities","entitiesFill","states","entity","findEntities","query","_config","stateObj","attributes","code_format","config","split","Error","Object","assign","changedProps","oldHass","get","oldConfig","themes","theme","applyThemesOnElement","language","_this2","name","friendly_name","_label","state","_stateIconLabel","map","_handleActionClick","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_handlePadClick","localize","stateLabel","pop","val","currentTarget","_input","input","code","action","callService","entity_id","callAlarmAction","_templateObject11"],"mappings":"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","file":"chunk.d9e331e71d2c4082f523.js","sourcesContent":["import {\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport \"./ha-icon\";\n\nclass HaLabelBadge extends LitElement {\n  @property() public value?: string;\n  @property() public icon?: string;\n  @property() public label?: string;\n  @property() public description?: string;\n  @property() public image?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"badge-container\">\n        <div class=\"label-badge\" id=\"badge\">\n          <div\n            class=\"${classMap({\n              value: true,\n              big: Boolean(this.value && this.value.length > 4),\n            })}\"\n          >\n            ${this.icon && !this.value && !this.image\n              ? html`\n                  <ha-icon .icon=\"${this.icon}\"></ha-icon>\n                `\n              : \"\"}\n            ${this.value && !this.image\n              ? html`\n                  <span>${this.value}</span>\n                `\n              : \"\"}\n          </div>\n          ${this.label\n            ? html`\n                <div\n                  class=\"${classMap({\n                    label: true,\n                    big: this.label.length > 5,\n                  })}\"\n                >\n                  <span>${this.label}</span>\n                </div>\n              `\n            : \"\"}\n        </div>\n        ${this.description\n          ? html`\n              <div class=\"title\">${this.description}</div>\n            `\n          : \"\"}\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      css`\n        .badge-container {\n          display: inline-block;\n          text-align: center;\n          vertical-align: top;\n        }\n        .label-badge {\n          position: relative;\n          display: block;\n          margin: 0 auto;\n          width: var(--ha-label-badge-size, 2.5em);\n          text-align: center;\n          height: var(--ha-label-badge-size, 2.5em);\n          line-height: var(--ha-label-badge-size, 2.5em);\n          font-size: var(--ha-label-badge-font-size, 1.5em);\n          border-radius: 50%;\n          border: 0.1em solid var(--ha-label-badge-color, var(--primary-color));\n          color: var(--label-badge-text-color, rgb(76, 76, 76));\n\n          white-space: nowrap;\n          background-color: var(--label-badge-background-color, white);\n          background-size: cover;\n          transition: border 0.3s ease-in-out;\n        }\n        .label-badge .value {\n          font-size: 90%;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n        .label-badge .value.big {\n          font-size: 70%;\n        }\n        .label-badge .label {\n          position: absolute;\n          bottom: -1em;\n          /* Make the label as wide as container+border. (parent_borderwidth / font-size) */\n          left: -0.2em;\n          right: -0.2em;\n          line-height: 1em;\n          font-size: 0.5em;\n        }\n        .label-badge .label span {\n          box-sizing: border-box;\n          max-width: 100%;\n          display: inline-block;\n          background-color: var(--ha-label-badge-color, var(--primary-color));\n          color: var(--ha-label-badge-label-color, white);\n          border-radius: 1em;\n          padding: 9% 16% 8% 16%; /* mostly apitalized text, not much descenders => bit more top margin */\n          font-weight: 500;\n          overflow: hidden;\n          text-transform: uppercase;\n          text-overflow: ellipsis;\n          transition: background-color 0.3s ease-in-out;\n          text-transform: var(--ha-label-badge-label-text-transform, uppercase);\n        }\n        .label-badge .label.big span {\n          font-size: 90%;\n          padding: 10% 12% 7% 12%; /* push smaller text a bit down to center vertically */\n        }\n        .badge-container .title {\n          margin-top: 1em;\n          font-size: var(--ha-label-badge-title-font-size, 0.9em);\n          width: var(--ha-label-badge-title-width, 5em);\n          font-weight: var(--ha-label-badge-title-font-weight, 400);\n          overflow: hidden;\n          text-overflow: ellipsis;\n          line-height: normal;\n          color: #fff;\n        }\n      `,\n    ];\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"image\")) {\n      this.shadowRoot!.getElementById(\"badge\")!.style.backgroundImage = this\n        .image\n        ? `url(${this.image})`\n        : \"\";\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-label-badge\": HaLabelBadge;\n  }\n}\n\ncustomElements.define(\"ha-label-badge\", HaLabelBadge);\n","import {\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  CSSResult,\n  css,\n  property,\n  customElement,\n  query,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-label-badge\";\nimport \"../components/hui-warning\";\n\nimport { LovelaceCard } from \"../types\";\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  callAlarmAction,\n  FORMAT_NUMBER,\n} from \"../../../data/alarm_control_panel\";\nimport { AlarmPanelCardConfig } from \"./types\";\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { findEntities } from \"../common/find-entites\";\nimport { LovelaceConfig } from \"../../../data/lovelace\";\n\nconst ICONS = {\n  armed_away: \"hass:shield-lock\",\n  armed_custom_bypass: \"hass:security\",\n  armed_home: \"hass:shield-home\",\n  armed_night: \"hass:shield-home\",\n  disarmed: \"hass:shield-check\",\n  pending: \"hass:shield-outline\",\n  triggered: \"hass:bell-ring\",\n};\n\nconst BUTTONS = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"\", \"0\", \"clear\"];\n\n@customElement(\"hui-alarm-panel-card\")\nclass HuiAlarmPanelCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement() {\n    await import(\n      /* webpackChunkName: \"hui-alarm-panel-card-editor\" */ \"../editor/config-elements/hui-alarm-panel-card-editor\"\n    );\n    return document.createElement(\"hui-alarm-panel-card-editor\");\n  }\n\n  public static getStubConfig(\n    hass: HomeAssistant,\n    lovelaceConfig: LovelaceConfig,\n    entities?: string[],\n    entitiesFill?: string[]\n  ) {\n    const includeDomains = [\"alarm_control_panel\"];\n    const maxEntities = 1;\n    const foundEntities = findEntities(\n      hass,\n      lovelaceConfig,\n      maxEntities,\n      entities,\n      entitiesFill,\n      includeDomains\n    );\n\n    return {\n      states: [\"arm_home\", \"arm_away\"],\n      entity: foundEntities[0] || \"\",\n    };\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: AlarmPanelCardConfig;\n\n  @query(\"#alarmCode\") private _input?: PaperInputElement;\n\n  public getCardSize(): number {\n    if (!this._config || !this.hass) {\n      return 0;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    return !stateObj || stateObj.attributes.code_format !== FORMAT_NUMBER\n      ? 3\n      : 8;\n  }\n\n  public setConfig(config: AlarmPanelCardConfig): void {\n    if (\n      !config ||\n      !config.entity ||\n      config.entity.split(\".\")[0] !== \"alarm_control_panel\"\n    ) {\n      throw new Error(\"Invalid card configuration\");\n    }\n\n    const defaults = {\n      states: [\"arm_away\", \"arm_home\"],\n    };\n\n    this._config = { ...defaults, ...config };\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | AlarmPanelCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    if (changedProps.has(\"_config\")) {\n      return true;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n\n    if (\n      !oldHass ||\n      oldHass.themes !== this.hass!.themes ||\n      oldHass.language !== this.hass!.language\n    ) {\n      return true;\n    }\n    return (\n      oldHass.states[this._config!.entity] !==\n      this.hass!.states[this._config!.entity]\n    );\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <ha-card\n        .header=\"${this._config.name ||\n          stateObj.attributes.friendly_name ||\n          this._label(stateObj.state)}\"\n      >\n        <ha-label-badge\n          class=\"${classMap({ [stateObj.state]: true })}\"\n          .icon=\"${ICONS[stateObj.state] || \"hass:shield-outline\"}\"\n          .label=\"${this._stateIconLabel(stateObj.state)}\"\n        ></ha-label-badge>\n        <div id=\"armActions\" class=\"actions\">\n          ${(stateObj.state === \"disarmed\"\n            ? this._config.states!\n            : [\"disarm\"]\n          ).map((state) => {\n            return html`\n              <mwc-button\n                .action=\"${state}\"\n                @click=\"${this._handleActionClick}\"\n                outlined\n              >\n                ${this._label(state)}\n              </mwc-button>\n            `;\n          })}\n        </div>\n        ${!stateObj.attributes.code_format\n          ? html``\n          : html`\n              <paper-input\n                id=\"alarmCode\"\n                label=\"Alarm Code\"\n                type=\"password\"\n              ></paper-input>\n            `}\n        ${stateObj.attributes.code_format !== FORMAT_NUMBER\n          ? html``\n          : html`\n              <div id=\"keypad\">\n                ${BUTTONS.map((value) => {\n                  return value === \"\"\n                    ? html`\n                        <mwc-button disabled></mwc-button>\n                      `\n                    : html`\n                        <mwc-button\n                          .value=\"${value}\"\n                          @click=\"${this._handlePadClick}\"\n                          outlined\n                        >\n                          ${value === \"clear\"\n                            ? this._label(\"clear_code\")\n                            : value}\n                        </mwc-button>\n                      `;\n                })}\n              </div>\n            `}\n      </ha-card>\n    `;\n  }\n\n  private _stateIconLabel(state: string): string {\n    const stateLabel = state.split(\"_\").pop();\n    return stateLabel === \"disarmed\" ||\n      stateLabel === \"triggered\" ||\n      !stateLabel\n      ? \"\"\n      : stateLabel;\n  }\n\n  private _label(state: string): string {\n    return (\n      this.hass!.localize(`state.alarm_control_panel.${state}`) ||\n      this.hass!.localize(`ui.card.alarm_control_panel.${state}`)\n    );\n  }\n\n  private _handlePadClick(e: MouseEvent): void {\n    const val = (e.currentTarget! as any).value;\n    this._input!.value = val === \"clear\" ? \"\" : this._input!.value + val;\n  }\n\n  private _handleActionClick(e: MouseEvent): void {\n    const input = this._input!;\n    const code =\n      input && input.value && input.value.length > 0 ? input.value : \"\";\n    callAlarmAction(\n      this.hass!,\n      this._config!.entity,\n      (e.currentTarget! as any).action,\n      code\n    );\n    input.value = \"\";\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        padding-bottom: 16px;\n        position: relative;\n        --alarm-color-disarmed: var(--label-badge-green);\n        --alarm-color-pending: var(--label-badge-yellow);\n        --alarm-color-triggered: var(--label-badge-red);\n        --alarm-color-armed: var(--label-badge-red);\n        --alarm-color-autoarm: rgba(0, 153, 255, 0.1);\n        --alarm-state-color: var(--alarm-color-armed);\n      }\n\n      ha-label-badge {\n        --ha-label-badge-color: var(--alarm-state-color);\n        --label-badge-text-color: var(--alarm-state-color);\n        --label-badge-background-color: var(--paper-card-background-color);\n        color: var(--alarm-state-color);\n        position: absolute;\n        right: 12px;\n        top: 12px;\n      }\n\n      .disarmed {\n        --alarm-state-color: var(--alarm-color-disarmed);\n      }\n\n      .triggered {\n        --alarm-state-color: var(--alarm-color-triggered);\n        animation: pulse 1s infinite;\n      }\n\n      .arming {\n        --alarm-state-color: var(--alarm-color-pending);\n        animation: pulse 1s infinite;\n      }\n\n      .pending {\n        --alarm-state-color: var(--alarm-color-pending);\n        animation: pulse 1s infinite;\n      }\n\n      @keyframes pulse {\n        0% {\n          --ha-label-badge-color: var(--alarm-state-color);\n        }\n        100% {\n          --ha-label-badge-color: rgba(255, 153, 0, 0.3);\n        }\n      }\n\n      paper-input {\n        margin: 0 auto 8px;\n        max-width: 150px;\n        text-align: center;\n      }\n\n      .state {\n        margin-left: 16px;\n        position: relative;\n        bottom: 16px;\n        color: var(--alarm-state-color);\n        animation: none;\n      }\n\n      #keypad {\n        display: flex;\n        justify-content: center;\n        flex-wrap: wrap;\n        margin: auto;\n        width: 100%;\n        max-width: 300px;\n      }\n\n      #keypad mwc-button {\n        text-size: 20px;\n        padding: 8px;\n        width: 30%;\n        box-sizing: border-box;\n      }\n\n      .actions {\n        margin: 0 8px;\n        padding-top: 20px;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n      }\n\n      .actions mwc-button {\n        margin: 0 4px 4px;\n      }\n\n      mwc-button#disarm {\n        color: var(--google-red-500);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-alarm-panel-card\": HuiAlarmPanelCard;\n  }\n}\n","import { HomeAssistant } from \"../types\";\n\nexport const FORMAT_TEXT = \"text\";\nexport const FORMAT_NUMBER = \"number\";\n\nexport const callAlarmAction = (\n  hass: HomeAssistant,\n  entity: string,\n  action:\n    | \"arm_away\"\n    | \"arm_home\"\n    | \"arm_night\"\n    | \"arm_custom_bypass\"\n    | \"disarm\",\n  code: string\n) => {\n  hass!.callService(\"alarm_control_panel\", \"alarm_\" + action, {\n    entity_id: entity,\n    code,\n  });\n};\n"],"sourceRoot":""}