{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/components/ha-icon-input.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-light-card-editor.ts"],"names":["HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","Array","memoizeOne","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","stateObj","entity_id","value","attributes","device_class","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_clearValue","length","ev","stopPropagation","_setValue","detail","newValue","setTimeout","fireEvent","css","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","icon","configElementStyle","_decorate","customElement","F","kind","decorators","themes","concat","_changed","theme","static","target","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","newConfigEntities","newEntities","splice","assign","placeholder","errorMessage","bubbles","composed","cardConfigStruct","name","HuiLightCardEditor","config","_config","_entity","_name","_icon","stateIcon","_theme","configValue"],"mappings":"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","file":"chunk.8bee4a5b36558e2a15ea.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter,\n      this.includeDeviceClasses\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  @property() protected label?: string;\n\n  protected render(): TemplateResult {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>\n        ${this.label ||\n          this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.generic.entities\"\n          ) +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            ) +\n            \")\"}\n      </h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=${this.hass}\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=${this.hass}\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"./ha-icon\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public placeholder?: string;\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-theme-select-editor\";\n\nimport \"../../../../components/ha-icon-input\";\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { LightCardConfig } from \"../../cards/types\";\nimport { stateIcon } from \"../../../../common/entity/state_icon\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  name: \"string?\",\n  entity: \"string?\",\n  theme: \"string?\",\n  icon: \"string?\",\n});\n\n@customElement(\"hui-light-card-editor\")\nexport class HuiLightCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: LightCardConfig;\n\n  public setConfig(config: LightCardConfig): void {\n    this._config = cardConfigStruct(config);\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _icon(): string {\n    return this._config!.icon || \"\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=${this.hass}\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          include-domains='[\"light\"]'\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.name\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._name}\"\n            .configValue=\"${\"name\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <ha-icon-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.icon\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._icon}\"\n            .placeholder=${this._icon ||\n              stateIcon(this.hass.states[this._entity])}\n            .configValue=\"${\"icon\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></ha-icon-input>\n        </div>\n\n        <hui-theme-select-editor\n          .hass=${this.hass}\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-light-card-editor\": HuiLightCardEditor;\n  }\n}\n"],"sourceRoot":""}