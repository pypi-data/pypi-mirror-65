{"version":3,"sources":["webpack:///./src/panels/lovelace/common/validate-condition.ts","webpack:///./src/panels/lovelace/components/hui-conditional-base.ts","webpack:///./src/panels/lovelace/cards/hui-conditional-card.ts"],"names":["checkConditionsMet","conditions","hass","every","c","state","states","entity","state_not","validateConditionalConfig","__webpack_require__","d","__webpack_exports__","HuiConditionalBase","_decorate","customElement","_initialize","_UpdatingElement","F","[object Object]","args","super","this","kind","decorators","property","key","value","config","Error","Array","isArray","_element","parentElement","removeChild","_config","visible","appendChild","style","setProperty","UpdatingElement","_HuiConditionalBase","async","Promise","all","e","then","bind","document","createElement","card","validateConfig","createCardElement","computeCardSize"],"mappings":"wFAQO,SAASA,EACdC,EACAC,GAEA,OAAOD,EAAWE,MAAOC,IACvB,MAAMC,EAAQH,EAAKI,OAAOF,EAAEG,QACxBL,EAAMI,OAAOF,EAAEG,QAAQF,MACvB,cAEJ,OAAOD,EAAEC,MAAQA,IAAUD,EAAEC,MAAQA,IAAUD,EAAEI,YAI9C,SAASC,EAA0BR,GACxC,OAAOA,EAAWE,MACfC,GAAQA,EAAEG,SAAWH,EAAEC,OAASD,EAAEI,YAfvCE,EAAAC,EAAAC,EAAA,sBAAAZ,IAAAU,EAAAC,EAAAC,EAAA,sBAAAH,+xCCIO,IAAMI,80LAAbC,CAAA,CADCC,YAAc,yBACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EACwDE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QAAxDX,EAAA,EAAAY,KAAA,QAAAC,WAAA,CACGC,eADHC,IAAA,OAAAC,WAAA,IAAAJ,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,UAAAC,WAAA,IAAAJ,KAAA,QAAAG,IAAA,WAAAC,WAAA,IAAAJ,KAAA,SAAAG,IAAA,iBAAAC,MAKE,SACEC,GAEA,IAAKA,EAAO3B,WACV,MAAM,IAAI4B,MAAM,6BAGlB,IAAKC,MAAMC,QAAQH,EAAO3B,YACxB,MAAM,IAAI4B,MAAM,qCAGlB,IAAKpB,YAA0BmB,EAAO3B,YACpC,MAAM,IAAI4B,MAAM,2BAGdP,KAAKU,UAAYV,KAAKU,SAASC,eACjCX,KAAKY,YAAYZ,KAAKU,UAGxBV,KAAKa,QAAUP,IAxBnB,CAAAL,KAAA,SAAAG,IAAA,SAAAC,MA2BE,WACE,IAAKL,KAAKU,WAAaV,KAAKpB,KAC1B,OAGF,MAAMkC,EACJd,KAAKa,SAAWnC,YAAmBsB,KAAKa,QAAQlC,WAAYqB,KAAKpB,MAE/DkC,IACFd,KAAKU,SAAS9B,KAAOoB,KAAKpB,KACrBoB,KAAKU,SAASC,eACjBX,KAAKe,YAAYf,KAAKU,WAI1BV,KAAKgB,MAAMC,YAAY,UAAWH,EAAU,GAAK,aA1CbI,imOCJvCzB,YAAc,gDAAf,cAAA0B,EAC4EtB,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,iEAC1EoB,iBAIE,aAHMC,QAAAC,IAAA,CAAAlC,EAAAmC,EAAA,GAAAnC,EAAAmC,EAAA,GAAAnC,EAAAmC,EAAA,GAAAnC,EAAAmC,EAAA,KAAAnC,EAAAmC,EAAA,MAAAC,KAAApC,EAAAqC,KAAA,WAGCC,SAASC,cAAc,oFAGhC,WACE,MAAO,CACLhD,WAAY,GACZiD,KAAM,2CAIV,SAAiBtB,GAGf,GAFAN,KAAK6B,eAAevB,IAEfA,EAAOsB,KACV,MAAM,IAAIrB,MAAM,uBAGlBP,KAAKU,SAAWoB,YAAkBxB,EAAOsB,+CAG3C,WACE,OAAOG,YAAgB/B,KAAKU,eA1BCnB","file":"chunk.7e9d42ddbfe4fc67a889.js","sourcesContent":["import { HomeAssistant } from \"../../../types\";\n\nexport interface Condition {\n  entity: string;\n  state?: string;\n  state_not?: string;\n}\n\nexport function checkConditionsMet(\n  conditions: Condition[],\n  hass: HomeAssistant\n): boolean {\n  return conditions.every((c) => {\n    const state = hass.states[c.entity]\n      ? hass!.states[c.entity].state\n      : \"unavailable\";\n\n    return c.state ? state === c.state : state !== c.state_not;\n  });\n}\n\nexport function validateConditionalConfig(conditions: Condition[]): boolean {\n  return conditions.every(\n    (c) => ((c.entity && (c.state || c.state_not)) as unknown) as boolean\n  );\n}\n","import { customElement, property, UpdatingElement } from \"lit-element\";\n\nimport {\n  checkConditionsMet,\n  validateConditionalConfig,\n} from \"../common/validate-condition\";\nimport { HomeAssistant } from \"../../../types\";\nimport { LovelaceCard } from \"../types\";\nimport { LovelaceRow, ConditionalRowConfig } from \"../entity-rows/types\";\nimport { ConditionalCardConfig } from \"../cards/types\";\n\n@customElement(\"hui-conditional-base\")\nexport class HuiConditionalBase extends UpdatingElement {\n  @property() public hass?: HomeAssistant;\n  @property() protected _config?: ConditionalCardConfig | ConditionalRowConfig;\n  protected _element?: LovelaceCard | LovelaceRow;\n\n  protected validateConfig(\n    config: ConditionalCardConfig | ConditionalRowConfig\n  ): void {\n    if (!config.conditions) {\n      throw new Error(\"No conditions configured.\");\n    }\n\n    if (!Array.isArray(config.conditions)) {\n      throw new Error(\"Conditions should be in an array.\");\n    }\n\n    if (!validateConditionalConfig(config.conditions)) {\n      throw new Error(\"Conditions are invalid.\");\n    }\n\n    if (this._element && this._element.parentElement) {\n      this.removeChild(this._element);\n    }\n\n    this._config = config;\n  }\n\n  protected update(): void {\n    if (!this._element || !this.hass) {\n      return;\n    }\n\n    const visible =\n      this._config && checkConditionsMet(this._config.conditions, this.hass);\n\n    if (visible) {\n      this._element.hass = this.hass;\n      if (!this._element.parentElement) {\n        this.appendChild(this._element);\n      }\n    }\n\n    this.style.setProperty(\"display\", visible ? \"\" : \"none\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-base\": HuiConditionalBase;\n  }\n}\n","import { customElement } from \"lit-element\";\n\nimport { HuiConditionalBase } from \"../components/hui-conditional-base\";\nimport { createCardElement } from \"../create-element/create-card-element\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { computeCardSize } from \"../common/compute-card-size\";\nimport { ConditionalCardConfig } from \"./types\";\n\n@customElement(\"hui-conditional-card\")\nclass HuiConditionalCard extends HuiConditionalBase implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\n      /* webpackChunkName: \"hui-conditional-card-editor\" */ \"../editor/config-elements/hui-conditional-card-editor\"\n    );\n    return document.createElement(\"hui-conditional-card-editor\");\n  }\n\n  public static getStubConfig(): object {\n    return {\n      conditions: [],\n      card: {},\n    };\n  }\n\n  public setConfig(config: ConditionalCardConfig): void {\n    this.validateConfig(config);\n\n    if (!config.card) {\n      throw new Error(\"No card configured.\");\n    }\n\n    this._element = createCardElement(config.card) as LovelaceCard;\n  }\n\n  public getCardSize(): number {\n    return computeCardSize(this._element as LovelaceCard);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-conditional-card\": HuiConditionalCard;\n  }\n}\n"],"sourceRoot":""}