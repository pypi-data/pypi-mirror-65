{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-iframe-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","configElementStyle","html","cardConfigStruct","type","title","url","aspect_ratio","HuiIframeCardEditor","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","config","_config","hass","localize","_url","_valueChanged","_title","_aspect_ratio","replace","ev","target","configValue","Object","assign","fireEvent","LitElement"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,MAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,gFCLXR,EAAAC,EAAAC,EAAA,sBAAAQ,IAEO,MAAMA,EAFbV,EAAA,GAEkCW;;;;;;;;;;;;;;;;+0CCelC,MAAMC,EAAmBT,YAAO,CAC9BU,KAAM,SACNC,MAAO,UACPC,IAAK,UACLC,aAAc,YAIT,IAAMC,80LAAbC,CAAA,CADCC,YAAc,2BACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAEgCE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QADhCzB,EAAA,EAAA0B,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAAvB,WAAA,IAAAoB,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAAvB,WAAA,IAAAoB,KAAA,SAAAG,IAAA,YAAAvB,MAME,SAAiBwB,GACfA,EAASnB,EAAiBmB,GAC1BL,KAAKM,QAAUD,IARnB,CAAAJ,KAAA,MAAAG,IAAA,SAAAvB,MAWE,WACE,OAAOmB,KAAKM,QAASlB,OAAS,KAZlC,CAAAa,KAAA,MAAAG,IAAA,OAAAvB,MAeE,WACE,OAAOmB,KAAKM,QAASjB,KAAO,KAhBhC,CAAAY,KAAA,MAAAG,IAAA,gBAAAvB,MAmBE,WACE,OAAOmB,KAAKM,QAAShB,cAAgB,KApBzC,CAAAW,KAAA,SAAAG,IAAA,SAAAvB,MAuBE,WACE,OAAKmB,KAAKO,KAIHtB;QACHD;;;oBAGYgB,KAAKO,KAAKC,SAClB,iDACIR,KAAKO,KAAKC,SACd;oBAEQR,KAAKS;0BACC;4BACET,KAAKU;;;;sBAIXV,KAAKO,KAAKC,SAClB,mDACIR,KAAKO,KAAKC,SACd;sBAEQR,KAAKW;4BACC;8BACEX,KAAKU;;;sBAGbV,KAAKO,KAAKC,SAClB,0DACIR,KAAKO,KAAKC,SACd;sBAEQR,KAAKY,cAAcC,QAAQ,IAAK;4BAC1B;8BACEb,KAAKU;;;;;MAnCtBzB,QAzBb,CAAAgB,KAAA,SAAAG,IAAA,gBAAAvB,MAoEE,SAAsBiC,GACpB,IAAKd,KAAKM,UAAYN,KAAKO,KACzB,OAEF,MAAMQ,EAASD,EAAGC,OAClB,IAAIlC,EAAQkC,EAAOlC,MAES,iBAAxBkC,EAAOC,aAAmCD,EAAOlC,QACnDA,GAAS,KAGPmB,SAASe,EAAOC,iBAAmBnC,IAGnCkC,EAAOC,cACY,KAAjBD,EAAOlC,aACFmB,KAAKM,QAAQS,EAAOC,aAE3BhB,KAAKM,QAALW,OAAAC,OAAA,GAAoBlB,KAAKM,QAAzB,CAAkCT,CAACkB,EAAOC,aAAenC,KAG7DsC,YAAUnB,KAAM,iBAAkB,CAAEK,OAAQL,KAAKM,gBAzFZc","file":"chunk.d62ce8152aa83e10339d.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { IframeCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  url: \"string?\",\n  aspect_ratio: \"string?\",\n});\n\n@customElement(\"hui-iframe-card-editor\")\nexport class HuiIframeCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: IframeCardConfig;\n\n  public setConfig(config: IframeCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _url(): string {\n    return this._config!.url || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.url\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .value=\"${this._url}\"\n          .configValue=\"${\"url\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.title\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._title}\"\n            .configValue=\"${\"title\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.aspect_ratio\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._aspect_ratio.replace(\"%\", \"\")}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n            ><div slot=\"suffix\">%</div></paper-input\n          >\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    let value = target.value;\n\n    if (target.configValue! === \"aspect_ratio\" && target.value) {\n      value += \"%\";\n    }\n\n    if (this[`_${target.configValue}`] === value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-iframe-card-editor\": HuiIframeCardEditor;\n  }\n}\n"],"sourceRoot":""}