{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-stack-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","cardConfigStruct","type","cards","title","HuiStackCardEditor","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","kind","decorators","property","key","config","_config","hass","html","selected","_selectedCard","numcards","length","_handleSelectedCard","map","_card","i","undefined","_handleMove","_handleDeleteCard","lovelace","_handleConfigChanged","_handleCardPicked","ev","target","id","parseInt","stopPropagation","detail","fireEvent","push","splice","Math","max","source","card","static","css","LitElement"],"mappings":"oGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,MAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,k3CCaX,MAAME,EAAmBP,YAAO,CAC9BQ,KAAM,SACNC,MAAO,CAAC,OACRC,MAAO,YAIF,IAAMC,80LAAbC,CAAA,CADCC,YAAc,0BACf,SAAAC,EAAAC,GAAA,OAAAC,EADA,cAAAD,EAEgCE,eAAAC,GAAAC,SAAAD,GAAAJ,EAAAM,QADhCtB,EAAA,EAAAuB,KAAA,QAAAC,WAAA,CAEGC,eAFHC,IAAA,OAAApB,WAAA,IAAAiB,KAAA,QAAAC,WAAA,CAGGC,eAHHC,IAAA,WAAApB,WAAA,IAAAiB,KAAA,QAAAC,WAAA,CAIGC,eAJHC,IAAA,UAAApB,WAAA,IAAAiB,KAAA,QAAAC,WAAA,CAKGC,eALHC,IAAA,gBAAApB,MAAA,IAK8C,GAL9C,CAAAiB,KAAA,SAAAG,IAAA,YAAApB,MAOE,SAAiBqB,GACfL,KAAKM,QAAUnB,EAAiBkB,KARpC,CAAAJ,KAAA,SAAAG,IAAA,SAAApB,MAWE,WACE,IAAKgB,KAAKO,OAASP,KAAKM,QACtB,OAAOE,MAET,MAAMC,EAAWT,KAAKU,cAChBC,EAAWX,KAAKM,QAAQjB,MAAMuB,OAEpC,OAAOJ;;;;wBAIaC;;2BAEGT,KAAKa;;cAElBb,KAAKM,QAAQjB,MAAMyB,IAAI,CAACC,EAAOC,IACxBR;;oBAEDQ,EAAI;;;;;;wBAOAP,IAAaE,EAAW,SAAMM;2BAC3BjB,KAAKa;;;;;;;;;YAUpBJ,EAAWE,EACPH;;;;;;kCAM+B,IAAbC;+BACHT,KAAKkB;;;;;;;kCAOFT,IAAaE,EAAW;+BAC3BX,KAAKkB;;;;;+BAKLlB,KAAKmB;;;;;4BAKRnB,KAAKO;8BACHP,KAAKM,QAAQjB,MAAMoB;gCACjBT,KAAKoB;uCACEpB,KAAKqB;;kBAG5Bb;;4BAEYR,KAAKO;gCACDP,KAAKoB;uCACEpB,KAAKsB;;;;;QAnF5C,CAAArB,KAAA,SAAAG,IAAA,sBAAApB,MA4FE,SAA4BuC,GAC1BvB,KAAKU,cACc,aAAjBa,EAAGC,OAAOC,GACNzB,KAAKM,QAASjB,MAAMuB,OACpBc,SAASH,EAAGC,OAAOf,SAAU,MAhGvC,CAAAR,KAAA,SAAAG,IAAA,uBAAApB,MAmGE,SAA6BuC,GAC3BA,EAAGI,kBACE3B,KAAKM,UAGVN,KAAKM,QAAQjB,MAAMW,KAAKU,eAAiBa,EAAGK,OAAOvB,OACnDwB,YAAU7B,KAAM,iBAAkB,CAAEK,OAAQL,KAAKM,aAzGrD,CAAAL,KAAA,SAAAG,IAAA,oBAAApB,MA4GE,SAA0BuC,GAExB,GADAA,EAAGI,mBACE3B,KAAKM,QACR,OAEF,MAAMD,EAASkB,EAAGK,OAAOvB,OACzBL,KAAKM,QAAQjB,MAAMyC,KAAKzB,GACxBwB,YAAU7B,KAAM,iBAAkB,CAAEK,OAAQL,KAAKM,YAnHrD,CAAAL,KAAA,SAAAG,IAAA,oBAAApB,MAsHE,WACOgB,KAAKM,UAGVN,KAAKM,QAAQjB,MAAM0C,OAAO/B,KAAKU,cAAe,GAC9CV,KAAKU,cAAgBsB,KAAKC,IAAI,EAAGjC,KAAKU,cAAgB,GACtDmB,YAAU7B,KAAM,iBAAkB,CAAEK,OAAQL,KAAKM,aA5HrD,CAAAL,KAAA,SAAAG,IAAA,cAAApB,MA+HE,SAAoBuC,GAClB,IAAKvB,KAAKM,QACR,OAEF,MAAM4B,EAASlC,KAAKU,cACdc,EAA0B,gBAAjBD,EAAGC,OAAOC,GAAuBS,EAAS,EAAIA,EAAS,EAChEC,EAAOnC,KAAKM,QAAQjB,MAAM0C,OAAO/B,KAAKU,cAAe,GAAG,GAC9DV,KAAKM,QAAQjB,MAAM0C,OAAOP,EAAQ,EAAGW,GACrCnC,KAAKU,cAAgBc,EACrBK,YAAU7B,KAAM,iBAAkB,CAAEK,OAAQL,KAAKM,YAxIrD,CAAAL,KAAA,MAAAmC,QAAA,EAAAhC,IAAA,SAAApB,MA2IE,WACE,OAAOqD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA5I6BC","file":"chunk.07da9babd817f61e5ac5.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@polymer/paper-tabs\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { StackCardConfig } from \"../../cards/types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { LovelaceConfig } from \"../../../../data/lovelace\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  cards: [\"any\"],\n  title: \"string?\",\n});\n\n@customElement(\"hui-stack-card-editor\")\nexport class HuiStackCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n  @property() public lovelace?: LovelaceConfig;\n  @property() private _config?: StackCardConfig;\n  @property() private _selectedCard: number = 0;\n\n  public setConfig(config: StackCardConfig): void {\n    this._config = cardConfigStruct(config);\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n    const selected = this._selectedCard!;\n    const numcards = this._config.cards.length;\n\n    return html`\n      <div class=\"card-config\">\n        <div class=\"toolbar\">\n          <paper-tabs\n            .selected=${selected}\n            scrollable\n            @iron-select=${this._handleSelectedCard}\n          >\n            ${this._config.cards.map((_card, i) => {\n              return html`\n                <paper-tab>\n                  ${i + 1}\n                </paper-tab>\n              `;\n            })}\n          </paper-tabs>\n          <paper-tabs\n            id=\"add-card\"\n            .selected=${selected === numcards ? \"0\" : undefined}\n            @iron-select=${this._handleSelectedCard}\n          >\n            <paper-tab>\n              <ha-icon icon=\"hass:plus\"></ha-icon>\n            </paper-tab>\n          <paper-tabs>\n        </div>\n\n        <div id=\"editor\">\n          ${\n            selected < numcards\n              ? html`\n                  <div id=\"card-options\">\n                    <paper-icon-button\n                      id=\"move-before\"\n                      title=\"Move card before\"\n                      icon=\"hass:arrow-left\"\n                      ?disabled=${selected === 0}\n                      @click=${this._handleMove}\n                    ></paper-icon-button>\n\n                    <paper-icon-button\n                      id=\"move-after\"\n                      title=\"Move card after\"\n                      icon=\"hass:arrow-right\"\n                      ?disabled=${selected === numcards - 1}\n                      @click=${this._handleMove}\n                    ></paper-icon-button>\n\n                    <paper-icon-button\n                      icon=\"hass:delete\"\n                      @click=${this._handleDeleteCard}\n                    ></paper-icon-button>\n                  </div>\n\n                  <hui-card-editor\n                    .hass=${this.hass}\n                    .value=\"${this._config.cards[selected]}\"\n                    .lovelace=${this.lovelace}\n                    @config-changed=\"${this._handleConfigChanged}\"\n                  ></hui-card-editor>\n                `\n              : html`\n                  <hui-card-picker\n                    .hass=${this.hass}\n                    .lovelace=${this.lovelace}\n                    @config-changed=\"${this._handleCardPicked}\"\n                  ></hui-card-picker>\n                `\n          }\n        </div>\n      </div>\n    `;\n  }\n\n  private _handleSelectedCard(ev) {\n    this._selectedCard =\n      ev.target.id === \"add-card\"\n        ? this._config!.cards.length\n        : parseInt(ev.target.selected, 10);\n  }\n\n  private _handleConfigChanged(ev) {\n    ev.stopPropagation();\n    if (!this._config) {\n      return;\n    }\n    this._config.cards[this._selectedCard] = ev.detail.config;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleCardPicked(ev) {\n    ev.stopPropagation();\n    if (!this._config) {\n      return;\n    }\n    const config = ev.detail.config;\n    this._config.cards.push(config);\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleDeleteCard() {\n    if (!this._config) {\n      return;\n    }\n    this._config.cards.splice(this._selectedCard, 1);\n    this._selectedCard = Math.max(0, this._selectedCard - 1);\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _handleMove(ev) {\n    if (!this._config) {\n      return;\n    }\n    const source = this._selectedCard;\n    const target = ev.target.id === \"move-before\" ? source - 1 : source + 1;\n    const card = this._config.cards.splice(this._selectedCard, 1)[0];\n    this._config.cards.splice(target, 0, card);\n    this._selectedCard = target;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .toolbar {\n        display: flex;\n        --paper-tabs-selection-bar-color: var(--primary-color);\n        --paper-tab-ink: var(--primary-color);\n      }\n      paper-tabs {\n        display: flex;\n        font-size: 14px;\n        flex-grow: 1;\n      }\n      #add-card {\n        max-width: 32px;\n        padding: 0;\n      }\n\n      #card-options {\n        display: flex;\n        justify-content: flex-end;\n        width: 100%;\n      }\n\n      #editor {\n        border: 1px solid var(--divider-color);\n        padding: 12px;\n      }\n      @media (max-width: 450px) {\n        #editor {\n          margin: 0 -12px;\n        }\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-stack-card-editor\": HuiStackCardEditor;\n  }\n}\n"],"sourceRoot":""}