Metadata-Version: 2.1
Name: pocketing
Version: 0.0.16
Summary: Generate 2D toolpaths from polygons
Home-page: http://github.com/mikedh/pocketing
Author: Michael Dawson-Haggerty
Author-email: mikedh@kerfed.com
License: MIT
Keywords: graphics mesh geometry 3D
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Natural Language :: English
Classifier: Topic :: Scientific/Engineering
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: rtree
Requires-Dist: shapely
Requires-Dist: networkx
Requires-Dist: trimesh

# pypocketing: ALPHA

[![Test And Publish](https://github.com/mikedh/pocketing/workflows/Test%20And%20Publish/badge.svg)](https://github.com/mikedh/pocketing/actions?query=workflow%3A%22Test+And+Publish%22) [![PyPI version](https://badge.fury.io/py/pocketing.svg)](https://pypi.org/project/pocketing/)
----------------------





![ScreenShot](https://raw.github.com/mikedh/pypocketing/master/docs/contour_troch.png)

Fill 2D regions with traversals, useful someday for generating milling tool paths.

## Disclaimer: Crusty Alpha Software
This is a dump of a bunch of prototype code. It is only put up in the hopes that it becomes less terrible someday, but until then you should probably use something else: [pyactp](https://github.com/mikedh/pyactp), [openvoronoi](https://github.com/aewallin/openvoronoi), [opencamlib](https://github.com/aewallin/opencamlib), [libarea](https://github.com/Heeks/libarea)


## Design Goals: Why Bother

There are a lot of other options above. However, most of them aren't super active and are generally C- based with python bindings. This is intended as a vectorized numpy approach to the same problem, in the vein of [trimesh](https://github.com/mikedh/trimesh).

## Scope
- Accept shapely.geometry.Polygon objects as input
- Generate toolpath output as a sequence of (n, 2) float arrays
- Collision check and calculate feed rates using raster checks

