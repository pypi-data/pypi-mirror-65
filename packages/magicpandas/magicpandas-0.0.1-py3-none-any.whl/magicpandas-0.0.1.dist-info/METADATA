Metadata-Version: 2.1
Name: magicpandas
Version: 0.0.1
Summary: A dead simple interface for manipulating pandas dataframes
Home-page: https://github.com/pypa/magicpandas
Author: pandichef
License: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4
Description-Content-Type: text/markdown
Requires-Dist: altair (==4.1.0)
Requires-Dist: attrs (==19.3.0)
Requires-Dist: entrypoints (==0.3)
Requires-Dist: jinja2 (==2.11.1)
Requires-Dist: jsonschema (==3.2.0)
Requires-Dist: markupsafe (==1.1.1)
Requires-Dist: numpy (==1.18.2)
Requires-Dist: pandas (==1.0.3)
Requires-Dist: patsy (==0.5.1)
Requires-Dist: pyrsistent (==0.16.0)
Requires-Dist: python-dateutil (==2.8.1)
Requires-Dist: pytz (==2019.3)
Requires-Dist: scipy (==1.4.1)
Requires-Dist: six (==1.14.0)
Requires-Dist: statsmodels (==0.11.1)
Requires-Dist: toolz (==0.10.0)
Requires-Dist: xlsxwriter (==1.2.8)
Requires-Dist: zipp (==3.1.0)
Requires-Dist: importlib-metadata (==1.6.0) ; python_version < "3.8"
Provides-Extra: dev

\#\#\#\#\# UNDER CONSTRUCTION \#\#\#\#\# 

### magicpandas
*magicpandas* makes working with pandas dead simple.

### Main Features
* MagicDataFrame subclasses DataFrame to make existing methods more intuitive as well as add new methods
* MagicDataFrame adds verbose labels that are used by default when displaying data
* MagicDataFrame supports Django ORM  
  * inspectdf uses DataFrame column types to produce a Django model class (cf. [inspectdb](https://docs.djangoproject.com/en/3.0/howto/legacy-databases/#auto-generate-the-models))
  * to_django saves the DataFrame to SQL using Django ORM's [bulk_update](https://docs.djangoproject.com/en/3.0/ref/models/querysets/#bulk-update) and [bulk_create](https://docs.djangoproject.com/en/3.0/ref/models/querysets/#bulk-create).

##### Examples
```python
df2 = df.drop('*e', axis=1) # df2 drops all columns ending in "e"
df.browse() # opens the DataFrame in MS Excel with nice formatting
df.browse(client='webbrowser') # opens the DataFrame as html displayed in Chrome with nice formatting
```

### TODO
* chromify(chart.to_html())
* inspect_as_django_model
* to_django


