Metadata-Version: 2.1
Name: kendall-w
Version: 1.0.0
Summary: Computes Kendall's coefficient of concordance
Home-page: https://github.com/ugolbck/kendall-w
Author: Ugo Loobuyck
Author-email: ugo.loobuyck@gmail.com
License: BSD
Download-URL: https://github.com/ugolbck/kendall-w/tarball/1.0.0
Description: kendall-w
        ==========
        
        ![version](https://img.shields.io/pypi/v/kendall-w)
        [![codecov](https://codecov.io/gh/ugolbck/kendall-w/branch/master/graph/badge.svg)](https://codecov.io/gh/ugolbck/kendall-w)
        [![Build Status](https://travis-ci.com/ugolbck/kendall-w.svg?branch=master)](https://travis-ci.com/ugolbck/kendall-w)
        ![python](https://img.shields.io/pypi/pyversions/kendall-w)
        ![downloads](https://pepy.tech/badge/kendall-w)
        
        Author: **Ugo Loobuyck**
        
        Overview
        --------
        
        Computes Kendall's coefficient of concordance for inter-annotator agreement
        in the case of item ranking between more than two annotators.
        
        Installation
        ------------
        
        To install use pip:
        
            $ pip install kendall-w
        
        
        Or clone the repo:
        
            $ git clone https://github.com/ugolbck/kendall-w.git
            $ python setup.py install
        
        
        Usage
        -------
        
        ```python
        import kendall_w as kw
        
        annotations = [
                [1, 1, 1, 2],
                [2, 2, 2, 3],
                [3, 3, 3, 1],
            ]
        
        W = kw.compute_w(annotations) # returns 0.4375 (fair overall agreement)
        ```
        
        Contributions
        -------------
        
        *All contributions are welcome.*
        
        #### How to help?
        
        1. Fork this repository to your GitHub account
        2. Clone the forked repositery to local
        3. Code something and push to your branch
        4. Create a pull request from your repository
        
        #### TODO:
        
        - Handle ```pandas.DataFrame``` as an input with the instructions in [the main file](https://github.com/ugolbck/kendall-w/blob/master/kendall_w/kendall_w.py)
        - Use numpy for faster computation?
Keywords: kendall,annotator,agreement,rank,metric
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering :: Mathematics
Description-Content-Type: text/markdown
