'use strict';import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,
__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,
getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="__main__";export var is_checked=function(element,filter_class){return" {} ".format(element.className).indexOf(" {} ".format(filter_class))>-1};export var style_hide=function(element){if(element.style)element.style.display="none";else element.style=
dict({"display":"none"})};export var style_display=function(element){if(element.style)element.style.display=""};export var Faceted=__class__("Faceted",[object],{__module__:__name__,get __init__(){return __get__(this,function(self,data_class,batch_size,pagination_class){if(typeof batch_size=="undefined"||batch_size!=null&&batch_size.hasOwnProperty("__kwargtrans__"))var batch_size=null;if(typeof pagination_class=="undefined"||pagination_class!=null&&pagination_class.hasOwnProperty("__kwargtrans__"))var pagination_class=
null;self.data_class=data_class;self.batch_size=batch_size;self.size=0;self.pagination_class=pagination_class;self.batch_faceted=null;self.batch_pagination=[];self.py_values=null;self.field_name=null;self.next_url=null})},get _get_data(){return __get__(this,function(self){return document.getElementsByClassName(self.data_class)})},get next_callback(){return __get__(this,function(self){if(self.next_url!==null){self.batch_faceted.innerHTML="";return self._next_faceted(self.next_url)}})},get _next_url(){return __get__(this,
function(self,html){var a_next=html.querySelector('.{} [rel="next"]'.format(self.pagination_class));if(bool(a_next))return a_next.getAttribute("href")})},get _next_faceted(){return __get__(this,function(self,next_url){if(next_url===null)return;if(self.size>=self.batch_size){self.next_url=next_url;self.size=0;return}self.next_url=null;var xhr=new XMLHttpRequest;var parse_faceted=function(){if(xhr.readyState==4&&xhr.status==200){var html=document.createElement("html");html.innerHTML=xhr.responseText;
var faceted_html=html.getElementsByClassName(self.data_class);self.filter_field(faceted_html);self._next_faceted(self._next_url(html))}};xhr.onreadystatechange=parse_faceted;xhr.open("GET",next_url);xhr.send()})},get init_filtering(){return __get__(this,function(self){if(self.batch_faceted!==null){self.batch_faceted.innerHTML="";return}for(var faceted of self.data)style_hide(faceted);var paginations=document.querySelectorAll(".{}".format(self.pagination_class));for(var pagination of paginations)style_hide(pagination);
var original=self.data[0];var faceted=original.cloneNode(false);style_display(faceted);original.insertAdjacentElement("afterend",faceted);self.batch_faceted=faceted;for(var pagination of paginations){var pagination_clone=pagination.cloneNode(false);style_display(pagination_clone);pagination.insertAdjacentElement("afterend",pagination_clone);for(var link_next of pagination.querySelectorAll('[rel="next"]')){var next_clone=link_next.cloneNode(true);next_clone.removeAttribute("href");next_clone.addEventListener("click",
self.next_callback);pagination_clone.insertAdjacentElement("beforeend",next_clone)}self.batch_pagination.append(pagination_clone)}})},get end_filtering(){return __get__(this,function(self){self.batch_faceted.remove();self.batch_faceted=null;for(var pagination of self.batch_pagination)pagination.remove();self.batch_pagination=[];for(var faceted of self.data)style_display(faceted);var paginations=document.querySelectorAll(".{}".format(self.pagination_class));for(var pagination of paginations)style_display(pagination)})},
get _select_element(){return __get__(this,function(self,element,select){if(typeof select=="undefined"||select!=null&&select.hasOwnProperty("__kwargtrans__"))var select=true;if(self.batch_faceted!==null){if(select){var clone=element.cloneNode(true);self.batch_faceted.insertAdjacentElement("beforeend",clone)}}else if(select)style_display(element);else style_hide(element)})},get _filter_one(){return __get__(this,function(self,faceted){for(var element of faceted.childNodes){var hide=bool(self.py_values);
for(var value of self.py_values){var filter_class="{}-{}".format(self.field_name,value);if(is_checked(element,filter_class)){var hide=false;self.size++;break}}self._select_element(element,!hide);if(self.batch_size&&self.size>=self.batch_size)break}})},get filter(){return __get__(this,function(self,field){if(len(field.selectedOptions)>1)self.py_values=function(){var __accu0__=[];for(var option of field.selectedOptions)__accu0__.append(option.value);return __accu0__}();else if(field.value)self.py_values=
[field.value];else self.py_values=[];if(self.batch_faceted!==null&&!bool(self.py_values)){self.end_filtering();return}if(self.batch_size)self.init_filtering();self.field_name=field.getAttribute("name");self.filter_field(self.data);if(self.batch_faceted!==null)self._next_faceted(self._next_url(document))})},get filter_field(){return __get__(this,function(self,data){for(var faceted of data)if(!faceted.isEqualNode(self.batch_faceted))self._filter_one(faceted)})}});Object.defineProperty(Faceted,"data",
property.call(Faceted,Faceted._get_data));export var VirtualSelect=__class__("VirtualSelect",[object],{__module__:__name__,get __init__(){return __get__(this,function(self,py_name,faceted){if(typeof faceted=="undefined"||faceted!=null&&faceted.hasOwnProperty("__kwargtrans__"))var faceted=null;self.py_name=py_name;self.faceted=faceted;self.selected=[]})},get _call_onchange(){return __get__(this,function(self){if(self.faceted)self.faceted.filter(self)})},get _get_value(){return __get__(this,function(self){if(self.selected)return self.selected[0]})},
get _get_selectedOptions(){return __get__(this,function(self){return function(){var __accu0__=[];for(var value of self.selected)__accu0__.append(dict({"value":value}));return __accu0__}()})},get getAttribute(){return __get__(this,function(self,attr){if(attr=="name")return self.py_name})},get reset(){return __get__(this,function(self){self.selected=[];self._call_onchange()})},get toggle(){return __get__(this,function(self,value){if(__in__(value,self.selected))self.selected.remove(value);else self.selected.append(value);
self._call_onchange()})}});Object.defineProperty(VirtualSelect,"selectedOptions",property.call(VirtualSelect,VirtualSelect._get_selectedOptions));Object.defineProperty(VirtualSelect,"value",property.call(VirtualSelect,VirtualSelect._get_value));

//# sourceMappingURL=scripts.map