# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import common_pb2 as common__pb2


class VersionServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/GetVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.GetLatestVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/GetLatestVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.IsProblemVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/IsProblemVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.GetVersionList = channel.unary_unary(
        '/longleding.system_settings.VersionService/GetVersionList',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.GetVersionPageList = channel.unary_unary(
        '/longleding.system_settings.VersionService/GetVersionPageList',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.AddVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/AddVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.EditVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/EditVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.DelVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/DelVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.MarkVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/MarkVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.GetLowestVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/GetLowestVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.UpdateAdviseVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/UpdateAdviseVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )
    self.UpdateForceVersion = channel.unary_unary(
        '/longleding.system_settings.VersionService/UpdateForceVersion',
        request_serializer=common__pb2.RequestMessage.SerializeToString,
        response_deserializer=common__pb2.ResponseMessage.FromString,
        )


class VersionServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLatestVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IsProblemVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVersionList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVersionPageList(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def EditVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DelVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MarkVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLowestVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateAdviseVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateForceVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VersionServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'GetLatestVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetLatestVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'IsProblemVersion': grpc.unary_unary_rpc_method_handler(
          servicer.IsProblemVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'GetVersionList': grpc.unary_unary_rpc_method_handler(
          servicer.GetVersionList,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'GetVersionPageList': grpc.unary_unary_rpc_method_handler(
          servicer.GetVersionPageList,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'AddVersion': grpc.unary_unary_rpc_method_handler(
          servicer.AddVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'EditVersion': grpc.unary_unary_rpc_method_handler(
          servicer.EditVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'DelVersion': grpc.unary_unary_rpc_method_handler(
          servicer.DelVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'MarkVersion': grpc.unary_unary_rpc_method_handler(
          servicer.MarkVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'GetLowestVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetLowestVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'UpdateAdviseVersion': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateAdviseVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
      'UpdateForceVersion': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateForceVersion,
          request_deserializer=common__pb2.RequestMessage.FromString,
          response_serializer=common__pb2.ResponseMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'longleding.system_settings.VersionService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
