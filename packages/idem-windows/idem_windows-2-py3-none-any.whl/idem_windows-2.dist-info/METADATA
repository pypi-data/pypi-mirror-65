Metadata-Version: 2.1
Name: idem-windows
Version: 2
Summary: Vertical app merge components for idem and corn to support windows
Home-page: UNKNOWN
Author: 
Author-email: 
License: UNKNOWN
Platform: UNKNOWN
Classifier: Operating System :: Microsoft
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Development Status :: 5 - Production/Stable
Requires-Python: >=3.6
Description-Content-Type: text/x-rst
Requires-Dist: aiofiles (>=0.4.0)
Requires-Dist: corn (>=6)
Requires-Dist: dnspython (>=1.16.0)
Requires-Dist: idem (>=5.3)
Requires-Dist: pop (>=12)
Requires-Dist: pop-config (>=5.5)
Requires-Dist: python-dateutil (>=2.8.1)
Requires-Dist: pywin32 (>=227)
Requires-Dist: rend (>=4.2)
Requires-Dist: wmi (>=1.4.9)

***********
POP_WINDOWS
***********
**Grains, execution modules, and state modules common to all windows systems**

INSTALLATION
============


Pip install grains::

    pip install -e git+https://gitlab.com/saltstack/pop/grains.git#egg=chunkies

Clone the `pop_windows` repo and install with pip::

    git clone https://gitlab.com/saltstack/pop/pop_windows.git
    pip install -e pop_windows

EXECUTION
=========
After installation the `grains` command should now be available

TESTING
=======
install `requirements-test.txt` with pip and run pytest::

    pip install -r pop_windows\requirements-test.txt
    pytest pop_windows\tests

VERTICAL APP-MERGING
====================
Instructions for extending pop-windows into an OS or distro specific pop project

Install pop::

    pip install --upgrade pop

Create a new directory for the project::

    mkdir pop_{specific_windows_system}
    cd pop_{specific_windows_system}


Use `pop-seed` to generate the structure of a project that extends `grains` and `idem`::

    pop-seed -t v pop_{specific_windows_system} -d grains exec states

* "-t v" specifies that this is a vertically app-merged project
*  "-d grains exec states" says that we want to implement the dynamic names of "grains", "exec", and "states"

Add "pop_windows" to the requirements.txt::

    echo "pop_windows @ git+https://gitlab.com/saltstack/pop/pop_windows.git" >> requirements.txt

And that's it!  Go to town making grains, execution modules, and state modules specific to your unique windows system.
Follow the conventions you see in pop_windows.

For information about running idem states and execution modules check out
https://idem.readthedocs.io


