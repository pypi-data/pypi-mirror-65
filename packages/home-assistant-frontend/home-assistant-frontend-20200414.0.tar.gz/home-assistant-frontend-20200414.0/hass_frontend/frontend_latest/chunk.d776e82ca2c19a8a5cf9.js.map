{"version":3,"sources":["webpack:///./src/panels/config/entities/entity-registry-basic-editor.ts","webpack:///./src/panels/config/entities/editor-tabs/settings/entity-settings-helper-tab.ts"],"names":["_decorate","customElement","_initialize","_LitElement","HaEntityRegistryBasicEditor","[object Object]","args","super","this","F","d","kind","decorators","property","key","value","async","_submitting","params","new_entity_id","_entityId","trim","_disabledBy","disabled_by","updateEntityRegistryEntry","hass","_origEntityId","changedProperties","_get","_getPrototypeOf","prototype","call","has","entry","entity_id","html","invalidDomainUpdate","computeDomain","_entityIdChanged","localize","_disabledByChanged","ev","detail","target","checked","static","css","LitElement","HELPERS","input_boolean","fetch","fetchInputBoolean","update","updateInputBoolean","delete","deleteInputBoolean","input_text","fetchInputText","updateInputText","deleteInputText","input_number","fetchInputNumber","updateInputNumber","deleteInputNumber","input_datetime","fetchInputDateTime","updateInputDateTime","deleteInputDateTime","input_select","fetchInputSelect","updateInputSelect","deleteInputSelect","EntityRegistrySettingsHelper","entity_settings_helper_tab_decorate","query","entity_settings_helper_tab_get","entity_settings_helper_tab_getPrototypeOf","_componentLoaded","isComponentLoaded","platform","_error","undefined","_item","_getItem","stateObj","states","dialogElement","_valueChanged","dynamicElement","item","_confirmDeleteItem","attributes","restored","_updateItem","name","items","find","id","unique_id","updateComplete","fireEvent","_this$_registryEditor","_registryEditor","updateEntry","err","message","showConfirmationDialog","text","removeEntityRegistryEntry"],"mappings":"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","file":"chunk.d776e82ca2c19a8a5cf9.js","sourcesContent":["import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport \"../../../components/ha-switch\";\nimport type { HaSwitch } from \"../../../components/ha-switch\";\nimport {\n  EntityRegistryEntryUpdateParams,\n  ExtEntityRegistryEntry,\n  updateEntityRegistryEntry,\n} from \"../../../data/entity_registry\";\nimport type { PolymerChangedEvent } from \"../../../polymer-types\";\nimport type { HomeAssistant } from \"../../../types\";\n\n@customElement(\"ha-registry-basic-editor\")\nexport class HaEntityRegistryBasicEditor extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public entry!: ExtEntityRegistryEntry;\n\n  @property() private _origEntityId!: string;\n\n  @property() private _entityId!: string;\n\n  @property() private _disabledBy!: string | null;\n\n  @property() private _submitting?: boolean;\n\n  public async updateEntry(): Promise<void> {\n    this._submitting = true;\n    const params: Partial<EntityRegistryEntryUpdateParams> = {\n      new_entity_id: this._entityId.trim(),\n    };\n    if (this._disabledBy === null || this._disabledBy === \"user\") {\n      params.disabled_by = this._disabledBy;\n    }\n    try {\n      await updateEntityRegistryEntry(this.hass!, this._origEntityId, params);\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (!changedProperties.has(\"entry\")) {\n      return;\n    }\n    if (this.entry) {\n      this._origEntityId = this.entry.entity_id;\n      this._entityId = this.entry.entity_id;\n      this._disabledBy = this.entry.disabled_by;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      !this.entry ||\n      this.entry.entity_id !== this._origEntityId\n    ) {\n      return html``;\n    }\n    const invalidDomainUpdate =\n      computeDomain(this._entityId.trim()) !==\n      computeDomain(this.entry.entity_id);\n\n    return html`\n      <paper-input\n        .value=${this._entityId}\n        @value-changed=${this._entityIdChanged}\n        .label=${this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.entity_id\"\n        )}\n        error-message=\"Domain needs to stay the same\"\n        .invalid=${invalidDomainUpdate}\n        .disabled=${this._submitting}\n      ></paper-input>\n      <div class=\"row\">\n        <ha-switch\n          .checked=${!this._disabledBy}\n          @change=${this._disabledByChanged}\n        >\n          <div>\n            <div>\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.enabled_label\"\n              )}\n            </div>\n            <div class=\"secondary\">\n              ${this._disabledBy && this._disabledBy !== \"user\"\n                ? this.hass.localize(\n                    \"ui.dialogs.entity_registry.editor.enabled_cause\",\n                    \"cause\",\n                    this.hass.localize(\n                      `config_entry.disabled_by.${this._disabledBy}`\n                    )\n                  )\n                : \"\"}\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.enabled_description\"\n              )}\n              <br />${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.note\"\n              )}\n            </div>\n          </div>\n        </ha-switch>\n      </div>\n    `;\n  }\n\n  private _entityIdChanged(ev: PolymerChangedEvent<string>): void {\n    this._entityId = ev.detail.value;\n  }\n\n  private _disabledByChanged(ev: Event): void {\n    this._disabledBy = (ev.target as HaSwitch).checked ? null : \"user\";\n  }\n\n  static get styles() {\n    return css`\n      .row {\n        margin-top: 8px;\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../../../common/config/is_component_loaded\";\nimport { dynamicElement } from \"../../../../../common/dom/dynamic-element-directive\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { HaPaperDialog } from \"../../../../../components/dialog/ha-paper-dialog\";\nimport {\n  ExtEntityRegistryEntry,\n  removeEntityRegistryEntry,\n} from \"../../../../../data/entity_registry\";\nimport {\n  deleteInputBoolean,\n  fetchInputBoolean,\n  updateInputBoolean,\n} from \"../../../../../data/input_boolean\";\nimport {\n  deleteInputDateTime,\n  fetchInputDateTime,\n  updateInputDateTime,\n} from \"../../../../../data/input_datetime\";\nimport {\n  deleteInputNumber,\n  fetchInputNumber,\n  updateInputNumber,\n} from \"../../../../../data/input_number\";\nimport {\n  deleteInputSelect,\n  fetchInputSelect,\n  updateInputSelect,\n} from \"../../../../../data/input_select\";\nimport {\n  deleteInputText,\n  fetchInputText,\n  updateInputText,\n} from \"../../../../../data/input_text\";\nimport { showConfirmationDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../../../../types\";\nimport type { Helper } from \"../../../helpers/const\";\nimport \"../../../helpers/forms/ha-input_boolean-form\";\nimport \"../../../helpers/forms/ha-input_datetime-form\";\nimport \"../../../helpers/forms/ha-input_number-form\";\nimport \"../../../helpers/forms/ha-input_select-form\";\nimport \"../../../helpers/forms/ha-input_text-form\";\nimport \"../../entity-registry-basic-editor\";\nimport type { HaEntityRegistryBasicEditor } from \"../../entity-registry-basic-editor\";\n\nconst HELPERS = {\n  input_boolean: {\n    fetch: fetchInputBoolean,\n    update: updateInputBoolean,\n    delete: deleteInputBoolean,\n  },\n  input_text: {\n    fetch: fetchInputText,\n    update: updateInputText,\n    delete: deleteInputText,\n  },\n  input_number: {\n    fetch: fetchInputNumber,\n    update: updateInputNumber,\n    delete: deleteInputNumber,\n  },\n  input_datetime: {\n    fetch: fetchInputDateTime,\n    update: updateInputDateTime,\n    delete: deleteInputDateTime,\n  },\n  input_select: {\n    fetch: fetchInputSelect,\n    update: updateInputSelect,\n    delete: deleteInputSelect,\n  },\n};\n\n@customElement(\"entity-settings-helper-tab\")\nexport class EntityRegistrySettingsHelper extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public entry!: ExtEntityRegistryEntry;\n\n  @property() public dialogElement!: HaPaperDialog;\n\n  @property() private _error?: string;\n\n  @property() private _item?: Helper | null;\n\n  @property() private _submitting?: boolean;\n\n  @property() private _componentLoaded?: boolean;\n\n  @query(\"ha-registry-basic-editor\")\n  private _registryEditor?: HaEntityRegistryBasicEditor;\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    this._componentLoaded = isComponentLoaded(this.hass, this.entry.platform);\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"entry\")) {\n      this._error = undefined;\n      this._item = undefined;\n      this._getItem();\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (this._item === undefined) {\n      return html``;\n    }\n    const stateObj = this.hass.states[this.entry.entity_id];\n    return html`\n      <paper-dialog-scrollable .dialogElement=${this.dialogElement}>\n        ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n        <div class=\"form\">\n          ${!this._componentLoaded\n            ? this.hass.localize(\n                \"ui.dialogs.helper_settings.platform_not_loaded\",\n                \"platform\",\n                this.entry.platform\n              )\n            : this._item === null\n            ? this.hass.localize(\"ui.dialogs.helper_settings.yaml_not_editable\")\n            : html`\n                <div @value-changed=${this._valueChanged}>\n                  ${dynamicElement(`ha-${this.entry.platform}-form`, {\n                    hass: this.hass,\n                    item: this._item,\n                    entry: this.entry,\n                  })}\n                </div>\n              `}\n          <ha-registry-basic-editor\n            .hass=${this.hass}\n            .entry=${this.entry}\n          ></ha-registry-basic-editor>\n        </div>\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <mwc-button\n          class=\"warning\"\n          @click=${this._confirmDeleteItem}\n          .disabled=${this._submitting ||\n          (!this._item && !stateObj?.attributes.restored)}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.delete\")}\n        </mwc-button>\n        <mwc-button\n          @click=${this._updateItem}\n          .disabled=${this._submitting || (this._item && !this._item.name)}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.update\")}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    this._error = undefined;\n    this._item = ev.detail.value;\n  }\n\n  private async _getItem() {\n    const items = await HELPERS[this.entry.platform].fetch(this.hass!);\n    this._item = items.find((item) => item.id === this.entry.unique_id) || null;\n    await this.updateComplete;\n    fireEvent(this.dialogElement as HTMLElement, \"iron-resize\");\n  }\n\n  private async _updateItem(): Promise<void> {\n    this._submitting = true;\n    try {\n      if (this._componentLoaded && this._item) {\n        await HELPERS[this.entry.platform].update(\n          this.hass!,\n          this._item.id,\n          this._item\n        );\n      }\n      await this._registryEditor?.updateEntry();\n      fireEvent(this, \"close-dialog\");\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _confirmDeleteItem(): Promise<void> {\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.confirm_delete\"\n        ),\n      }))\n    ) {\n      return;\n    }\n\n    this._submitting = true;\n\n    try {\n      if (this._componentLoaded && this._item) {\n        await HELPERS[this.entry.platform].delete(this.hass!, this._item.id);\n      } else {\n        const stateObj = this.hass.states[this.entry.entity_id];\n        if (!stateObj?.attributes.restored) {\n          return;\n        }\n        await removeEntityRegistryEntry(this.hass!, this.entry.entity_id);\n      }\n      fireEvent(this, \"close-dialog\");\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        padding: 0 !important;\n      }\n      .form {\n        padding-bottom: 24px;\n      }\n      .buttons {\n        display: flex;\n        justify-content: space-between;\n        padding: 8px;\n        margin-bottom: -20px;\n      }\n      mwc-button.warning {\n        --mdc-theme-primary: var(--google-red-500);\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .row {\n        margin-top: 8px;\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"entity-platform-helper-tab\": EntityRegistrySettingsHelper;\n  }\n}\n"],"sourceRoot":""}