{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/resources/codemirror.ondemand.ts","webpack:///./src/components/ha-code-editor.ts","webpack:///./src/panels/lovelace/hui-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","loaded","loadCodeMirror","_ref","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Promise","all","e","then","bind","abrupt","stop","apply","this","arguments","_decorate","customElement","_initialize","_UpdatingElement","HaCodeEditor","_UpdatingElement2","_inherits","_super","_createSuper","_this","_classCallCheck","_len","length","args","Array","_key","call","concat","_assertThisInitialized","F","kind","key","decorators","property","_value","codemirror","getValue","shadowRoot","querySelector","_get","_getPrototypeOf","prototype","refresh","autofocus","focus","changedProps","has","setOption","mode","setValue","_calcGutters","_setScrollBarDirection","classList","toggle","error","_load","_load2","codeMirror","_this2","sent","attachShadow","innerHTML","codeMirrorCss","lineNumbers","tabSize","viewportMargin","Infinity","extraKeys","Tab","Shift-Tab","gutters","on","_onChange","newValue","fireEvent","rtl","getWrapperElement","UpdatingElement","lovelaceStruct","title","views","html","_templateObject","_closeEditor","hass","localize","classMap","saved","_saving","_changed","_handleSave","computeRTL","_yamlChanged","yamlEditor","safeDump","lovelace","config","haStyle","css","_templateObject2","getDoc","isClean","_generation","window","onbeforeunload","t0","showConfirmationDialog","text","dismissText","confirmText","closeEditor","_callee2","_context2","deleteConfig","showAlertDialog","_callee3","_context3","confirm","_removeConfig","hasComments","safeLoad","t1","resources","saveConfig","t2","changeGeneration","LitElement"],"mappings":"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","file":"chunk.817f34a1bb58a971a640.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","interface LoadedCodeMirror {\n  codeMirror: any;\n  codeMirrorCss: any;\n}\n\nlet loaded: Promise<LoadedCodeMirror>;\n\nexport const loadCodeMirror = async (): Promise<LoadedCodeMirror> => {\n  if (!loaded) {\n    loaded = import(/* webpackChunkName: \"codemirror\" */ \"./codemirror\");\n  }\n  return loaded;\n};\n","import { Editor } from \"codemirror\";\nimport {\n  customElement,\n  property,\n  PropertyValues,\n  UpdatingElement,\n} from \"lit-element\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { loadCodeMirror } from \"../resources/codemirror.ondemand\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"editor-save\": undefined;\n  }\n}\n\n@customElement(\"ha-code-editor\")\nexport class HaCodeEditor extends UpdatingElement {\n  public codemirror?: Editor;\n\n  @property() public mode?: string;\n\n  @property() public autofocus = false;\n\n  @property() public rtl = false;\n\n  @property() public error = false;\n\n  @property() private _value = \"\";\n\n  public set value(value: string) {\n    this._value = value;\n  }\n\n  public get value(): string {\n    return this.codemirror ? this.codemirror.getValue() : this._value;\n  }\n\n  public get hasComments(): boolean {\n    return !!this.shadowRoot!.querySelector(\"span.cm-comment\");\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    if (!this.codemirror) {\n      return;\n    }\n    this.codemirror.refresh();\n    if (this.autofocus !== false) {\n      this.codemirror.focus();\n    }\n  }\n\n  protected update(changedProps: PropertyValues): void {\n    super.update(changedProps);\n\n    if (!this.codemirror) {\n      return;\n    }\n\n    if (changedProps.has(\"mode\")) {\n      this.codemirror.setOption(\"mode\", this.mode);\n    }\n    if (changedProps.has(\"autofocus\")) {\n      this.codemirror.setOption(\"autofocus\", this.autofocus !== false);\n    }\n    if (changedProps.has(\"_value\") && this._value !== this.value) {\n      this.codemirror.setValue(this._value);\n    }\n    if (changedProps.has(\"rtl\")) {\n      this.codemirror.setOption(\"gutters\", this._calcGutters());\n      this._setScrollBarDirection();\n    }\n    if (changedProps.has(\"error\")) {\n      this.classList.toggle(\"error-state\", this.error);\n    }\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._load();\n  }\n\n  private async _load(): Promise<void> {\n    const loaded = await loadCodeMirror();\n\n    const codeMirror = loaded.codeMirror;\n\n    const shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    shadowRoot!.innerHTML = `\n    <style>\n      ${loaded.codeMirrorCss}\n      .CodeMirror {\n        height: var(--code-mirror-height, auto);\n        direction: var(--code-mirror-direction, ltr);\n      }\n      .CodeMirror-scroll {\n        max-height: var(--code-mirror-max-height, --code-mirror-height);\n      }\n      .CodeMirror-gutters {\n        border-right: 1px solid var(--paper-input-container-color, var(--secondary-text-color));\n        background-color: var(--paper-dialog-background-color, var(--primary-background-color));\n        transition: 0.2s ease border-right;\n      }\n      :host(.error-state) .CodeMirror-gutters {\n        border-color: var(--error-state-color, red);\n      }\n      .CodeMirror-focused .CodeMirror-gutters {\n        border-right: 2px solid var(--paper-input-container-focus-color, var(--primary-color));\n      }\n      .CodeMirror-linenumber {\n        color: var(--paper-dialog-color, var(--primary-text-color));\n      }\n      .rtl .CodeMirror-vscrollbar {\n        right: auto;\n        left: 0px;\n      }\n      .rtl-gutter {\n        width: 20px;\n      }\n    </style>`;\n\n    this.codemirror = codeMirror(shadowRoot, {\n      value: this._value,\n      lineNumbers: true,\n      tabSize: 2,\n      mode: this.mode,\n      autofocus: this.autofocus !== false,\n      viewportMargin: Infinity,\n      extraKeys: {\n        Tab: \"indentMore\",\n        \"Shift-Tab\": \"indentLess\",\n      },\n      gutters: this._calcGutters(),\n    });\n    this._setScrollBarDirection();\n    this.codemirror!.on(\"changes\", () => this._onChange());\n  }\n\n  private _onChange(): void {\n    const newValue = this.value;\n    if (newValue === this._value) {\n      return;\n    }\n    this._value = newValue;\n    fireEvent(this, \"value-changed\", { value: this._value });\n  }\n\n  private _calcGutters(): string[] {\n    return this.rtl ? [\"rtl-gutter\", \"CodeMirror-linenumbers\"] : [];\n  }\n\n  private _setScrollBarDirection(): void {\n    if (this.codemirror) {\n      this.codemirror.getWrapperElement().classList.toggle(\"rtl\", this.rtl);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-code-editor\": HaCodeEditor;\n  }\n}\n","import \"@material/mwc-button\";\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { safeDump, safeLoad } from \"js-yaml\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { computeRTL } from \"../../common/util/compute_rtl\";\nimport \"../../components/ha-code-editor\";\nimport type { HaCodeEditor } from \"../../components/ha-code-editor\";\nimport \"../../components/ha-icon\";\nimport type { LovelaceConfig } from \"../../data/lovelace\";\nimport {\n  showAlertDialog,\n  showConfirmationDialog,\n} from \"../../dialogs/generic/show-dialog-box\";\nimport { haStyle } from \"../../resources/styles\";\nimport type { HomeAssistant } from \"../../types\";\nimport { struct } from \"./common/structs/struct\";\nimport type { Lovelace } from \"./types\";\n\nconst lovelaceStruct = struct.interface({\n  title: \"string?\",\n  views: [\"object\"],\n});\n\n@customElement(\"hui-editor\")\nclass LovelaceFullConfigEditor extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public lovelace?: Lovelace;\n\n  @property() public closeEditor?: () => void;\n\n  @property() private _saving?: boolean;\n\n  @property() private _changed?: boolean;\n\n  private _generation = 1;\n\n  public render(): TemplateResult | void {\n    return html`\n      <app-header-layout>\n        <app-header>\n          <app-toolbar>\n            <paper-icon-button\n              icon=\"hass:close\"\n              @click=\"${this._closeEditor}\"\n            ></paper-icon-button>\n            <div main-title>\n              ${this.hass!.localize(\n                \"ui.panel.lovelace.editor.raw_editor.header\"\n              )}\n            </div>\n            <div\n              class=\"save-button\n              ${classMap({\n                saved: this._saving! === false || this._changed === true,\n              })}\"\n            >\n              ${this._changed\n                ? this.hass!.localize(\n                    \"ui.panel.lovelace.editor.raw_editor.unsaved_changes\"\n                  )\n                : this.hass!.localize(\n                    \"ui.panel.lovelace.editor.raw_editor.saved\"\n                  )}\n            </div>\n            <mwc-button\n              raised\n              @click=\"${this._handleSave}\"\n              .disabled=${!this._changed}\n              >${this.hass!.localize(\n                \"ui.panel.lovelace.editor.raw_editor.save\"\n              )}</mwc-button\n            >\n          </app-toolbar>\n        </app-header>\n        <div class=\"content\">\n          <ha-code-editor\n            mode=\"yaml\"\n            autofocus\n            .rtl=${computeRTL(this.hass)}\n            .hass=${this.hass}\n            @value-changed=\"${this._yamlChanged}\"\n            @editor-save=\"${this._handleSave}\"\n          >\n          </ha-code-editor>\n        </div>\n      </app-header-layout>\n    `;\n  }\n\n  protected firstUpdated() {\n    this.yamlEditor.value = safeDump(this.lovelace!.config);\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        :host {\n          --code-mirror-height: 100%;\n        }\n\n        app-header-layout {\n          height: 100vh;\n        }\n\n        app-toolbar {\n          background-color: var(--dark-background-color, #455a64);\n          color: var(--dark-text-color);\n        }\n\n        mwc-button[disabled] {\n          background-color: var(--mdc-theme-on-primary);\n          border-radius: 4px;\n        }\n\n        .comments {\n          font-size: 16px;\n        }\n\n        .content {\n          height: calc(100vh - 68px);\n        }\n\n        hui-code-editor {\n          height: 100%;\n        }\n\n        .save-button {\n          opacity: 0;\n          font-size: 14px;\n          padding: 0px 10px;\n        }\n\n        .saved {\n          opacity: 1;\n        }\n      `,\n    ];\n  }\n\n  private _yamlChanged() {\n    this._changed = !this.yamlEditor\n      .codemirror!.getDoc()\n      .isClean(this._generation);\n    if (this._changed && !window.onbeforeunload) {\n      window.onbeforeunload = () => {\n        return true;\n      };\n    } else if (!this._changed && window.onbeforeunload) {\n      window.onbeforeunload = null;\n    }\n  }\n\n  private async _closeEditor() {\n    if (\n      this._changed &&\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.lovelace.editor.raw_editor.confirm_unsaved_changes\"\n        ),\n        dismissText: this.hass!.localize(\"ui.common.no\"),\n        confirmText: this.hass!.localize(\"ui.common.yes\"),\n      }))\n    ) {\n      return;\n    }\n\n    window.onbeforeunload = null;\n    if (this.closeEditor) {\n      this.closeEditor();\n    }\n  }\n\n  private async _removeConfig() {\n    try {\n      await this.lovelace!.deleteConfig();\n    } catch (err) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.lovelace.editor.raw_editor.error_remove\",\n          \"error\",\n          err\n        ),\n      });\n    }\n    window.onbeforeunload = null;\n    if (this.closeEditor) {\n      this.closeEditor();\n    }\n  }\n\n  private async _handleSave() {\n    this._saving = true;\n\n    const value = this.yamlEditor.value;\n\n    if (!value) {\n      showConfirmationDialog(this, {\n        title: this.hass.localize(\n          \"ui.panel.lovelace.editor.raw_editor.confirm_remove_config_title\"\n        ),\n        text: this.hass.localize(\n          \"ui.panel.lovelace.editor.raw_editor.confirm_remove_config_text\"\n        ),\n        confirmText: this.hass.localize(\"ui.common.yes\"),\n        dismissText: this.hass.localize(\"ui.common.no\"),\n        confirm: () => this._removeConfig(),\n      });\n      return;\n    }\n\n    if (this.yamlEditor.hasComments) {\n      if (\n        !confirm(\n          this.hass.localize(\n            \"ui.panel.lovelace.editor.raw_editor.confirm_unsaved_comments\"\n          )\n        )\n      ) {\n        return;\n      }\n    }\n\n    let config: LovelaceConfig;\n    try {\n      config = safeLoad(value);\n    } catch (err) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.lovelace.editor.raw_editor.error_parse_yaml\",\n          \"error\",\n          err\n        ),\n      });\n      this._saving = false;\n      return;\n    }\n    try {\n      config = lovelaceStruct(config);\n    } catch (err) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.lovelace.editor.raw_editor.error_invalid_config\",\n          \"error\",\n          err\n        ),\n      });\n      return;\n    }\n    // @ts-ignore\n    if (config.resources) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.lovelace.editor.raw_editor.resources_moved\"\n        ),\n      });\n    }\n    try {\n      await this.lovelace!.saveConfig(config);\n    } catch (err) {\n      showAlertDialog(this, {\n        text: this.hass.localize(\n          \"ui.panel.lovelace.editor.raw_editor.error_save_yaml\",\n          \"error\",\n          err\n        ),\n      });\n    }\n    this._generation = this.yamlEditor\n      .codemirror!.getDoc()\n      .changeGeneration(true);\n    window.onbeforeunload = null;\n    this._saving = false;\n    this._changed = false;\n  }\n\n  private get yamlEditor(): HaCodeEditor {\n    return this.shadowRoot!.querySelector(\"ha-code-editor\")! as HaCodeEditor;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-editor\": LovelaceFullConfigEditor;\n  }\n}\n"],"sourceRoot":""}