{"version":3,"sources":["webpack:///./src/panels/config/entities/entity-registry-basic-editor.ts","webpack:///./src/panels/config/entities/editor-tabs/settings/entity-settings-helper-tab.ts"],"names":["_decorate","customElement","_initialize","_LitElement","HaEntityRegistryBasicEditor","_LitElement2","_inherits","_super","_createSuper","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","F","d","kind","decorators","property","key","value","_updateEntry","regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","_submitting","new_entity_id","_entityId","trim","_disabledBy","disabled_by","updateEntityRegistryEntry","hass","_origEntityId","finish","stop","changedProperties","_get","_getPrototypeOf","prototype","has","entry","entity_id","html","_templateObject","invalidDomainUpdate","computeDomain","_templateObject2","_entityIdChanged","localize","_disabledByChanged","ev","detail","target","checked","static","css","_templateObject3","LitElement","HELPERS","input_boolean","fetch","fetchInputBoolean","update","updateInputBoolean","delete","deleteInputBoolean","input_text","fetchInputText","updateInputText","deleteInputText","input_number","fetchInputNumber","updateInputNumber","deleteInputNumber","input_datetime","fetchInputDateTime","updateInputDateTime","deleteInputDateTime","input_select","fetchInputSelect","updateInputSelect","deleteInputSelect","EntityRegistrySettingsHelper","entity_settings_helper_tab_decorate","entity_settings_helper_tab_inherits","entity_settings_helper_tab_createSuper","entity_settings_helper_tab_classCallCheck","entity_settings_helper_tab_assertThisInitialized","query","entity_settings_helper_tab_get","entity_settings_helper_tab_getPrototypeOf","_componentLoaded","isComponentLoaded","platform","_error","undefined","_item","_getItem","entity_settings_helper_tab_templateObject","stateObj","states","entity_settings_helper_tab_templateObject2","dialogElement","entity_settings_helper_tab_templateObject3","_templateObject4","_valueChanged","dynamicElement","item","_confirmDeleteItem","attributes","restored","_updateItem","name","_getItem2","entity_settings_helper_tab_asyncToGenerator","items","_this2","sent","find","id","unique_id","updateComplete","fireEvent","_updateItem2","_callee2","_this$_registryEditor","_context2","_registryEditor","updateEntry","t0","message","_confirmDeleteItem2","_callee3","_context3","showConfirmationDialog","text","abrupt","removeEntityRegistryEntry","_templateObject5"],"mappings":"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","file":"chunk.679acba412b05b0f5dd3.js","sourcesContent":["import \"@polymer/paper-input/paper-input\";\nimport {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n} from \"lit-element\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport \"../../../components/ha-switch\";\nimport type { HaSwitch } from \"../../../components/ha-switch\";\nimport {\n  EntityRegistryEntryUpdateParams,\n  ExtEntityRegistryEntry,\n  updateEntityRegistryEntry,\n} from \"../../../data/entity_registry\";\nimport type { PolymerChangedEvent } from \"../../../polymer-types\";\nimport type { HomeAssistant } from \"../../../types\";\n\n@customElement(\"ha-registry-basic-editor\")\nexport class HaEntityRegistryBasicEditor extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public entry!: ExtEntityRegistryEntry;\n\n  @property() private _origEntityId!: string;\n\n  @property() private _entityId!: string;\n\n  @property() private _disabledBy!: string | null;\n\n  @property() private _submitting?: boolean;\n\n  public async updateEntry(): Promise<void> {\n    this._submitting = true;\n    const params: Partial<EntityRegistryEntryUpdateParams> = {\n      new_entity_id: this._entityId.trim(),\n    };\n    if (this._disabledBy === null || this._disabledBy === \"user\") {\n      params.disabled_by = this._disabledBy;\n    }\n    try {\n      await updateEntityRegistryEntry(this.hass!, this._origEntityId, params);\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (!changedProperties.has(\"entry\")) {\n      return;\n    }\n    if (this.entry) {\n      this._origEntityId = this.entry.entity_id;\n      this._entityId = this.entry.entity_id;\n      this._disabledBy = this.entry.disabled_by;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      !this.entry ||\n      this.entry.entity_id !== this._origEntityId\n    ) {\n      return html``;\n    }\n    const invalidDomainUpdate =\n      computeDomain(this._entityId.trim()) !==\n      computeDomain(this.entry.entity_id);\n\n    return html`\n      <paper-input\n        .value=${this._entityId}\n        @value-changed=${this._entityIdChanged}\n        .label=${this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.entity_id\"\n        )}\n        error-message=\"Domain needs to stay the same\"\n        .invalid=${invalidDomainUpdate}\n        .disabled=${this._submitting}\n      ></paper-input>\n      <div class=\"row\">\n        <ha-switch\n          .checked=${!this._disabledBy}\n          @change=${this._disabledByChanged}\n        >\n          <div>\n            <div>\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.enabled_label\"\n              )}\n            </div>\n            <div class=\"secondary\">\n              ${this._disabledBy && this._disabledBy !== \"user\"\n                ? this.hass.localize(\n                    \"ui.dialogs.entity_registry.editor.enabled_cause\",\n                    \"cause\",\n                    this.hass.localize(\n                      `config_entry.disabled_by.${this._disabledBy}`\n                    )\n                  )\n                : \"\"}\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.enabled_description\"\n              )}\n              <br />${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.note\"\n              )}\n            </div>\n          </div>\n        </ha-switch>\n      </div>\n    `;\n  }\n\n  private _entityIdChanged(ev: PolymerChangedEvent<string>): void {\n    this._entityId = ev.detail.value;\n  }\n\n  private _disabledByChanged(ev: Event): void {\n    this._disabledBy = (ev.target as HaSwitch).checked ? null : \"user\";\n  }\n\n  static get styles() {\n    return css`\n      .row {\n        margin-top: 8px;\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../../../common/config/is_component_loaded\";\nimport { dynamicElement } from \"../../../../../common/dom/dynamic-element-directive\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { HaPaperDialog } from \"../../../../../components/dialog/ha-paper-dialog\";\nimport {\n  ExtEntityRegistryEntry,\n  removeEntityRegistryEntry,\n} from \"../../../../../data/entity_registry\";\nimport {\n  deleteInputBoolean,\n  fetchInputBoolean,\n  updateInputBoolean,\n} from \"../../../../../data/input_boolean\";\nimport {\n  deleteInputDateTime,\n  fetchInputDateTime,\n  updateInputDateTime,\n} from \"../../../../../data/input_datetime\";\nimport {\n  deleteInputNumber,\n  fetchInputNumber,\n  updateInputNumber,\n} from \"../../../../../data/input_number\";\nimport {\n  deleteInputSelect,\n  fetchInputSelect,\n  updateInputSelect,\n} from \"../../../../../data/input_select\";\nimport {\n  deleteInputText,\n  fetchInputText,\n  updateInputText,\n} from \"../../../../../data/input_text\";\nimport { showConfirmationDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport type { HomeAssistant } from \"../../../../../types\";\nimport type { Helper } from \"../../../helpers/const\";\nimport \"../../../helpers/forms/ha-input_boolean-form\";\nimport \"../../../helpers/forms/ha-input_datetime-form\";\nimport \"../../../helpers/forms/ha-input_number-form\";\nimport \"../../../helpers/forms/ha-input_select-form\";\nimport \"../../../helpers/forms/ha-input_text-form\";\nimport \"../../entity-registry-basic-editor\";\nimport type { HaEntityRegistryBasicEditor } from \"../../entity-registry-basic-editor\";\n\nconst HELPERS = {\n  input_boolean: {\n    fetch: fetchInputBoolean,\n    update: updateInputBoolean,\n    delete: deleteInputBoolean,\n  },\n  input_text: {\n    fetch: fetchInputText,\n    update: updateInputText,\n    delete: deleteInputText,\n  },\n  input_number: {\n    fetch: fetchInputNumber,\n    update: updateInputNumber,\n    delete: deleteInputNumber,\n  },\n  input_datetime: {\n    fetch: fetchInputDateTime,\n    update: updateInputDateTime,\n    delete: deleteInputDateTime,\n  },\n  input_select: {\n    fetch: fetchInputSelect,\n    update: updateInputSelect,\n    delete: deleteInputSelect,\n  },\n};\n\n@customElement(\"entity-settings-helper-tab\")\nexport class EntityRegistrySettingsHelper extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public entry!: ExtEntityRegistryEntry;\n\n  @property() public dialogElement!: HaPaperDialog;\n\n  @property() private _error?: string;\n\n  @property() private _item?: Helper | null;\n\n  @property() private _submitting?: boolean;\n\n  @property() private _componentLoaded?: boolean;\n\n  @query(\"ha-registry-basic-editor\")\n  private _registryEditor?: HaEntityRegistryBasicEditor;\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    this._componentLoaded = isComponentLoaded(this.hass, this.entry.platform);\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"entry\")) {\n      this._error = undefined;\n      this._item = undefined;\n      this._getItem();\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (this._item === undefined) {\n      return html``;\n    }\n    const stateObj = this.hass.states[this.entry.entity_id];\n    return html`\n      <paper-dialog-scrollable .dialogElement=${this.dialogElement}>\n        ${this._error ? html` <div class=\"error\">${this._error}</div> ` : \"\"}\n        <div class=\"form\">\n          ${!this._componentLoaded\n            ? this.hass.localize(\n                \"ui.dialogs.helper_settings.platform_not_loaded\",\n                \"platform\",\n                this.entry.platform\n              )\n            : this._item === null\n            ? this.hass.localize(\"ui.dialogs.helper_settings.yaml_not_editable\")\n            : html`\n                <div @value-changed=${this._valueChanged}>\n                  ${dynamicElement(`ha-${this.entry.platform}-form`, {\n                    hass: this.hass,\n                    item: this._item,\n                    entry: this.entry,\n                  })}\n                </div>\n              `}\n          <ha-registry-basic-editor\n            .hass=${this.hass}\n            .entry=${this.entry}\n          ></ha-registry-basic-editor>\n        </div>\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <mwc-button\n          class=\"warning\"\n          @click=${this._confirmDeleteItem}\n          .disabled=${this._submitting ||\n          (!this._item && !stateObj?.attributes.restored)}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.delete\")}\n        </mwc-button>\n        <mwc-button\n          @click=${this._updateItem}\n          .disabled=${this._submitting || (this._item && !this._item.name)}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.update\")}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    this._error = undefined;\n    this._item = ev.detail.value;\n  }\n\n  private async _getItem() {\n    const items = await HELPERS[this.entry.platform].fetch(this.hass!);\n    this._item = items.find((item) => item.id === this.entry.unique_id) || null;\n    await this.updateComplete;\n    fireEvent(this.dialogElement as HTMLElement, \"iron-resize\");\n  }\n\n  private async _updateItem(): Promise<void> {\n    this._submitting = true;\n    try {\n      if (this._componentLoaded && this._item) {\n        await HELPERS[this.entry.platform].update(\n          this.hass!,\n          this._item.id,\n          this._item\n        );\n      }\n      await this._registryEditor?.updateEntry();\n      fireEvent(this, \"close-dialog\");\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _confirmDeleteItem(): Promise<void> {\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.confirm_delete\"\n        ),\n      }))\n    ) {\n      return;\n    }\n\n    this._submitting = true;\n\n    try {\n      if (this._componentLoaded && this._item) {\n        await HELPERS[this.entry.platform].delete(this.hass!, this._item.id);\n      } else {\n        const stateObj = this.hass.states[this.entry.entity_id];\n        if (!stateObj?.attributes.restored) {\n          return;\n        }\n        await removeEntityRegistryEntry(this.hass!, this.entry.entity_id);\n      }\n      fireEvent(this, \"close-dialog\");\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        padding: 0 !important;\n      }\n      .form {\n        padding-bottom: 24px;\n      }\n      .buttons {\n        display: flex;\n        justify-content: space-between;\n        padding: 8px;\n        margin-bottom: -20px;\n      }\n      mwc-button.warning {\n        --mdc-theme-primary: var(--google-red-500);\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .row {\n        margin-top: 8px;\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"entity-platform-helper-tab\": EntityRegistrySettingsHelper;\n  }\n}\n"],"sourceRoot":""}