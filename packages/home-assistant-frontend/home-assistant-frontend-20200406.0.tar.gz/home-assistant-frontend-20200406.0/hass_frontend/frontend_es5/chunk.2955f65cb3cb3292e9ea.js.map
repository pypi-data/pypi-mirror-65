{"version":3,"sources":["webpack:///./src/panels/developer-tools/logs/error-log-card.ts","webpack:///./src/data/error_log.ts","webpack:///./src/panels/lovelace/cards/hui-safe-mode-card.ts"],"names":["ErrorLogCard","property","html","_templateObject","this","_errorLog","_templateObject2","_refreshErrorLog","_templateObject3","hass","localize","changedProps","_this$hass","_get","_getPrototypeOf","prototype","call","config","safe_mode","css","_templateObject4","_callee","log","regeneratorRuntime","wrap","_context","prev","next","callApi","sent","stop","LitElement","customElements","define","HuiSafeModeCard","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","apply","concat","_assertThisInitialized","_inherits","d","kind","decorators","key","value","_config","static"],"mappings":"owGAcMA,48MACHC,kEACAA,+EAED,WACE,OAAOC,YAAPC,IAEMC,KAAKC,UACHH,YADFI,IAIeF,KAAKG,kBAGlBL,YAPFM,IAQgCJ,KAAKG,iBAC7BH,KAAKK,KAAKC,SACV,qDAKaN,KAAKC,qDAIlC,SAAuBM,GAAc,IAAAC,EACnCC,EAAAC,EA3BEd,EA2BFe,WAAA,eAAAX,MAAAY,KAAAZ,KAAmBO,IAEnB,QAAAC,EAAIR,KAAKK,YAAT,IAAAG,OAAA,EAAIA,EAAWK,OAAOC,YACpBd,KAAKG,8DAIT,WACE,OAAOY,YAAPC,iGAmBF,SAAAC,IAAA,IAAAC,EAAA,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACEvB,KAAKC,UAAYD,KAAKK,KAAKC,SACzB,kDAFJe,EAAAE,KAAA,EAIkCvB,KAAKK,KCrElCmB,QAAgB,MAAO,aDiE5B,OAIQN,EAJRG,EAAAI,KAKEzB,KAAKC,UACHiB,GAAOlB,KAAKK,KAAKC,SAAS,gDAN9B,wBAAAe,EAAAK,SAAAT,EAAAjB,8OAtDyB2B,KAgE3BC,eAAeC,OAAO,iBAAkBjC,w8EE7DjC,IAAMkC,80LAAbC,CAAA,CADCC,YAAc,uBACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAAN,IAAA,IAAAO,EAAAC,mGAAAC,CAAAvC,KAAA8B,GAAA,QAAAU,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,SAAA7C,KAAAsC,OAAAD,EAAA3B,EAAAoB,IAAAlB,KAAAkC,MAAAT,EAAA,CAAArC,MAAA+C,OAAAJ,mDAAAV,EAAAe,EAAAV,MAAA,yOAAAW,CAAAnB,EAAAI,GAAAJ,EAAA,GAAAoB,EAAA,EAAAC,KAAA,QAAAC,WAAA,CACGvD,eADHwD,IAAA,OAAAC,WAAA,IAAAH,KAAA,SAAAE,IAAA,cAAAC,MAGE,WACE,OAAO,IAJX,CAAAH,KAAA,SAAAE,IAAA,YAAAC,MAOE,SAAiBC,MAPnB,CAAAJ,KAAA,SAAAE,IAAA,SAAAC,MAWE,WACE,OAAOxD,YAAPC,IAEcC,KAAKK,KAAMC,SACnB,4CAIEN,KAAKK,KAAMC,SACX,iDAGoBN,KAAKK,QAvBrC,CAAA8C,KAAA,MAAAK,QAAA,EAAAH,IAAA,SAAAC,MA4BE,WACE,OAAOvC,YAAPb,UA7BiCyB","file":"chunk.2955f65cb3cb3292e9ea.js","sourcesContent":["import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  TemplateResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fetchErrorLog } from \"../../../data/error_log\";\n\nclass ErrorLogCard extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _errorLog?: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <p class=\"error-log-intro\">\n        ${this._errorLog\n          ? html`\n              <paper-icon-button\n                icon=\"hass:refresh\"\n                @click=${this._refreshErrorLog}\n              ></paper-icon-button>\n            `\n          : html`\n              <mwc-button raised @click=${this._refreshErrorLog}>\n                ${this.hass.localize(\n                  \"ui.panel.developer-tools.tabs.logs.load_full_log\"\n                )}\n              </mwc-button>\n            `}\n      </p>\n      <div class=\"error-log\">${this._errorLog}</div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n\n    if (this.hass?.config.safe_mode) {\n      this._refreshErrorLog();\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error-log-intro {\n        text-align: center;\n        margin: 16px;\n      }\n\n      paper-icon-button {\n        float: right;\n      }\n\n      .error-log {\n        @apply --paper-font-code)\n          clear: both;\n        white-space: pre-wrap;\n        margin: 16px;\n      }\n    `;\n  }\n\n  private async _refreshErrorLog(): Promise<void> {\n    this._errorLog = this.hass.localize(\n      \"ui.panel.developer-tools.tabs.logs.loading_log\"\n    );\n    const log = await fetchErrorLog(this.hass!);\n    this._errorLog =\n      log || this.hass.localize(\"ui.panel.developer-tools.tabs.logs.no_errors\");\n  }\n}\n\ncustomElements.define(\"error-log-card\", ErrorLogCard);\n","import { HomeAssistant } from \"../types\";\n\nexport const fetchErrorLog = (hass: HomeAssistant) =>\n  hass.callApi<string>(\"GET\", \"error_log\");\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../panels/developer-tools/logs/error-log-card\";\nimport { LovelaceCard } from \"../types\";\nimport { HomeAssistant } from \"../../../types\";\n\n@customElement(\"hui-safe-mode-card\")\nexport class HuiSafeModeCard extends LitElement implements LovelaceCard {\n  @property() public hass?: HomeAssistant;\n\n  public getCardSize(): number {\n    return 3;\n  }\n\n  public setConfig(_config: any): void {\n    // No config necessary.\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-card\n        .header=${this.hass!.localize(\n          \"ui.panel.lovelace.cards.safe-mode.header\"\n        )}\n      >\n        <div class=\"card-content\">\n          ${this.hass!.localize(\n            \"ui.panel.lovelace.cards.safe-mode.description\"\n          )}\n        </div>\n        <error-log-card .hass=${this.hass}></error-log-card>\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        --ha-card-header-color: var(--primary-color);\n      }\n      error-log-card {\n        display: block;\n        padding-bottom: 16px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-safe-mode-card\": HuiSafeModeCard;\n  }\n}\n"],"sourceRoot":""}