{"version":3,"sources":["webpack:///./src/common/navigate.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/zone.ts","webpack:///./src/data/core.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["__webpack_require__","d","__webpack_exports__","navigate","_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","_node","path","replace","arguments","length","undefined","history","replaceState","pushState","fireEvent","window","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","setupLeafletMap","_ref","regeneratorRuntime","mark","_callee","mapElement","darkMode","draw","Leaflet","map","style","_args","wrap","_context","prev","next","parentNode","Error","e","then","t","bind","sent","Icon","Default","imagePath","document","createElement","setAttribute","appendChild","setView","createTileLayer","addTo","abrupt","stop","_x","apply","this","leaflet","tileLayer","concat","Browser","retina","attribution","subdomains","minZoom","maxZoom","defaultRadiusColor","homeRadiusColor","passiveRadiusColor","fetchZones","createZone","updateZone","deleteZone","showZoneEditor","getZoneEditorInitData","inititialZoneEditorData","_common_navigate__WEBPACK_IMPORTED_MODULE_0__","hass","callWS","type","values","Object","assign","zoneId","updates","zone_id","el","data","saveCoreConfig","detectCoreConfig","customElement","LocationEditor","property","_leafletMap","location","_locationMarker","getBounds","fitBounds","fitZoom","_ignoreFitToMap","html","_templateObject","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","has","_updateMarker","fitMap","_updateRadius","_updateRadiusColor","_updateIcon","shadowRoot","querySelector","_ref2","_this2","_mapEl","Boolean","radius","_slicedToArray","addEventListener","ev","_locationUpdated","latlng","invalidateSize","longitude","lng","Math","abs","lat","bubbles","getRadius","icon","iconHTML","outerHTML","_iconEl","divIcon","iconSize","className","_setIcon","editing","_moveMarker","setIcon","_this3","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","_callee2","_this4","_context2","remove","setLatLng","disable","_setupEdit","circle","color","radiusColor","addLayer","marker","draggable","setRadius","setStyle","css","_templateObject2","LitElement","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","timezones","forEach","key","option","value","innerHTML","amsterdam","OnboardingCoreConfig","onboardingLocalize","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","latitude","Number","elevation","String","unit_system","time_zone","t0","alert","message","finish","result","preventDefault","location_name","onboardCoreConfigStep"],"mappings":"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","file":"chunk.3bd1dd12f064256d06e9.js","sourcesContent":["import { fireEvent } from \"./dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"location-changed\": {\n      replace: boolean;\n    };\n  }\n}\n\nexport const navigate = (\n  _node: any,\n  path: string,\n  replace: boolean = false\n) => {\n  if (__DEMO__) {\n    if (replace) {\n      history.replaceState(null, \"\", `${location.pathname}#${path}`);\n    } else {\n      window.location.hash = path;\n    }\n  } else {\n    if (replace) {\n      history.replaceState(null, \"\", path);\n    } else {\n      history.pushState(null, \"\", path);\n    }\n  }\n  fireEvent(window, \"location-changed\", {\n    replace,\n  });\n};\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\nexport type LeafletDrawModuleType = typeof import(\"leaflet-draw\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false,\n  draw = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  if (draw) {\n    await import(/* webpackChunkName: \"leaflet-draw\" */ \"leaflet-draw\");\n  }\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { HomeAssistant } from \"../types\";\nimport { navigate } from \"../common/navigate\";\n\nexport const defaultRadiusColor = \"#FF9800\";\nexport const homeRadiusColor: string = \"#03a9f4\";\nexport const passiveRadiusColor: string = \"#9b9b9b\";\n\nexport interface Zone {\n  id: string;\n  name: string;\n  icon?: string;\n  latitude: number;\n  longitude: number;\n  passive?: boolean;\n  radius?: number;\n}\n\nexport interface ZoneMutableParams {\n  icon: string;\n  latitude: number;\n  longitude: number;\n  name: string;\n  passive: boolean;\n  radius: number;\n}\n\nexport const fetchZones = (hass: HomeAssistant) =>\n  hass.callWS<Zone[]>({ type: \"zone/list\" });\n\nexport const createZone = (hass: HomeAssistant, values: ZoneMutableParams) =>\n  hass.callWS<Zone>({\n    type: \"zone/create\",\n    ...values,\n  });\n\nexport const updateZone = (\n  hass: HomeAssistant,\n  zoneId: string,\n  updates: Partial<ZoneMutableParams>\n) =>\n  hass.callWS<Zone>({\n    type: \"zone/update\",\n    zone_id: zoneId,\n    ...updates,\n  });\n\nexport const deleteZone = (hass: HomeAssistant, zoneId: string) =>\n  hass.callWS({\n    type: \"zone/delete\",\n    zone_id: zoneId,\n  });\n\nlet inititialZoneEditorData: Partial<ZoneMutableParams> | undefined;\n\nexport const showZoneEditor = (\n  el: HTMLElement,\n  data?: Partial<ZoneMutableParams>\n) => {\n  inititialZoneEditorData = data;\n  navigate(el, \"/config/zone/new\");\n};\n\nexport const getZoneEditorInitData = () => {\n  const data = inititialZoneEditorData;\n  inititialZoneEditorData = undefined;\n  return data;\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport {\n  Marker,\n  Map,\n  LeafletMouseEvent,\n  DragEndEvent,\n  LatLng,\n  Circle,\n  DivIcon,\n} from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { defaultRadiusColor } from \"../../data/zone\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  @property() public radius?: number;\n  @property() public radiusColor?: string;\n  @property() public icon?: string;\n  public fitZoom = 16;\n  private _iconEl?: DivIcon;\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"radiusColor\")) {\n      this._updateRadiusColor();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: this.radiusColor || defaultRadiusColor,\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  private _updateRadiusColor(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setStyle({ color: this.radiusColor });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .light {\n        color: #000000;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(`Failed to save: ${err.message}`);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}