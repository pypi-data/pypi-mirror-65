# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"ToTensor": "000_utils.ipynb",
         "ToArray": "000_utils.ipynb",
         "To3DTensor": "000_utils.ipynb",
         "To2DTensor": "000_utils.ipynb",
         "To1DTensor": "000_utils.ipynb",
         "To3DArray": "000_utils.ipynb",
         "To2DArray": "000_utils.ipynb",
         "To1DArray": "000_utils.ipynb",
         "To3D": "000_utils.ipynb",
         "To2D": "000_utils.ipynb",
         "To1D": "000_utils.ipynb",
         "To2DPlus": "000_utils.ipynb",
         "To3DPlus": "000_utils.ipynb",
         "To2DPlusTensor": "000_utils.ipynb",
         "To2DPlusArray": "000_utils.ipynb",
         "To3DPlusTensor": "000_utils.ipynb",
         "To3DPlusArray": "000_utils.ipynb",
         "Todtype": "000_utils.ipynb",
         "bytes2size": "000_utils.ipynb",
         "bytes2GB": "000_utils.ipynb",
         "delete_all_in_dir": "000_utils.ipynb",
         "reverse_dict": "000_utils.ipynb",
         "is_tuple": "000_utils.ipynb",
         "itemify": "000_utils.ipynb",
         "is_none": "000_utils.ipynb",
         "ifisnone": "000_utils.ipynb",
         "ifnoneelse": "000_utils.ipynb",
         "ifisnoneelse": "000_utils.ipynb",
         "ifelse": "000_utils.ipynb",
         "stack": "000_utils.ipynb",
         "cycle_dl": "000_utils.ipynb",
         "device": "000_utils.ipynb",
         "defaults.device": "000_utils.ipynb",
         "cpus": "000_utils.ipynb",
         "decompress_from_url": "001_data.ipynb",
         "get_UCR_univariate_list": "001_data.ipynb",
         "get_UCR_multivariate_list": "001_data.ipynb",
         "stack_padding": "001_data.ipynb",
         "get_UCR_data": "001_data.ipynb",
         "np_convert": "001_data.ipynb",
         "np_collate": "001_data.ipynb",
         "np_str_obj_array_pattern": "001_data.ipynb",
         "np_collate_err_msg_format": "001_data.ipynb",
         "NumpyTensor": "002_core.ipynb",
         "ToNumpyTensor": "002_core.ipynb",
         "TSTensor": "002_core.ipynb",
         "ToTSTensor": "002_core.ipynb",
         "NumpyTensorBlock": "002_core.ipynb",
         "TSTensorBlock": "002_core.ipynb",
         "Dataset": "002_core.ipynb",
         "NumpyDataset": "002_core.ipynb",
         "TSDataset": "002_core.ipynb",
         "NumpyDatasets": "002_core.ipynb",
         "TSDatasets": "002_core.ipynb",
         "add_ds": "002_core.ipynb",
         "NumpyDatasets.add_test": "002_core.ipynb",
         "NumpyDatasets.add_unlabeled": "002_core.ipynb",
         "NumpyDataLoader": "002_core.ipynb",
         "show_tuple": "002_core.ipynb",
         "TSDataLoader": "002_core.ipynb",
         "NumpyDataLoaders": "002_core.ipynb",
         "TSDataLoaders": "002_core.ipynb",
         "save_all": "002_core.ipynb",
         "load_learner_all": "002_core.ipynb",
         "Learner.save_all": "002_core.ipynb",
         "generate_kernels": "003_rocket_functions.ipynb",
         "apply_kernel": "003_rocket_functions.ipynb",
         "apply_kernels": "003_rocket_functions.ipynb",
         "ROCKET": "003_rocket_functions.ipynb",
         "noop": "102_InceptionTime.ipynb",
         "same_padding1d": "100_layers.ipynb",
         "ZeroPad1d": "100_layers.ipynb",
         "ConvSP1d": "100_layers.ipynb",
         "convlayer": "100_layers.ipynb",
         "CoordConv1D": "100_layers.ipynb",
         "LambdaPlus": "100_layers.ipynb",
         "Flatten": "100_layers.ipynb",
         "Squeeze": "100_layers.ipynb",
         "Unsqueeze": "100_layers.ipynb",
         "YRange": "100_layers.ipynb",
         "Temp": "100_layers.ipynb",
         "ResBlock": "101_ResNet.ipynb",
         "ResNet": "101_ResNet.ipynb",
         "shortcut": "102_InceptionTime.ipynb",
         "Inception": "102_InceptionTime.ipynb",
         "InceptionBlock": "102_InceptionTime.ipynb",
         "InceptionTime": "102_InceptionTime.ipynb"}

modules = ["utils.py",
           "data.py",
           "core.py",
           "rocket_functions.py",
           "models/layers.py",
           "models/ResNet.py",
           "models/InceptionTime.py"]

doc_url = "https://timeseriesai.github.io/timeseriesAI//"

git_url = "https://github.com/timeseriesAI/timeseriesAI/tree/master/"

def custom_doc_links(name): return None
