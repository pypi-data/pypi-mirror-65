################################################################################
################################################################################
###
###  This file is automatically generated. Do not change this file! Changes
###  will get overwritten! Change the source file for "setup.py" instead.
###  This is either 'packageinfo.json' or 'packageinfo.jsonc'
###
################################################################################
################################################################################


from setuptools import setup

def readme():
	with open("README.md", "r", encoding="UTF-8-sig") as f:
		return f.read()

setup(
	author = "JÃ¼rgen Knauth",
	author_email = "pubsrc@binary-overflow.de",
	classifiers = [
		"Development Status :: 3 - Alpha",
		"License :: OSI Approved :: Apache Software License",
	],
	description = "This python module provides support for creating and processing trees with informational data values. These data trees structure various values such as text strings, classic numerical values, values with units, timestamps and other kinds of values in a specific hierachical way. These can then be transformed and analysed e.g. to produce overview or detailed output.",
	download_url = "https://github.com/jkpubsrc/python-module-jk-infodatatree/tarball/0.2020.4.6",
	include_package_data = False,
	install_requires = [
		"jk_flexdata",
		"jk_utils",
	],
	keywords = [
		"json",
		"data",
		"jinja2",
	],
	license = "Apache 2.0",
	name = "jk_infodatatree",
	packages = [
		"jk_infodatatree",
		"jk_infodatatree.chk",
	],
	url = "https://github.com/jkpubsrc/python-module-jk-infodatatree",
	version = "0.2020.4.6",
	zip_safe = False,
	long_description = readme(),
	long_description_content_type="text/markdown",
)
